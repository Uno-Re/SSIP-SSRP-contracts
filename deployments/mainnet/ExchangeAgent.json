{
  "address": "0x6aC1081CBb92524170E61CFFD37bDaF3b38FBC4c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_usdcToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_twapOraclePriceFeedFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_multiSigWallet",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_dexAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_convertToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_convertAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_convertedAmount",
          "type": "uint256"
        }
      ],
      "name": "ConvertedTokenToETH",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_dexAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_convertToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_convertedToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_convertAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_convertedAmount",
          "type": "uint256"
        }
      ],
      "name": "ConvertedTokenToToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_whiteListAddress",
          "type": "address"
        }
      ],
      "name": "LogAddWhiteList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_whiteListAddress",
          "type": "address"
        }
      ],
      "name": "LogRemoveWhiteList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_slippage",
          "type": "uint256"
        }
      ],
      "name": "LogSetSlippage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "TWAP_ORACLE_PRICE_FEED_FACTORY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNISWAP_FACTORY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNISWAP_ROUTER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC_TOKEN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_whiteListAddress",
          "type": "address"
        }
      ],
      "name": "addWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_convertAmount",
          "type": "uint256"
        }
      ],
      "name": "convertForETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_token0Amount",
          "type": "uint256"
        }
      ],
      "name": "convertForToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "getETHAmountForToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_usdtAmount",
          "type": "uint256"
        }
      ],
      "name": "getETHAmountForUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_token0Amount",
          "type": "uint256"
        }
      ],
      "name": "getNeededTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_ethAmount",
          "type": "uint256"
        }
      ],
      "name": "getTokenAmountForETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_usdtAmount",
          "type": "uint256"
        }
      ],
      "name": "getTokenAmountForUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_whiteListAddress",
          "type": "address"
        }
      ],
      "name": "removeWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_slippage",
          "type": "uint256"
        }
      ],
      "name": "setSlippage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slippage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x00fa2113cc512516136677f3f9cfec26f044f63a198f374c59a31e891f882c2d",
  "receipt": {
    "to": null,
    "from": "0x8c3d5c9538256DAB8Eb4B197370574340fe3254F",
    "contractAddress": "0x6aC1081CBb92524170E61CFFD37bDaF3b38FBC4c",
    "transactionIndex": 142,
    "gasUsed": "1891137",
    "logsBloom": "0x
    "blockHash": "0x427a2093846d4d9f33fccedd4954281368a436b81df43c17d050e7e2c14ad638",
    "transactionHash": "0x00fa2113cc512516136677f3f9cfec26f044f63a198f374c59a31e891f882c2d",
    "logs": [
      {
        "transactionIndex": 142,
        "blockNumber": 14636227,
        "transactionHash": "0x00fa2113cc512516136677f3f9cfec26f044f63a198f374c59a31e891f882c2d",
        "address": "0x6aC1081CBb92524170E61CFFD37bDaF3b38FBC4c",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008c3d5c9538256dab8eb4b197370574340fe3254f"
        ],
        "data": "0x",
        "logIndex": 162,
        "blockHash": "0x427a2093846d4d9f33fccedd4954281368a436b81df43c17d050e7e2c14ad638"
      },
      {
        "transactionIndex": 142,
        "blockNumber": 14636227,
        "transactionHash": "0x00fa2113cc512516136677f3f9cfec26f044f63a198f374c59a31e891f882c2d",
        "address": "0x6aC1081CBb92524170E61CFFD37bDaF3b38FBC4c",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000008c3d5c9538256dab8eb4b197370574340fe3254f",
          "0x0000000000000000000000008c3d5c9538256dab8eb4b197370574340fe3254f"
        ],
        "data": "0x",
        "logIndex": 163,
        "blockHash": "0x427a2093846d4d9f33fccedd4954281368a436b81df43c17d050e7e2c14ad638"
      }
    ],
    "blockNumber": 14636227,
    "cumulativeGasUsed": "9536876",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
    "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
    "0xd4354a2e9A5B29C0DB8c22F500D8BbAcAa257dEb",
    "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",
    "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
    "0x8c3d5c9538256DAB8Eb4B197370574340fe3254F"
  ],
  "solcInputHash": "0218e2b28098b873f60b22055ee82641",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdcToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_twapOraclePriceFeedFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_multiSigWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_dexAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_convertToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_convertAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_convertedAmount\",\"type\":\"uint256\"}],\"name\":\"ConvertedTokenToETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_dexAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_convertToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_convertedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_convertAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_convertedAmount\",\"type\":\"uint256\"}],\"name\":\"ConvertedTokenToToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_whiteListAddress\",\"type\":\"address\"}],\"name\":\"LogAddWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_whiteListAddress\",\"type\":\"address\"}],\"name\":\"LogRemoveWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_slippage\",\"type\":\"uint256\"}],\"name\":\"LogSetSlippage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TWAP_ORACLE_PRICE_FEED_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNISWAP_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNISWAP_ROUTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_whiteListAddress\",\"type\":\"address\"}],\"name\":\"addWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_convertAmount\",\"type\":\"uint256\"}],\"name\":\"convertForETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_token0Amount\",\"type\":\"uint256\"}],\"name\":\"convertForToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"getETHAmountForToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_usdtAmount\",\"type\":\"uint256\"}],\"name\":\"getETHAmountForUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_token0Amount\",\"type\":\"uint256\"}],\"name\":\"getNeededTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ethAmount\",\"type\":\"uint256\"}],\"name\":\"getTokenAmountForETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_usdtAmount\",\"type\":\"uint256\"}],\"name\":\"getTokenAmountForUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_whiteListAddress\",\"type\":\"address\"}],\"name\":\"removeWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slippage\",\"type\":\"uint256\"}],\"name\":\"setSlippage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ExchangeAgent.sol\":\"ExchangeAgent\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/ExchangeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/IUniswapFactory.sol\\\";\\nimport \\\"./interfaces/IUniswapRouter02.sol\\\";\\nimport \\\"./interfaces/ITwapOraclePriceFeedFactory.sol\\\";\\nimport \\\"./interfaces/ITwapOraclePriceFeed.sol\\\";\\nimport \\\"./interfaces/IExchangeAgent.sol\\\";\\nimport \\\"./libraries/TransferHelper.sol\\\";\\n\\ncontract ExchangeAgent is IExchangeAgent, ReentrancyGuard, Ownable {\\n    address public immutable override USDC_TOKEN;\\n    address public immutable UNISWAP_FACTORY;\\n    address public immutable TWAP_ORACLE_PRICE_FEED_FACTORY;\\n    address public immutable UNISWAP_ROUTER;\\n    address public immutable WETH;\\n    uint256 public slippage;\\n    uint256 private constant SLIPPAGE_PRECISION = 100;\\n\\n    mapping(address => bool) public whiteList;\\n\\n    event ConvertedTokenToToken(\\n        address indexed _dexAddress,\\n        address indexed _convertToken,\\n        address indexed _convertedToken,\\n        uint256 _convertAmount,\\n        uint256 _desiredAmount,\\n        uint256 _convertedAmount\\n    );\\n\\n    event ConvertedTokenToETH(\\n        address indexed _dexAddress,\\n        address indexed _convertToken,\\n        uint256 _convertAmount,\\n        uint256 _desiredAmount,\\n        uint256 _convertedAmount\\n    );\\n\\n    event LogAddWhiteList(address indexed _exchangeAgent, address indexed _whiteListAddress);\\n    event LogRemoveWhiteList(address indexed _exchangeAgent, address indexed _whiteListAddress);\\n    event LogSetSlippage(address indexed _exchangeAgent, uint256 _slippage);\\n\\n    constructor(\\n        address _usdcToken,\\n        address _WETH,\\n        address _twapOraclePriceFeedFactory,\\n        address _uniswapRouter,\\n        address _uniswapFactory,\\n        address _multiSigWallet\\n    ) {\\n        require(_usdcToken != address(0), \\\"UnoRe: zero USDC address\\\");\\n        require(_twapOraclePriceFeedFactory != address(0), \\\"UnoRe: zero twapOraclePriceFeedFactory address\\\");\\n        require(_uniswapRouter != address(0), \\\"UnoRe: zero uniswapRouter address\\\");\\n        require(_uniswapFactory != address(0), \\\"UnoRe: zero uniswapFactory address\\\");\\n        require(_WETH != address(0), \\\"UnoRe: zero WETH address\\\");\\n        require(_multiSigWallet != address(0), \\\"UnoRe: zero multisigwallet address\\\");\\n        USDC_TOKEN = _usdcToken;\\n        UNISWAP_FACTORY = _uniswapFactory;\\n        TWAP_ORACLE_PRICE_FEED_FACTORY = _twapOraclePriceFeedFactory;\\n        UNISWAP_ROUTER = _uniswapRouter;\\n        WETH = _WETH;\\n        whiteList[msg.sender] = true;\\n        slippage = 5 * SLIPPAGE_PRECISION;\\n        transferOwnership(_multiSigWallet);\\n    }\\n\\n    modifier onlyWhiteList() {\\n        require(whiteList[msg.sender], \\\"UnoRe: ExchangeAgent Forbidden\\\");\\n        _;\\n    }\\n\\n    receive() external payable {}\\n\\n    function addWhiteList(address _whiteListAddress) external onlyOwner {\\n        require(_whiteListAddress != address(0), \\\"UnoRe: zero address\\\");\\n        require(!whiteList[_whiteListAddress], \\\"UnoRe: white list already\\\");\\n        whiteList[_whiteListAddress] = true;\\n        emit LogAddWhiteList(address(this), _whiteListAddress);\\n    }\\n\\n    function removeWhiteList(address _whiteListAddress) external onlyOwner {\\n        require(_whiteListAddress != address(0), \\\"UnoRe: zero address\\\");\\n        require(whiteList[_whiteListAddress], \\\"UnoRe: white list removed or unadded already\\\");\\n        whiteList[_whiteListAddress] = false;\\n        emit LogRemoveWhiteList(address(this), _whiteListAddress);\\n    }\\n\\n    function setSlippage(uint256 _slippage) external onlyOwner {\\n        require(_slippage > 0, \\\"UnoRe: zero slippage\\\");\\n        require(_slippage < 100, \\\"UnoRe: 100% slippage overflow\\\");\\n        slippage = _slippage * SLIPPAGE_PRECISION;\\n        emit LogSetSlippage(address(this), _slippage);\\n    }\\n\\n    // estimate token amount for amount in USDC\\n    function getTokenAmountForUSDC(address _token, uint256 _usdtAmount) external view override returns (uint256) {\\n        return _getNeededTokenAmount(USDC_TOKEN, _token, _usdtAmount);\\n    }\\n\\n    // estimate ETH amount for amount in USDC\\n    function getETHAmountForUSDC(uint256 _usdtAmount) external view override returns (uint256) {\\n        return _getNeededTokenAmount(USDC_TOKEN, WETH, _usdtAmount);\\n    }\\n\\n    function getETHAmountForToken(address _token, uint256 _tokenAmount) external view override returns (uint256) {\\n        return _getNeededTokenAmount(_token, WETH, _tokenAmount);\\n    }\\n\\n    function getTokenAmountForETH(address _token, uint256 _ethAmount) external view override returns (uint256) {\\n        return _getNeededTokenAmount(WETH, _token, _ethAmount);\\n    }\\n\\n    function getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external view override returns (uint256) {\\n        return _getNeededTokenAmount(_token0, _token1, _token0Amount);\\n    }\\n\\n    function convertForToken(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external override onlyWhiteList nonReentrant returns (uint256) {\\n        uint256 twapPrice = 0;\\n        if (_token0 != address(0)) {\\n            require(IERC20(_token0).balanceOf(msg.sender) > 0, \\\"UnoRe: zero balance\\\");\\n            TransferHelper.safeTransferFrom(_token0, msg.sender, address(this), _token0Amount);\\n            twapPrice = _getNeededTokenAmount(_token0, _token1, _token0Amount);\\n        } else {\\n            twapPrice = _getNeededTokenAmount(WETH, _token1, _token0Amount);\\n        }\\n        require(twapPrice > 0, \\\"UnoRe: no pairs\\\");\\n        uint256 desiredAmount = (twapPrice * (100 * SLIPPAGE_PRECISION - slippage)) / 100 / SLIPPAGE_PRECISION;\\n\\n        uint256 convertedAmount = _convertTokenForToken(UNISWAP_ROUTER, _token0, _token1, _token0Amount, desiredAmount);\\n        return convertedAmount;\\n    }\\n\\n    function convertForETH(address _token, uint256 _convertAmount)\\n        external\\n        override\\n        onlyWhiteList\\n        nonReentrant\\n        returns (uint256)\\n    {\\n        require(IERC20(_token).balanceOf(msg.sender) > 0, \\\"UnoRe: zero balance\\\");\\n        if (_token != address(0)) {\\n            TransferHelper.safeTransferFrom(_token, msg.sender, address(this), _convertAmount);\\n        }\\n        uint256 twapPriceInUSDC = _getNeededTokenAmount(_token, WETH, _convertAmount);\\n        require(twapPriceInUSDC > 0, \\\"UnoRe: no pairs\\\");\\n        uint256 desiredAmount = (twapPriceInUSDC * (100 * SLIPPAGE_PRECISION - slippage)) / 100 / SLIPPAGE_PRECISION;\\n\\n        uint256 convertedAmount = _convertTokenForETH(UNISWAP_ROUTER, _token, _convertAmount, desiredAmount);\\n        return convertedAmount;\\n    }\\n\\n    function _convertTokenForToken(\\n        address _dexAddress,\\n        address _token0,\\n        address _token1,\\n        uint256 _convertAmount,\\n        uint256 _desiredAmount\\n    ) private returns (uint256) {\\n        IUniswapRouter02 _dexRouter = IUniswapRouter02(_dexAddress);\\n        address _factory = _dexRouter.factory();\\n        uint256 usdtBalanceBeforeSwap = IERC20(_token1).balanceOf(msg.sender);\\n        address inpToken = _dexRouter.WETH();\\n        if (_token0 != address(0)) {\\n            inpToken = _token0;\\n            TransferHelper.safeApprove(_token0, address(_dexRouter), _convertAmount);\\n        }\\n        if (IUniswapFactory(_factory).getPair(inpToken, _token1) != address(0)) {\\n            address[] memory path = new address[](2);\\n            path[0] = inpToken;\\n            path[1] = _token1;\\n            if (_token0 == address(0)) {\\n                _dexRouter.swapExactETHForTokensSupportingFeeOnTransferTokens{value: _convertAmount}(\\n                    _desiredAmount,\\n                    path,\\n                    msg.sender,\\n                    block.timestamp\\n                );\\n            } else {\\n                _dexRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n                    _convertAmount,\\n                    _desiredAmount,\\n                    path,\\n                    msg.sender,\\n                    block.timestamp\\n                );\\n            }\\n        }\\n        uint256 usdtBalanceAfterSwap = IERC20(_token1).balanceOf(msg.sender);\\n        emit ConvertedTokenToToken(\\n            _dexAddress,\\n            _token0,\\n            _token1,\\n            _convertAmount,\\n            _desiredAmount,\\n            usdtBalanceAfterSwap - usdtBalanceBeforeSwap\\n        );\\n        return usdtBalanceAfterSwap - usdtBalanceBeforeSwap;\\n    }\\n\\n    function _convertTokenForETH(\\n        address _dexAddress,\\n        address _token,\\n        uint256 _convertAmount,\\n        uint256 _desiredAmount\\n    ) private returns (uint256) {\\n        IUniswapRouter02 _dexRouter = IUniswapRouter02(_dexAddress);\\n        address _factory = _dexRouter.factory();\\n        uint256 ethBalanceBeforeSwap = address(msg.sender).balance;\\n        TransferHelper.safeApprove(_token, address(_dexRouter), _convertAmount);\\n        if (IUniswapFactory(_factory).getPair(_token, WETH) != address(0)) {\\n            address[] memory path = new address[](2);\\n            path[0] = _token;\\n            path[1] = WETH;\\n            _dexRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(\\n                _convertAmount,\\n                _desiredAmount,\\n                path,\\n                msg.sender,\\n                block.timestamp\\n            );\\n        }\\n        uint256 ethBalanceAfterSwap = address(msg.sender).balance;\\n        emit ConvertedTokenToETH(_dexAddress, _token, _convertAmount, _desiredAmount, ethBalanceAfterSwap - ethBalanceBeforeSwap);\\n        return ethBalanceAfterSwap - ethBalanceBeforeSwap;\\n    }\\n\\n    /**\\n     * @dev Get expected _token1 amount for _inputAmount of _token0\\n     * _desiredAmount should consider decimals based on _token1\\n     */\\n    function _getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) private view returns (uint256) {\\n        address pair = IUniswapFactory(UNISWAP_FACTORY).getPair(_token0, _token1);\\n        require(pair != address(0), \\\"There's no pair\\\");\\n\\n        address twapOraclePriceFeed = ITwapOraclePriceFeedFactory(TWAP_ORACLE_PRICE_FEED_FACTORY).getTwapOraclePriceFeed(\\n            _token0,\\n            _token1\\n        );\\n\\n        uint256 expectedToken1Amount = ITwapOraclePriceFeed(twapOraclePriceFeed).consult(_token0, _token0Amount);\\n\\n        return expectedToken1Amount;\\n    }\\n}\\n\",\"keccak256\":\"0x8c2725d7972b8cabb96c6a1fd70aa1e95776c491b2fca505026af9a49b15e0ce\",\"license\":\"MIT\"},\"contracts/interfaces/IExchangeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\ninterface IExchangeAgent {\\n    function USDC_TOKEN() external view returns (address);\\n\\n    function getTokenAmountForUSDC(address _token, uint256 _usdtAmount) external view returns (uint256);\\n\\n    function getETHAmountForUSDC(uint256 _usdtAmount) external view returns (uint256);\\n\\n    function getETHAmountForToken(address _token, uint256 _tokenAmount) external view returns (uint256);\\n\\n    function getTokenAmountForETH(address _token, uint256 _ethAmount) external view returns (uint256);\\n\\n    function getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external view returns (uint256);\\n\\n    function convertForToken(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external returns (uint256);\\n\\n    function convertForETH(address _token, uint256 _convertAmount) external returns (uint256);\\n}\\n\",\"keccak256\":\"0x325c7b39b8dc75cbed47c33bf7ed5e1fc94f8458b7d7f748ce77f90099a179cd\",\"license\":\"MIT\"},\"contracts/interfaces/ITwapOraclePriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface ITwapOraclePriceFeed {\\n    function update() external;\\n\\n    function consult(address token, uint256 amountIn) external view returns (uint256 amountOut);\\n}\\n\",\"keccak256\":\"0x93c07be9b8250abbe953aa68574a82e0e58e4a6330e190785d8a95e0762a8752\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ITwapOraclePriceFeedFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface ITwapOraclePriceFeedFactory {\\n    function twapOraclePriceFeedList(address _pair) external view returns (address);\\n\\n    function getTwapOraclePriceFeed(address _token0, address _token1) external view returns (address twapOraclePriceFeed);\\n}\\n\",\"keccak256\":\"0xa476375c4fb24d5ee56dfdd8a9059530e2678be1d5a0070c129919c9e9932898\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IUniswapFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface IUniswapFactory {\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint256);\\n\\n    function feeTo() external view returns (address);\\n\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n\\n    function allPairs(uint256) external view returns (address pair);\\n\\n    function allPairsLength() external view returns (uint256);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n\\n    function setFeeToSetter(address) external;\\n}\\n\",\"keccak256\":\"0xcc6c828391ba6e5ab0d338b965395129121abe68729901a2ffe861517ec3358a\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IUniswapRouter01.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\ninterface IUniswapRouter01 {\\n    function factory() external pure returns (address);\\n\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        returns (\\n            uint256 amountA,\\n            uint256 amountB,\\n            uint256 liquidity\\n        );\\n\\n    function addLiquidityETH(\\n        address token,\\n        uint256 amountTokenDesired,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        payable\\n        returns (\\n            uint256 amountToken,\\n            uint256 amountETH,\\n            uint256 liquidity\\n        );\\n\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETH(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactTokens(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactETH(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapETHForExactTokens(\\n        uint256 amountOut,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function quote(\\n        uint256 amountA,\\n        uint256 reserveA,\\n        uint256 reserveB\\n    ) external pure returns (uint256 amountB);\\n\\n    function getAmountOut(\\n        uint256 amountIn,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountOut);\\n\\n    function getAmountIn(\\n        uint256 amountOut,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountIn);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\\n\\n    function getAmountsIn(uint256 amountOut, address[] calldata path) external view returns (uint256[] memory amounts);\\n}\\n\",\"keccak256\":\"0xc6dcd143a19e9a62147f13fb8e1c874fd453a92f6d83ed4905d4d58f8e633295\",\"license\":\"MIT\"},\"contracts/interfaces/IUniswapRouter02.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\nimport \\\"./IUniswapRouter01.sol\\\";\\n\\ninterface IUniswapRouter02 is IUniswapRouter01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountETH);\\n\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable;\\n\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0xa8193608666a8dd9b79a340671f633de919ecdd28c64aefa11e29cccb7ec9978\",\"license\":\"MIT\"},\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.0;\\n\\n// from Uniswap TransferHelper library\\nlibrary TransferHelper {\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeApprove: approve failed\\\");\\n    }\\n\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeTransfer: transfer failed\\\");\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::transferFrom: transferFrom failed\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"TransferHelper::safeTransferETH: ETH transfer failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xb7650ccd26cfa42968350d9c477f55f98059d74e0f173a1da45b06c2607e705d\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x6101206040523480156200001257600080fd5b5060405162002558380380620025588339810160408190526200003591620002c1565b60016000556200004e62000048620001c2565b620001c6565b6001600160a01b038616620000805760405162461bcd60e51b815260040162000077906200048f565b60405180910390fd5b6001600160a01b038416620000a95760405162461bcd60e51b81526004016200007790620003be565b6001600160a01b038316620000d25760405162461bcd60e51b815260040162000077906200040c565b6001600160a01b038216620000fb5760405162461bcd60e51b81526004016200007790620004fb565b6001600160a01b038516620001245760405162461bcd60e51b8152600401620000779062000341565b6001600160a01b0381166200014d5760405162461bcd60e51b815260040162000077906200044d565b6001600160601b0319606087811b821660805283811b821660a05285811b821660c05284811b821660e05286901b1661010052336000908152600360205260409020805460ff19166001179055620001a8606460056200053d565b600255620001b68162000218565b50505050505062000569565b3390565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b62000222620001c2565b6001600160a01b03166200023562000295565b6001600160a01b0316146200025e5760405162461bcd60e51b81526004016200007790620004c6565b6001600160a01b038116620002875760405162461bcd60e51b8152600401620000779062000378565b6200029281620001c6565b50565b6001546001600160a01b031690565b80516001600160a01b0381168114620002bc57600080fd5b919050565b60008060008060008060c08789031215620002da578182fd5b620002e587620002a4565b9550620002f560208801620002a4565b94506200030560408801620002a4565b93506200031560608801620002a4565b92506200032560808801620002a4565b91506200033560a08801620002a4565b90509295509295509295565b60208082526018908201527f556e6f52653a207a65726f205745544820616464726573730000000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252602e908201527f556e6f52653a207a65726f20747761704f7261636c655072696365466565644660408201526d6163746f7279206164647265737360901b606082015260800190565b60208082526021908201527f556e6f52653a207a65726f20756e6973776170526f75746572206164647265736040820152607360f81b606082015260800190565b60208082526022908201527f556e6f52653a207a65726f206d756c746973696777616c6c6574206164647265604082015261737360f01b606082015260800190565b60208082526018908201527f556e6f52653a207a65726f205553444320616464726573730000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526022908201527f556e6f52653a207a65726f20756e6973776170466163746f7279206164647265604082015261737360f01b606082015260800190565b60008160001904831182151516156200056457634e487b7160e01b81526011600452602481fd5b500290565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c611f4062000618600039600081816103d10152818161054501528181610715015281816108f1015281816109e301528181610a0c0152818161156d01526116580152600081816107a40152818161097e0152610a580152600081816105cc0152610da7015260008181610a340152610cc9015260008181610524015281816109bb0152610ca20152611f406000f3fe6080604052600436106101635760003560e01c80639a553968116100c0578063d826492011610074578063f0fa55a911610059578063f0fa55a914610374578063f2fde38b14610394578063fa569274146103b45761016a565b8063d82649201461033f578063e7cd4a04146103545761016a565b8063ad5c4648116100a5578063ad5c4648146102f5578063ba560ed91461030a578063c74c0fac1461032a5761016a565b80639a553968146102b5578063a9a12d43146102d55761016a565b8063531a2211116101175780638da5cb5b116100fc5780638da5cb5b1461025e57806390600a311461028057806393badc41146102955761016a565b8063531a221114610229578063715018a6146102495761016a565b806334899be61161014857806334899be6146101c7578063372c12b1146101e75780633e032a3b146102145761016a565b8063102e32591461016f5780632042e5c2146101a55761016a565b3661016a57005b600080fd5b34801561017b57600080fd5b5061018f61018a3660046118f4565b6103c9565b60405161019c9190611df9565b60405180910390f35b3480156101b157600080fd5b506101c56101c036600461187c565b6103fd565b005b3480156101d357600080fd5b5061018f6101e23660046118b4565b6104ed565b3480156101f357600080fd5b5061020761020236600461187c565b610502565b60405161019c9190611a56565b34801561022057600080fd5b5061018f610517565b34801561023557600080fd5b5061018f61024436600461193f565b61051d565b34801561025557600080fd5b506101c5610570565b34801561026a57600080fd5b506102736105bb565b60405161019c91906119eb565b34801561028c57600080fd5b506102736105ca565b3480156102a157600080fd5b5061018f6102b03660046118b4565b6105ee565b3480156102c157600080fd5b5061018f6102d03660046118f4565b6107dc565b3480156102e157600080fd5b5061018f6102f03660046118f4565b6109b4565b34801561030157600080fd5b506102736109e1565b34801561031657600080fd5b5061018f6103253660046118f4565b610a05565b34801561033657600080fd5b50610273610a32565b34801561034b57600080fd5b50610273610a56565b34801561036057600080fd5b506101c561036f36600461187c565b610a7a565b34801561038057600080fd5b506101c561038f36600461193f565b610b65565b3480156103a057600080fd5b506101c56103af36600461187c565b610c2f565b3480156103c057600080fd5b50610273610ca0565b60006103f6837f000000000000000000000000000000000000000000000000000000000000000084610cc4565b9392505050565b610405610ebb565b6001600160a01b03166104166105bb565b6001600160a01b0316146104455760405162461bcd60e51b815260040161043c90611c8b565b60405180910390fd5b6001600160a01b03811661046b5760405162461bcd60e51b815260040161043c90611af5565b6001600160a01b03811660009081526003602052604090205460ff166104a35760405162461bcd60e51b815260040161043c90611b2c565b6001600160a01b038116600081815260036020526040808220805460ff191690555130917f2f467772ef0a5478314f3bc2b37d4b2ad29b65f052b2cedc8e2972dda033529291a350565b60006104fa848484610cc4565b949350505050565b60036020526000908152604090205460ff1681565b60025481565b600061056a7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084610cc4565b92915050565b610578610ebb565b6001600160a01b03166105896105bb565b6001600160a01b0316146105af5760405162461bcd60e51b815260040161043c90611c8b565b6105b96000610ebf565b565b6001546001600160a01b031690565b7f000000000000000000000000000000000000000000000000000000000000000081565b3360009081526003602052604081205460ff1661061d5760405162461bcd60e51b815260040161043c90611d1d565b600260005414156106405760405162461bcd60e51b815260040161043c90611dc2565b600260009081556001600160a01b03851615610710576040516370a0823160e01b81526000906001600160a01b038716906370a08231906106859033906004016119eb565b60206040518083038186803b15801561069d57600080fd5b505afa1580156106b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d59190611957565b116106f25760405162461bcd60e51b815260040161043c90611a61565b6106fe85333086610f29565b610709858585610cc4565b905061073e565b61073b7f00000000000000000000000000000000000000000000000000000000000000008585610cc4565b90505b6000811161075e5760405162461bcd60e51b815260040161043c90611d8b565b60006064806002546064806107739190611ea9565b61077d9190611ec8565b6107879085611ea9565b6107919190611e89565b61079b9190611e89565b905060006107cc7f00000000000000000000000000000000000000000000000000000000000000008888888661102e565b6001600055979650505050505050565b3360009081526003602052604081205460ff1661080b5760405162461bcd60e51b815260040161043c90611d1d565b6002600054141561082e5760405162461bcd60e51b815260040161043c90611dc2565b600260009081556040516370a0823160e01b81526001600160a01b038516906370a08231906108619033906004016119eb565b60206040518083038186803b15801561087957600080fd5b505afa15801561088d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b19190611957565b116108ce5760405162461bcd60e51b815260040161043c90611a61565b6001600160a01b038316156108e9576108e983333085610f29565b6000610916847f000000000000000000000000000000000000000000000000000000000000000085610cc4565b9050600081116109385760405162461bcd60e51b815260040161043c90611d8b565b600060648060025460648061094d9190611ea9565b6109579190611ec8565b6109619085611ea9565b61096b9190611e89565b6109759190611e89565b905060006109a57f00000000000000000000000000000000000000000000000000000000000000008787856114bc565b60016000559695505050505050565b60006103f67f00000000000000000000000000000000000000000000000000000000000000008484610cc4565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006103f67f00000000000000000000000000000000000000000000000000000000000000008484610cc4565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b610a82610ebb565b6001600160a01b0316610a936105bb565b6001600160a01b031614610ab95760405162461bcd60e51b815260040161043c90611c8b565b6001600160a01b038116610adf5760405162461bcd60e51b815260040161043c90611af5565b6001600160a01b03811660009081526003602052604090205460ff1615610b185760405162461bcd60e51b815260040161043c90611be6565b6001600160a01b038116600081815260036020526040808220805460ff191660011790555130917f8cd7b0b1a7316eb3e5d781d629cb8bf4e2fd9a8903bdd0f6b894c087d61b21f291a350565b610b6d610ebb565b6001600160a01b0316610b7e6105bb565b6001600160a01b031614610ba45760405162461bcd60e51b815260040161043c90611c8b565b60008111610bc45760405162461bcd60e51b815260040161043c90611c1d565b60648110610be45760405162461bcd60e51b815260040161043c90611d54565b610bef606482611ea9565b60025560405130907f1b5c61e79b0735d33852817a0af9ed28b909c7c0a2a04abcc0c19bba6d6ba56490610c24908490611df9565b60405180910390a250565b610c37610ebb565b6001600160a01b0316610c486105bb565b6001600160a01b031614610c6e5760405162461bcd60e51b815260040161043c90611c8b565b6001600160a01b038116610c945760405162461bcd60e51b815260040161043c90611a98565b610c9d81610ebf565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a4390586866040518363ffffffff1660e01b8152600401610d159291906119ff565b60206040518083038186803b158015610d2d57600080fd5b505afa158015610d41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d659190611898565b90506001600160a01b038116610d8d5760405162461bcd60e51b815260040161043c90611c54565b604051632de7797560e11b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635bcef2ea90610dde90899089906004016119ff565b60206040518083038186803b158015610df657600080fd5b505afa158015610e0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2e9190611898565b90506000816001600160a01b0316633ddac95388876040518363ffffffff1660e01b8152600401610e60929190611a3d565b60206040518083038186803b158015610e7857600080fd5b505afa158015610e8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb09190611957565b979650505050505050565b3390565b600180546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080856001600160a01b03166323b872dd868686604051602401610f5093929190611a19565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610f9e91906119b2565b6000604051808303816000865af19150503d8060008114610fdb576040519150601f19603f3d011682016040523d82523d6000602084013e610fe0565b606091505b509150915081801561100a57508051158061100a57508080602001905181019061100a919061191f565b6110265760405162461bcd60e51b815260040161043c90611b89565b505050505050565b6000808690506000816001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561106f57600080fd5b505afa158015611083573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a79190611898565b90506000866001600160a01b03166370a08231336040518263ffffffff1660e01b81526004016110d791906119eb565b60206040518083038186803b1580156110ef57600080fd5b505afa158015611103573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111279190611957565b90506000836001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561116457600080fd5b505afa158015611178573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119c9190611898565b90506001600160a01b038916156111ba5750876111ba81858961177a565b60405163e6a4390560e01b81526000906001600160a01b0385169063e6a43905906111eb9085908d906004016119ff565b60206040518083038186803b15801561120357600080fd5b505afa158015611217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123b9190611898565b6001600160a01b0316146113be57604080516002808252606082018352600092602083019080368337019050509050818160008151811061128c57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505088816001815181106112ce57634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920101528a166113555760405163b6f9de9560e01b81526001600160a01b0386169063b6f9de95908a9061131e908b90869033904290600401611e02565b6000604051808303818588803b15801561133757600080fd5b505af115801561134b573d6000803e3d6000fd5b50505050506113bc565b604051635c11d79560e01b81526001600160a01b03861690635c11d79590611389908b908b90869033904290600401611e37565b600060405180830381600087803b1580156113a357600080fd5b505af11580156113b7573d6000803e3d6000fd5b505050505b505b6040516370a0823160e01b81526000906001600160a01b038a16906370a08231906113ed9033906004016119eb565b60206040518083038186803b15801561140557600080fd5b505afa158015611419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143d9190611957565b9050886001600160a01b03168a6001600160a01b03168c6001600160a01b03167fd30edfe8aafab67575a170d015da0337bcb39e5c9af1b2dfb9294fb75b344ac38b8b888761148c9190611ec8565b60405161149b93929190611e73565b60405180910390a46114ad8382611ec8565b9b9a5050505050505050505050565b6000808590506000816001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156114fd57600080fd5b505afa158015611511573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115359190611898565b9050333161154487848861177a565b60405163e6a4390560e01b81526000906001600160a01b0384169063e6a4390590611595908b907f0000000000000000000000000000000000000000000000000000000000000000906004016119ff565b60206040518083038186803b1580156115ad57600080fd5b505afa1580156115c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e59190611898565b6001600160a01b03161461170f57604080516002808252606082018352600092602083019080368337019050509050878160008151811061163657634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000008160018151811061169857634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260405163791ac94760e01b81529085169063791ac947906116db908a908a90869033904290600401611e37565b600060405180830381600087803b1580156116f557600080fd5b505af1158015611709573d6000803e3d6000fd5b50505050505b33316001600160a01b03888116908a167f1df84ee81df9963f5d40b2a3f717360c1f62daa6f21f69580398a8d570de644c898961174c8787611ec8565b60405161175b93929190611e73565b60405180910390a361176d8282611ec8565b9998505050505050505050565b600080846001600160a01b031663095ea7b3858560405160240161179f929190611a3d565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516117ed91906119b2565b6000604051808303816000865af19150503d806000811461182a576040519150601f19603f3d011682016040523d82523d6000602084013e61182f565b606091505b5091509150818015611859575080511580611859575080806020019051810190611859919061191f565b6118755760405162461bcd60e51b815260040161043c90611cc0565b5050505050565b60006020828403121561188d578081fd5b81356103f681611ef5565b6000602082840312156118a9578081fd5b81516103f681611ef5565b6000806000606084860312156118c8578182fd5b83356118d381611ef5565b925060208401356118e381611ef5565b929592945050506040919091013590565b60008060408385031215611906578182fd5b823561191181611ef5565b946020939093013593505050565b600060208284031215611930578081fd5b815180151581146103f6578182fd5b600060208284031215611950578081fd5b5035919050565b600060208284031215611968578081fd5b5051919050565b6000815180845260208085019450808401835b838110156119a75781516001600160a01b031687529582019590820190600101611982565b509495945050505050565b60008251815b818110156119d257602081860181015185830152016119b8565b818111156119e05782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526013908201527f556e6f52653a207a65726f2062616c616e636500000000000000000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526013908201527f556e6f52653a207a65726f206164647265737300000000000000000000000000604082015260600190565b6020808252602c908201527f556e6f52653a207768697465206c6973742072656d6f766564206f7220756e6160408201527f6464656420616c72656164790000000000000000000000000000000000000000606082015260800190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b60208082526019908201527f556e6f52653a207768697465206c69737420616c726561647900000000000000604082015260600190565b60208082526014908201527f556e6f52653a207a65726f20736c697070616765000000000000000000000000604082015260600190565b6020808252600f908201527f54686572652773206e6f20706169720000000000000000000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f5472616e7366657248656c7065723a3a73616665417070726f76653a2061707060408201527f726f7665206661696c6564000000000000000000000000000000000000000000606082015260800190565b6020808252601e908201527f556e6f52653a2045786368616e67654167656e7420466f7262696464656e0000604082015260600190565b6020808252601d908201527f556e6f52653a203130302520736c697070616765206f766572666c6f77000000604082015260600190565b6020808252600f908201527f556e6f52653a206e6f2070616972730000000000000000000000000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b90815260200190565b600085825260806020830152611e1b608083018661196f565b6001600160a01b03949094166040830152506060015292915050565b600086825285602083015260a06040830152611e5660a083018661196f565b6001600160a01b0394909416606083015250608001529392505050565b9283526020830191909152604082015260600190565b600082611ea457634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611ec357611ec3611edf565b500290565b600082821015611eda57611eda611edf565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610c9d57600080fdfea2646970667358221220d98dbf9e0d96f474b523bd39e49d0f5a212810718e5aae90fc2e3fa7a9fef46264736f6c63430008000033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 114,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 7,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 4056,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "slippage",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 4063,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "whiteList",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}