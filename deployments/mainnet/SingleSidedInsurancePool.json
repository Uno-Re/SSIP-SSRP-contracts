{
  "address": "0x82E107d2b1Be4347b55FBba4a6fB99669dF3ceb1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimAssessor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_capitalAgent",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_multiSigWallet",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Harvest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_requestAmount",
          "type": "uint256"
        }
      ],
      "name": "LeftPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_cancelAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_cancelAmountInUno",
          "type": "uint256"
        }
      ],
      "name": "LogCancelWithdrawRequest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_SSIP",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_rewarder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "LogCreateRewarder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_SSIP",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_syntheticSSIP",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_lpToken",
          "type": "address"
        }
      ],
      "name": "LogCreateSyntheticSSIP",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_riskPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_withdrawLpAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_withdrawUnoAmount",
          "type": "uint256"
        }
      ],
      "name": "LogLeaveFromPendingSSIP",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "LogLpTransferInSSIP",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_migrateTo",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_migratedAmount",
          "type": "uint256"
        }
      ],
      "name": "LogMigrate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_SSIP",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_capitalAgent",
          "type": "address"
        }
      ],
      "name": "LogSetCapitalAgent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_SSIP",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_claimAssessor",
          "type": "address"
        }
      ],
      "name": "LogSetClaimAssessor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        }
      ],
      "name": "LogSetExchangeAgent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_SSIP",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lockTime",
          "type": "uint256"
        }
      ],
      "name": "LogSetLockTime",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_SSIP",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_migrateTo",
          "type": "address"
        }
      ],
      "name": "LogSetMigrateTo",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_SSIP",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_minLPCapital",
          "type": "uint256"
        }
      ],
      "name": "LogSetMinLPCapital",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_SSIP",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_rewardPerBlock",
          "type": "uint256"
        }
      ],
      "name": "LogSetRewardMultiplier",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_SSIP",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        }
      ],
      "name": "LogSetStakingStartTime",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "_lastRewardBlock",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lpSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_accUnoPerShare",
          "type": "uint256"
        }
      ],
      "name": "LogUpdatePool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_claimAmount",
          "type": "uint256"
        }
      ],
      "name": "PolicyClaim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_SSIP",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "RiskPoolCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "StakedInPool",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ACC_UNO_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LOCK_TIME",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKING_START_TIME",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelWithdrawRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "capitalAgent",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimAssessor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "createRewarder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rewardMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_SCR",
          "type": "uint256"
        }
      ],
      "name": "createRiskPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_multiSigWallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "createSyntheticSSIP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "enterInPool",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "getStakedAmountPerUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "unoAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lpAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalWithdrawPendingAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getWithdrawRequestPerUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pendingAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pendingAmountInUno",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "originUnoAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "requestTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "harvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "leaveFromPending",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "leaveFromPoolInPending",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "lpTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "migrateTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "pendingUno",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pending",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_policyId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isFinished",
          "type": "bool"
        }
      ],
      "name": "policyClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "lastRewardBlock",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "accUnoPerShare",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "unoMultiplierPerBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "riskPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_capitalAgent",
          "type": "address"
        }
      ],
      "name": "setCapitalAgent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimAssessor",
          "type": "address"
        }
      ],
      "name": "setClaimAssessor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        }
      ],
      "name": "setExchangeAgent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_lockTime",
          "type": "uint256"
        }
      ],
      "name": "setLockTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_migrateTo",
          "type": "address"
        }
      ],
      "name": "setMigrateTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minLPCapital",
          "type": "uint256"
        }
      ],
      "name": "setMinLPCapital",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardMultiplier",
          "type": "uint256"
        }
      ],
      "name": "setRewardMultiplier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        }
      ],
      "name": "setStakingStartTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "syntheticSSIP",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updatePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lastWithdrawTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x8aba51675b8b3762efd9525d011b281e2666ca065e59fd48109ecc21ab68899d",
  "receipt": {
    "to": null,
    "from": "0x8c3d5c9538256DAB8Eb4B197370574340fe3254F",
    "contractAddress": "0x82E107d2b1Be4347b55FBba4a6fB99669dF3ceb1",
    "transactionIndex": 159,
    "gasUsed": "3489377",
    "logsBloom": "0x
    "blockHash": "0xd3fb98db3f118d466719a6b919ad9b9f750cce1dfa4f69165a6260d64d42c145",
    "transactionHash": "0x8aba51675b8b3762efd9525d011b281e2666ca065e59fd48109ecc21ab68899d",
    "logs": [
      {
        "transactionIndex": 159,
        "blockNumber": 14636600,
        "transactionHash": "0x8aba51675b8b3762efd9525d011b281e2666ca065e59fd48109ecc21ab68899d",
        "address": "0x82E107d2b1Be4347b55FBba4a6fB99669dF3ceb1",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008c3d5c9538256dab8eb4b197370574340fe3254f"
        ],
        "data": "0x",
        "logIndex": 173,
        "blockHash": "0xd3fb98db3f118d466719a6b919ad9b9f750cce1dfa4f69165a6260d64d42c145"
      },
      {
        "transactionIndex": 159,
        "blockNumber": 14636600,
        "transactionHash": "0x8aba51675b8b3762efd9525d011b281e2666ca065e59fd48109ecc21ab68899d",
        "address": "0x82E107d2b1Be4347b55FBba4a6fB99669dF3ceb1",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000008c3d5c9538256dab8eb4b197370574340fe3254f",
          "0x0000000000000000000000008c3d5c9538256dab8eb4b197370574340fe3254f"
        ],
        "data": "0x",
        "logIndex": 174,
        "blockHash": "0xd3fb98db3f118d466719a6b919ad9b9f750cce1dfa4f69165a6260d64d42c145"
      }
    ],
    "blockNumber": 14636600,
    "cumulativeGasUsed": "13489097",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x6c78D94AB7a94A982B773aE453a6E000Da663b62",
    "0x6aC1081CBb92524170E61CFFD37bDaF3b38FBC4c",
    "0x0bCed28f17a0c8CB66c07dD1a4ccfb2ef3159c05",
    "0x8c3d5c9538256DAB8Eb4B197370574340fe3254F"
  ],
  "solcInputHash": "0218e2b28098b873f60b22055ee82641",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimAssessor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_capitalAgent\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_multiSigWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_requestAmount\",\"type\":\"uint256\"}],\"name\":\"LeftPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_cancelAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_cancelAmountInUno\",\"type\":\"uint256\"}],\"name\":\"LogCancelWithdrawRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_SSIP\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_rewarder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"LogCreateRewarder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_SSIP\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_syntheticSSIP\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_lpToken\",\"type\":\"address\"}],\"name\":\"LogCreateSyntheticSSIP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_riskPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_withdrawLpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_withdrawUnoAmount\",\"type\":\"uint256\"}],\"name\":\"LogLeaveFromPendingSSIP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"LogLpTransferInSSIP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_migrateTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_migratedAmount\",\"type\":\"uint256\"}],\"name\":\"LogMigrate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_SSIP\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_capitalAgent\",\"type\":\"address\"}],\"name\":\"LogSetCapitalAgent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_SSIP\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_claimAssessor\",\"type\":\"address\"}],\"name\":\"LogSetClaimAssessor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"}],\"name\":\"LogSetExchangeAgent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_SSIP\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lockTime\",\"type\":\"uint256\"}],\"name\":\"LogSetLockTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_SSIP\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_migrateTo\",\"type\":\"address\"}],\"name\":\"LogSetMigrateTo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_SSIP\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minLPCapital\",\"type\":\"uint256\"}],\"name\":\"LogSetMinLPCapital\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_SSIP\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_rewardPerBlock\",\"type\":\"uint256\"}],\"name\":\"LogSetRewardMultiplier\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_SSIP\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"}],\"name\":\"LogSetStakingStartTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"_lastRewardBlock\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lpSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_accUnoPerShare\",\"type\":\"uint256\"}],\"name\":\"LogUpdatePool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_claimAmount\",\"type\":\"uint256\"}],\"name\":\"PolicyClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_SSIP\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"RiskPoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"StakedInPool\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACC_UNO_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOCK_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_START_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelWithdrawRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"capitalAgent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAssessor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"createRewarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_SCR\",\"type\":\"uint256\"}],\"name\":\"createRiskPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_multiSigWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"createSyntheticSSIP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterInPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"getStakedAmountPerUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"unoAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalWithdrawPendingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getWithdrawRequestPerUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pendingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingAmountInUno\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originUnoAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"leaveFromPending\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveFromPoolInPending\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"lpTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrateTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"pendingUno\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pending\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_policyId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isFinished\",\"type\":\"bool\"}],\"name\":\"policyClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"lastRewardBlock\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"accUnoPerShare\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"unoMultiplierPerBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"riskPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_capitalAgent\",\"type\":\"address\"}],\"name\":\"setCapitalAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimAssessor\",\"type\":\"address\"}],\"name\":\"setClaimAssessor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"}],\"name\":\"setExchangeAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lockTime\",\"type\":\"uint256\"}],\"name\":\"setLockTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_migrateTo\",\"type\":\"address\"}],\"name\":\"setMigrateTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minLPCapital\",\"type\":\"uint256\"}],\"name\":\"setMinLPCapital\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardMultiplier\",\"type\":\"uint256\"}],\"name\":\"setRewardMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"}],\"name\":\"setStakingStartTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syntheticSSIP\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastWithdrawTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createRiskPool(string,string,address,address,uint256,uint256)\":{\"details\":\"create Risk pool with UNO from SSIP owner\"},\"getTotalWithdrawPendingAmount()\":{\"details\":\"get total withdraw request amount in pending for the risk pool in UNO\"},\"getWithdrawRequestPerUser(address)\":{\"details\":\"get withdraw request amount in pending per user in UNO\"},\"leaveFromPending()\":{\"details\":\"user can submit claim again and receive his funds into his wallet after 10 days since last WR.\"},\"leaveFromPoolInPending(uint256)\":{\"details\":\"WR will be in pending for 10 days at least\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SingleSidedInsurancePool.sol\":\"SingleSidedInsurancePool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/SingleSidedInsurancePool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/ICapitalAgent.sol\\\";\\nimport \\\"./interfaces/IExchangeAgent.sol\\\";\\nimport \\\"./interfaces/IMigration.sol\\\";\\nimport \\\"./interfaces/IRewarderFactory.sol\\\";\\nimport \\\"./interfaces/IRiskPoolFactory.sol\\\";\\nimport \\\"./interfaces/ISingleSidedInsurancePool.sol\\\";\\nimport \\\"./interfaces/IRewarder.sol\\\";\\nimport \\\"./interfaces/IRiskPool.sol\\\";\\nimport \\\"./interfaces/ISyntheticSSIPFactory.sol\\\";\\nimport \\\"./libraries/TransferHelper.sol\\\";\\n\\ncontract SingleSidedInsurancePool is ISingleSidedInsurancePool, ReentrancyGuard, Ownable {\\n    address public claimAssessor;\\n    address private exchangeAgent;\\n    address public migrateTo;\\n    address public capitalAgent;\\n    address public syntheticSSIP;\\n\\n    uint256 public LOCK_TIME = 10 days;\\n    uint256 public constant ACC_UNO_PRECISION = 1e18;\\n    uint256 public STAKING_START_TIME;\\n\\n    address public rewarder;\\n    address public override riskPool;\\n    struct PoolInfo {\\n        uint128 lastRewardBlock;\\n        uint128 accUnoPerShare;\\n        uint256 unoMultiplierPerBlock;\\n    }\\n\\n    struct UserInfo {\\n        uint256 lastWithdrawTime;\\n        uint256 rewardDebt;\\n        uint256 amount;\\n    }\\n\\n    mapping(address => UserInfo) public userInfo;\\n\\n    PoolInfo public poolInfo;\\n\\n    event RiskPoolCreated(address indexed _SSIP, address indexed _pool);\\n    event StakedInPool(address indexed _staker, address indexed _pool, uint256 _amount);\\n    event LeftPool(address indexed _staker, address indexed _pool, uint256 _requestAmount);\\n    event LogUpdatePool(uint128 _lastRewardBlock, uint256 _lpSupply, uint256 _accUnoPerShare);\\n    event Harvest(address indexed _user, address indexed _receiver, uint256 _amount);\\n    event LogSetExchangeAgent(address indexed _exchangeAgent);\\n    event LogLeaveFromPendingSSIP(\\n        address indexed _user,\\n        address indexed _riskPool,\\n        uint256 _withdrawLpAmount,\\n        uint256 _withdrawUnoAmount\\n    );\\n    event PolicyClaim(address indexed _user, uint256 _claimAmount);\\n    event LogLpTransferInSSIP(address indexed _from, address indexed _to, uint256 _amount);\\n    event LogCreateRewarder(address indexed _SSIP, address indexed _rewarder, address _currency);\\n    event LogCreateSyntheticSSIP(address indexed _SSIP, address indexed _syntheticSSIP, address indexed _lpToken);\\n    event LogCancelWithdrawRequest(address indexed _user, uint256 _cancelAmount, uint256 _cancelAmountInUno);\\n    event LogMigrate(address indexed _user, address indexed _migrateTo, uint256 _migratedAmount);\\n    event LogSetCapitalAgent(address indexed _SSIP, address indexed _capitalAgent);\\n    event LogSetRewardMultiplier(address indexed _SSIP, uint256 _rewardPerBlock);\\n    event LogSetClaimAssessor(address indexed _SSIP, address indexed _claimAssessor);\\n    event LogSetMigrateTo(address indexed _SSIP, address indexed _migrateTo);\\n    event LogSetMinLPCapital(address indexed _SSIP, uint256 _minLPCapital);\\n    event LogSetLockTime(address indexed _SSIP, uint256 _lockTime);\\n    event LogSetStakingStartTime(address indexed _SSIP, uint256 _startTime);\\n\\n    constructor(\\n        address _claimAssessor,\\n        address _exchangeAgent,\\n        address _capitalAgent,\\n        address _multiSigWallet\\n    ) {\\n        require(_claimAssessor != address(0), \\\"UnoRe: zero claimAssessor address\\\");\\n        require(_exchangeAgent != address(0), \\\"UnoRe: zero exchangeAgent address\\\");\\n        require(_capitalAgent != address(0), \\\"UnoRe: zero capitalAgent address\\\");\\n        require(_multiSigWallet != address(0), \\\"UnoRe: zero multisigwallet address\\\");\\n        exchangeAgent = _exchangeAgent;\\n        claimAssessor = _claimAssessor;\\n        capitalAgent = _capitalAgent;\\n        transferOwnership(_multiSigWallet);\\n    }\\n\\n    modifier onlyClaimAssessor() {\\n        require(msg.sender == claimAssessor, \\\"UnoRe: Forbidden\\\");\\n        _;\\n    }\\n\\n    modifier isStartTime() {\\n        require(block.timestamp >= STAKING_START_TIME, \\\"UnoRe: not available time\\\");\\n        _;\\n    }\\n\\n    function setExchangeAgent(address _exchangeAgent) external onlyOwner {\\n        require(_exchangeAgent != address(0), \\\"UnoRe: zero address\\\");\\n        exchangeAgent = _exchangeAgent;\\n        emit LogSetExchangeAgent(_exchangeAgent);\\n    }\\n\\n    function setCapitalAgent(address _capitalAgent) external onlyOwner {\\n        require(_capitalAgent != address(0), \\\"UnoRe: zero address\\\");\\n        capitalAgent = _capitalAgent;\\n        emit LogSetCapitalAgent(address(this), _capitalAgent);\\n    }\\n\\n    function setRewardMultiplier(uint256 _rewardMultiplier) external onlyOwner {\\n        require(_rewardMultiplier > 0, \\\"UnoRe: zero value\\\");\\n        poolInfo.unoMultiplierPerBlock = _rewardMultiplier;\\n        emit LogSetRewardMultiplier(address(this), _rewardMultiplier);\\n    }\\n\\n    function setClaimAssessor(address _claimAssessor) external onlyOwner {\\n        require(_claimAssessor != address(0), \\\"UnoRe: zero address\\\");\\n        claimAssessor = _claimAssessor;\\n        emit LogSetClaimAssessor(address(this), _claimAssessor);\\n    }\\n\\n    function setMigrateTo(address _migrateTo) external onlyOwner {\\n        require(_migrateTo != address(0), \\\"UnoRe: zero address\\\");\\n        migrateTo = _migrateTo;\\n        emit LogSetMigrateTo(address(this), _migrateTo);\\n    }\\n\\n    function setMinLPCapital(uint256 _minLPCapital) external onlyOwner {\\n        require(_minLPCapital > 0, \\\"UnoRe: not allow zero value\\\");\\n        IRiskPool(riskPool).setMinLPCapital(_minLPCapital);\\n        emit LogSetMinLPCapital(address(this), _minLPCapital);\\n    }\\n\\n    function setLockTime(uint256 _lockTime) external onlyOwner {\\n        require(_lockTime > 0, \\\"UnoRe: not allow zero lock time\\\");\\n        LOCK_TIME = _lockTime;\\n        emit LogSetLockTime(address(this), _lockTime);\\n    }\\n\\n    function setStakingStartTime(uint256 _startTime) external onlyOwner {\\n        STAKING_START_TIME = _startTime + block.timestamp;\\n        emit LogSetStakingStartTime(address(this), STAKING_START_TIME);\\n    }\\n\\n    /**\\n     * @dev create Risk pool with UNO from SSIP owner\\n     */\\n    function createRiskPool(\\n        string calldata _name,\\n        string calldata _symbol,\\n        address _factory,\\n        address _currency,\\n        uint256 _rewardMultiplier,\\n        uint256 _SCR\\n    ) external onlyOwner nonReentrant {\\n        require(riskPool == address(0), \\\"UnoRe: risk pool created already\\\");\\n        require(_factory != address(0), \\\"UnoRe: zero factory address\\\");\\n        riskPool = IRiskPoolFactory(_factory).newRiskPool(_name, _symbol, address(this), _currency);\\n        poolInfo.lastRewardBlock = uint128(block.number);\\n        poolInfo.accUnoPerShare = 0;\\n        poolInfo.unoMultiplierPerBlock = _rewardMultiplier;\\n        ICapitalAgent(capitalAgent).addPool(address(this), _currency, _SCR);\\n        emit RiskPoolCreated(address(this), riskPool);\\n    }\\n\\n    function createRewarder(\\n        address _operator,\\n        address _factory,\\n        address _currency\\n    ) external onlyOwner nonReentrant {\\n        require(_factory != address(0), \\\"UnoRe: rewarder factory no exist\\\");\\n        require(_operator != address(0), \\\"UnoRe: zero operator address\\\");\\n        rewarder = IRewarderFactory(_factory).newRewarder(_operator, _currency, address(this));\\n        emit LogCreateRewarder(address(this), rewarder, _currency);\\n    }\\n\\n    function createSyntheticSSIP(address _multiSigWallet, address _factory) external onlyOwner nonReentrant {\\n        require(_multiSigWallet != address(0), \\\"UnoRe: zero owner address\\\");\\n        require(_factory != address(0), \\\"UnoRe:zero factory address\\\");\\n        require(riskPool != address(0), \\\"UnoRe:zero LP token address\\\");\\n        syntheticSSIP = ISyntheticSSIPFactory(_factory).newSyntheticSSIP(_multiSigWallet, riskPool);\\n        emit LogCreateSyntheticSSIP(address(this), syntheticSSIP, riskPool);\\n    }\\n\\n    function migrate() external nonReentrant {\\n        require(migrateTo != address(0), \\\"UnoRe: zero address\\\");\\n        _harvest(msg.sender);\\n        uint256 lpPrice = IRiskPool(riskPool).lpPriceUno();\\n        uint256 amount = userInfo[msg.sender].amount;\\n        bool isUnLocked = block.timestamp - userInfo[msg.sender].lastWithdrawTime > LOCK_TIME;\\n        uint256 migratedAmount = IRiskPool(riskPool).migrateLP(msg.sender, migrateTo, isUnLocked);\\n        ICapitalAgent(capitalAgent).SSIPPolicyCaim((amount * lpPrice) / 1e18, 0, false);\\n        IMigration(migrateTo).onMigration(msg.sender, amount, \\\"\\\");\\n        userInfo[msg.sender].amount = 0;\\n        userInfo[msg.sender].rewardDebt = 0;\\n        emit LogMigrate(msg.sender, migrateTo, migratedAmount);\\n    }\\n\\n    function pendingUno(address _to) external view returns (uint256 pending) {\\n        uint256 tokenSupply = IERC20(riskPool).totalSupply();\\n        uint128 accUnoPerShare = poolInfo.accUnoPerShare;\\n        if (block.number > poolInfo.lastRewardBlock && tokenSupply != 0) {\\n            uint256 blocks = block.number - uint256(poolInfo.lastRewardBlock);\\n            uint256 unoReward = blocks * poolInfo.unoMultiplierPerBlock;\\n            accUnoPerShare = accUnoPerShare + uint128((unoReward * ACC_UNO_PRECISION) / tokenSupply);\\n        }\\n        uint256 userBalance = userInfo[_to].amount;\\n        pending = (userBalance * uint256(accUnoPerShare)) / ACC_UNO_PRECISION - userInfo[_to].rewardDebt;\\n    }\\n\\n    function updatePool() public override {\\n        if (block.number > poolInfo.lastRewardBlock) {\\n            uint256 tokenSupply = IERC20(riskPool).totalSupply();\\n            if (tokenSupply > 0) {\\n                uint256 blocks = block.number - uint256(poolInfo.lastRewardBlock);\\n                uint256 unoReward = blocks * poolInfo.unoMultiplierPerBlock;\\n                poolInfo.accUnoPerShare = poolInfo.accUnoPerShare + uint128(((unoReward * ACC_UNO_PRECISION) / tokenSupply));\\n            }\\n            poolInfo.lastRewardBlock = uint128(block.number);\\n            emit LogUpdatePool(poolInfo.lastRewardBlock, tokenSupply, poolInfo.accUnoPerShare);\\n        }\\n    }\\n\\n    function enterInPool(uint256 _amount) external payable override isStartTime nonReentrant {\\n        require(_amount != 0, \\\"UnoRe: ZERO Value\\\");\\n        updatePool();\\n        address token = IRiskPool(riskPool).currency();\\n        uint256 lpPriceUno = IRiskPool(riskPool).lpPriceUno();\\n        if (token == address(0)) {\\n            require(msg.value >= _amount, \\\"UnoRe: insufficient paid\\\");\\n            if (msg.value > _amount) {\\n                TransferHelper.safeTransferETH(msg.sender, msg.value - _amount);\\n            }\\n            TransferHelper.safeTransferETH(riskPool, _amount);\\n        } else {\\n            TransferHelper.safeTransferFrom(token, msg.sender, riskPool, _amount);\\n        }\\n        IRiskPool(riskPool).enter(msg.sender, _amount);\\n        userInfo[msg.sender].rewardDebt =\\n            userInfo[msg.sender].rewardDebt +\\n            ((_amount * 1e18 * uint256(poolInfo.accUnoPerShare)) / lpPriceUno) /\\n            ACC_UNO_PRECISION;\\n        userInfo[msg.sender].amount = userInfo[msg.sender].amount + ((_amount * 1e18) / lpPriceUno);\\n        ICapitalAgent(capitalAgent).SSIPStaking(_amount);\\n        emit StakedInPool(msg.sender, riskPool, _amount);\\n    }\\n\\n    /**\\n     * @dev WR will be in pending for 10 days at least\\n     */\\n    function leaveFromPoolInPending(uint256 _amount) external override isStartTime nonReentrant {\\n        _harvest(msg.sender);\\n        require(ICapitalAgent(capitalAgent).checkCapitalByMCR(address(this), _amount), \\\"UnoRe: minimum capital underflow\\\");\\n        // Withdraw desired amount from pool\\n        uint256 amount = userInfo[msg.sender].amount;\\n        uint256 lpPriceUno = IRiskPool(riskPool).lpPriceUno();\\n        (uint256 pendingAmount, , ) = IRiskPool(riskPool).getWithdrawRequest(msg.sender);\\n        require(amount - pendingAmount >= _amount * 1e18 / lpPriceUno, \\\"UnoRe: withdraw amount overflow\\\");\\n        IRiskPool(riskPool).leaveFromPoolInPending(msg.sender, _amount);\\n\\n        userInfo[msg.sender].lastWithdrawTime = block.timestamp;\\n        emit LeftPool(msg.sender, riskPool, _amount);\\n    }\\n\\n    /**\\n     * @dev user can submit claim again and receive his funds into his wallet after 10 days since last WR.\\n     */\\n    function leaveFromPending() external override isStartTime nonReentrant {\\n        require(block.timestamp - userInfo[msg.sender].lastWithdrawTime >= LOCK_TIME, \\\"UnoRe: Locked time\\\");\\n        _harvest(msg.sender);\\n        uint256 amount = userInfo[msg.sender].amount;\\n        (uint256 pendingAmount, , uint256 pendingAmountInUNO) = IRiskPool(riskPool).getWithdrawRequest(msg.sender);\\n        ICapitalAgent(capitalAgent).SSIPWithdraw(pendingAmountInUNO);\\n\\n        uint256 accumulatedUno = (amount * uint256(poolInfo.accUnoPerShare)) / ACC_UNO_PRECISION;\\n        userInfo[msg.sender].rewardDebt =\\n            accumulatedUno -\\n            ((pendingAmount * uint256(poolInfo.accUnoPerShare)) / ACC_UNO_PRECISION);\\n        (uint256 withdrawAmount, uint256 withdrawAmountInUNO) = IRiskPool(riskPool).leaveFromPending(msg.sender);\\n        userInfo[msg.sender].amount = amount - withdrawAmount;\\n        emit LogLeaveFromPendingSSIP(msg.sender, riskPool, withdrawAmount, withdrawAmountInUNO);\\n    }\\n\\n    function lpTransfer(\\n        address _from,\\n        address _to,\\n        uint256 _amount\\n    ) external override nonReentrant {\\n        require(msg.sender == address(riskPool), \\\"UnoRe: not allow others transfer\\\");\\n        if (_from != syntheticSSIP && _to != syntheticSSIP) {\\n            _harvest(_from);\\n            uint256 amount = userInfo[_from].amount;\\n            (uint256 pendingAmount, , ) = IRiskPool(riskPool).getWithdrawRequest(_from);\\n            require(amount - pendingAmount >= _amount, \\\"UnoRe: balance overflow\\\");\\n            uint256 accumulatedUno = (amount * uint256(poolInfo.accUnoPerShare)) / ACC_UNO_PRECISION;\\n            userInfo[_from].rewardDebt = accumulatedUno - ((_amount * uint256(poolInfo.accUnoPerShare)) / ACC_UNO_PRECISION);\\n            userInfo[_from].amount = amount - _amount;\\n\\n            userInfo[_to].rewardDebt =\\n                userInfo[_to].rewardDebt +\\n                ((_amount * uint256(poolInfo.accUnoPerShare)) / ACC_UNO_PRECISION);\\n            userInfo[_to].amount = userInfo[_to].amount + _amount;\\n\\n            emit LogLpTransferInSSIP(_from, _to, _amount);\\n        }\\n    }\\n\\n    function harvest(address _to) external override isStartTime nonReentrant {\\n        _harvest(_to);\\n    }\\n\\n    function _harvest(address _to) private {\\n        updatePool();\\n        uint256 amount = userInfo[_to].amount;\\n        uint256 accumulatedUno = (amount * uint256(poolInfo.accUnoPerShare)) / ACC_UNO_PRECISION;\\n        uint256 _pendingUno = accumulatedUno - userInfo[_to].rewardDebt;\\n\\n        // Effects\\n        userInfo[msg.sender].rewardDebt = accumulatedUno;\\n        uint256 rewardAmount = 0;\\n\\n        if (rewarder != address(0) && _pendingUno != 0) {\\n            rewardAmount = IRewarder(rewarder).onReward(_to, _pendingUno);\\n        }\\n\\n        emit Harvest(msg.sender, _to, rewardAmount);\\n    }\\n\\n    function cancelWithdrawRequest() external nonReentrant {\\n        (uint256 cancelAmount, uint256 cancelAmountInUno) = IRiskPool(riskPool).cancelWithrawRequest(msg.sender);\\n        emit LogCancelWithdrawRequest(msg.sender, cancelAmount, cancelAmountInUno);\\n    }\\n\\n    function policyClaim(\\n        address _to,\\n        uint256 _amount,\\n        uint256 _policyId,\\n        bool _isFinished\\n    ) external onlyClaimAssessor isStartTime nonReentrant {\\n        require(_to != address(0), \\\"UnoRe: zero address\\\");\\n        require(_amount > 0, \\\"UnoRe: zero amount\\\");\\n        uint256 realClaimAmount = IRiskPool(riskPool).policyClaim(_to, _amount);\\n        ICapitalAgent(capitalAgent).SSIPPolicyCaim(realClaimAmount, _policyId, _isFinished);\\n        emit PolicyClaim(_to, realClaimAmount);\\n    }\\n\\n    function getStakedAmountPerUser(address _to) external view returns (uint256 unoAmount, uint256 lpAmount) {\\n        lpAmount = userInfo[_to].amount;\\n        uint256 lpPriceUno = IRiskPool(riskPool).lpPriceUno();\\n        unoAmount = (lpAmount * lpPriceUno) / 1e18;\\n    }\\n\\n    /**\\n     * @dev get withdraw request amount in pending per user in UNO\\n     */\\n    function getWithdrawRequestPerUser(address _user)\\n        external\\n        view\\n        returns (\\n            uint256 pendingAmount,\\n            uint256 pendingAmountInUno,\\n            uint256 originUnoAmount,\\n            uint256 requestTime\\n        )\\n    {\\n        uint256 lpPriceUno = IRiskPool(riskPool).lpPriceUno();\\n        (pendingAmount, requestTime, originUnoAmount) = IRiskPool(riskPool).getWithdrawRequest(_user);\\n        pendingAmountInUno = (pendingAmount * lpPriceUno) / 1e18;\\n    }\\n\\n    /**\\n     * @dev get total withdraw request amount in pending for the risk pool in UNO\\n     */\\n    function getTotalWithdrawPendingAmount() external view returns (uint256) {\\n        return IRiskPool(riskPool).getTotalWithdrawRequestAmount();\\n    }\\n}\\n\",\"keccak256\":\"0xa64c0324ec985ae78cacad603c0c37034b8ceeb4aa3b7329f2d16df01c738c17\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ICapitalAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\ninterface ICapitalAgent {\\n    function addPool(\\n        address _ssip,\\n        address _currency,\\n        uint256 _scr\\n    ) external;\\n\\n    function setPolicy(address _policy) external;\\n\\n    function SSIPWithdraw(uint256 _withdrawAmount) external;\\n\\n    function SSIPStaking(uint256 _stakingAmount) external;\\n\\n    function SSIPPolicyCaim(\\n        uint256 _withdrawAmount,\\n        uint256 _policyId,\\n        bool _isFinished\\n    ) external;\\n\\n    function checkCapitalByMCR(address _pool, uint256 _withdrawAmount) external view returns (bool);\\n\\n    function checkCoverageByMLR(uint256 _coverageAmount) external view returns (bool);\\n\\n    function policySale(uint256 _coverageAmount) external;\\n\\n    function updatePolicyStatus(uint256 _policyId) external;\\n}\\n\",\"keccak256\":\"0x3c44f86354e95bcf96a5a46365fe0b69650db4dbcdab1e4ce5430eead2775c1e\",\"license\":\"MIT\"},\"contracts/interfaces/IExchangeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\ninterface IExchangeAgent {\\n    function USDC_TOKEN() external view returns (address);\\n\\n    function getTokenAmountForUSDC(address _token, uint256 _usdtAmount) external view returns (uint256);\\n\\n    function getETHAmountForUSDC(uint256 _usdtAmount) external view returns (uint256);\\n\\n    function getETHAmountForToken(address _token, uint256 _tokenAmount) external view returns (uint256);\\n\\n    function getTokenAmountForETH(address _token, uint256 _ethAmount) external view returns (uint256);\\n\\n    function getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external view returns (uint256);\\n\\n    function convertForToken(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external returns (uint256);\\n\\n    function convertForETH(address _token, uint256 _convertAmount) external returns (uint256);\\n}\\n\",\"keccak256\":\"0x325c7b39b8dc75cbed47c33bf7ed5e1fc94f8458b7d7f748ce77f90099a179cd\",\"license\":\"MIT\"},\"contracts/interfaces/IMigration.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\ninterface IMigration {\\n    function onMigration(\\n        address who_,\\n        uint256 amount_,\\n        bytes memory data_\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6b25ec77b6df9db73050a67b9ce4147154c5be596b6637d47484fd6236965069\",\"license\":\"MIT\"},\"contracts/interfaces/IRewarder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.0;\\n\\ninterface IRewarder {\\n    function currency() external view returns (address);\\n\\n    function onReward(address to, uint256 unoAmount) external payable returns (uint256);\\n}\\n\",\"keccak256\":\"0x6e37fd84127d6039965b097e57e45f79630c1313d9d841176ce8a8e2ec16b83b\",\"license\":\"MIT\"},\"contracts/interfaces/IRewarderFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface IRewarderFactory {\\n    function newRewarder(\\n        address _operator,\\n        address _currency,\\n        address _pool\\n    ) external returns (address);\\n}\\n\",\"keccak256\":\"0x14d54228edcd08203983b293cfa44cc13cf1fb450019172ef57a1ebccf89f4a2\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IRiskPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface IRiskPool {\\n    function enter(address _from, uint256 _amount) external;\\n\\n    function leaveFromPoolInPending(address _to, uint256 _amount) external;\\n\\n    function leaveFromPending(address _to) external returns (uint256, uint256);\\n\\n    function cancelWithrawRequest(address _to) external returns (uint256, uint256);\\n\\n    function policyClaim(address _to, uint256 _amount) external returns (uint256 realClaimAmount);\\n\\n    function migrateLP(\\n        address _to,\\n        address _migrateTo,\\n        bool _isUnLocked\\n    ) external returns (uint256);\\n\\n    function setMinLPCapital(uint256 _minLPCapital) external;\\n\\n    function currency() external view returns (address);\\n\\n    function getTotalWithdrawRequestAmount() external view returns (uint256);\\n\\n    function getWithdrawRequest(address _to)\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256\\n        );\\n\\n    function lpPriceUno() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xf70acb54582191fcc1287662ea59e713bd4f5b504fc54a1de9278322cc900b67\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IRiskPoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface IRiskPoolFactory {\\n    function newRiskPool(\\n        string calldata _name,\\n        string calldata _symbol,\\n        address _pool,\\n        address _currency\\n    ) external returns (address);\\n}\\n\",\"keccak256\":\"0x2822333ced0a43d8bf0c0a4a4a0ed6718e2b5cfd55792fd89e5d06211f57898e\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ISingleSidedInsurancePool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface ISingleSidedInsurancePool {\\n    function updatePool() external;\\n\\n    function enterInPool(uint256 _amount) external payable;\\n\\n    function leaveFromPoolInPending(uint256 _amount) external;\\n\\n    function leaveFromPending() external;\\n\\n    function harvest(address _to) external;\\n\\n    function lpTransfer(\\n        address _from,\\n        address _to,\\n        uint256 _amount\\n    ) external;\\n\\n    function riskPool() external view returns (address);\\n}\\n\",\"keccak256\":\"0x61aea5c6569440bccd50ee673f2862b56ca2d4e7f5b2c763e7489c05e63df5ac\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ISyntheticSSIPFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface ISyntheticSSIPFactory {\\n    function newSyntheticSSIP(address _multiSigWallet, address _lpToken) external returns (address);\\n}\\n\",\"keccak256\":\"0x5b3e4fc891783209382015b95646768416958c0b186d337529982b372abe3d91\",\"license\":\"GPL-3.0\"},\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.0;\\n\\n// from Uniswap TransferHelper library\\nlibrary TransferHelper {\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeApprove: approve failed\\\");\\n    }\\n\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeTransfer: transfer failed\\\");\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::transferFrom: transferFrom failed\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"TransferHelper::safeTransferETH: ETH transfer failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xb7650ccd26cfa42968350d9c477f55f98059d74e0f173a1da45b06c2607e705d\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x6080604052620d2f006007553480156200001857600080fd5b5060405162003f9838038062003f988339810160408190526200003b9162000252565b6001600055620000546200004e62000153565b62000157565b6001600160a01b038416620000865760405162461bcd60e51b81526004016200007d90620003e1565b60405180910390fd5b6001600160a01b038316620000af5760405162461bcd60e51b81526004016200007d906200036b565b6001600160a01b038216620000d85760405162461bcd60e51b81526004016200007d90620002ae565b6001600160a01b038116620001015760405162461bcd60e51b81526004016200007d9062000329565b600380546001600160a01b038086166001600160a01b0319928316179092556002805487841690831617905560058054928516929091169190911790556200014981620001a9565b5050505062000422565b3390565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b620001b362000153565b6001600160a01b0316620001c662000226565b6001600160a01b031614620001ef5760405162461bcd60e51b81526004016200007d90620003ac565b6001600160a01b038116620002185760405162461bcd60e51b81526004016200007d90620002e3565b620002238162000157565b50565b6001546001600160a01b031690565b80516001600160a01b03811681146200024d57600080fd5b919050565b6000806000806080858703121562000268578384fd5b620002738562000235565b9350620002836020860162000235565b9250620002936040860162000235565b9150620002a36060860162000235565b905092959194509250565b6020808252818101527f556e6f52653a207a65726f206361706974616c4167656e742061646472657373604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f556e6f52653a207a65726f206d756c746973696777616c6c6574206164647265604082015261737360f01b606082015260800190565b60208082526021908201527f556e6f52653a207a65726f2065786368616e67654167656e74206164647265736040820152607360f81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526021908201527f556e6f52653a207a65726f20636c61696d4173736573736f72206164647265736040820152607360f81b606082015260800190565b613b6680620004326000396000f3fe6080604052600436106102855760003560e01c806393b6b86c11610153578063c4e5dacf116100cb578063e08c5de11161007f578063e3161ddd11610064578063e3161ddd1461069b578063e3824a38146106b0578063f2fde38b146106c357610285565b8063e08c5de114610666578063e19e71681461068657610285565b8063cd87c83c116100b0578063cd87c83c14610627578063dba6f9621461063c578063dcc3e06e1461065157610285565b8063c4e5dacf146105fd578063c6e899151461061257610285565b8063af16d6e011610122578063bc8f882811610107578063bc8f8828146105a8578063c2eb8eb9146105bd578063c3dcfcf1146105dd57610285565b8063af16d6e01461055a578063ba6194571461057a57610285565b806393b6b86c146104f057806398c6e76014610510578063a3bdd63214610525578063ae04d45d1461053a57610285565b80635a2f3d09116102015780638395206c116101b55780638da5cb5b1161019a5780638da5cb5b146104965780638fd3ab80146104ab5780639336f406146104c057610285565b80638395206c1461046157806389919b711461048157610285565b8063715018a6116101e6578063715018a61461040c578063736ec05c14610421578063780d115e1461044157610285565b80635a2f3d09146103c85780635d90bad9146103ec57610285565b806318a00d8e116102585780631b600ca21161023d5780631b600ca214610364578063413d9c3a1461038457806342198160146103a657610285565b806318a00d8e1461030c5780631959a0021461032c57610285565b80630bd075a11461028a5780630e5c011e146102ac5780630e9ae420146102cc578063157f71ed146102ec575b600080fd5b34801561029657600080fd5b506102aa6102a53660046131ae565b6106e3565b005b3480156102b857600080fd5b506102aa6102c7366004612fa4565b61078d565b3480156102d857600080fd5b506102aa6102e7366004613065565b6107e8565b3480156102f857600080fd5b506102aa610307366004612fa4565b610ae0565b34801561031857600080fd5b506102aa610327366004612fa4565b610b91565b34801561033857600080fd5b5061034c610347366004612fa4565b610c40565b60405161035b93929190613a2d565b60405180910390f35b34801561037057600080fd5b506102aa61037f366004612fe3565b610c61565b34801561039057600080fd5b50610399610e1d565b60405161035b91906139fe565b3480156103b257600080fd5b506103bb610e23565b60405161035b9190613291565b3480156103d457600080fd5b506103dd610e32565b60405161035b939291906139b7565b3480156103f857600080fd5b506102aa6104073660046131ae565b610e50565b34801561041857600080fd5b506102aa610ecf565b34801561042d57600080fd5b506102aa61043c366004612fa4565b610f1a565b34801561044d57600080fd5b506102aa61045c3660046130a5565b610fcb565b34801561046d57600080fd5b506102aa61047c3660046131ae565b6111be565b34801561048d57600080fd5b506103996114d9565b3480156104a257600080fd5b506103bb6114e5565b3480156104b757600080fd5b506102aa6114f4565b3480156104cc57600080fd5b506104e06104db366004612fa4565b6117c9565b60405161035b9493929190613a43565b3480156104fc57600080fd5b506102aa61050b3660046131ae565b611907565b34801561051c57600080fd5b506103bb611a01565b34801561053157600080fd5b50610399611a10565b34801561054657600080fd5b506102aa6105553660046131ae565b611a92565b34801561056657600080fd5b506102aa61057536600461301b565b611b28565b34801561058657600080fd5b5061059a610595366004612fa4565b611cc2565b60405161035b929190613a1f565b3480156105b457600080fd5b506102aa611d7d565b3480156105c957600080fd5b506102aa6105d8366004612fa4565b61208c565b3480156105e957600080fd5b506102aa6105f836600461310a565b61213d565b34801561060957600080fd5b506103bb61236c565b34801561061e57600080fd5b506103bb61237b565b34801561063357600080fd5b506103bb61238a565b34801561064857600080fd5b50610399612399565b34801561065d57600080fd5b506103bb61239f565b34801561067257600080fd5b50610399610681366004612fa4565b6123ae565b34801561069257600080fd5b506102aa612518565b3480156106a757600080fd5b506102aa612613565b6102aa6106be3660046131ae565b6127a8565b3480156106cf57600080fd5b506102aa6106de366004612fa4565b612b6d565b6106eb612bde565b6001600160a01b03166106fc6114e5565b6001600160a01b03161461072b5760405162461bcd60e51b8152600401610722906137ce565b60405180910390fd5b6000811161074b5760405162461bcd60e51b815260040161072290613618565b600d81905560405130907fbd1dd13c6a5b4a28ebd27fdcb8fdd01aba6bbb9f67599306248f465bcdf9817f906107829084906139fe565b60405180910390a250565b6008544210156107af5760405162461bcd60e51b8152600401610722906138dd565b600260005414156107d25760405162461bcd60e51b815260040161072290613914565b60026000556107e081612be2565b506001600055565b6002600054141561080b5760405162461bcd60e51b815260040161072290613914565b6002600055600a546001600160a01b0316331461083a5760405162461bcd60e51b815260040161072290613982565b6006546001600160a01b0384811691161480159061086657506006546001600160a01b03838116911614155b15610ad65761087483612be2565b6001600160a01b038084166000908152600b602052604080822060020154600a549151631665744b60e11b815290939190911690632ccae896906108bc908890600401613291565b60606040518083038186803b1580156108d457600080fd5b505afa1580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090c9190613201565b5050905082818361091d9190613ae0565b101561093b5760405162461bcd60e51b815260040161072290613575565b600c54600090670de0b6b3a76400009061096590600160801b90046001600160801b031685613ac1565b61096f9190613aa1565b600c54909150670de0b6b3a76400009061099990600160801b90046001600160801b031686613ac1565b6109a39190613aa1565b6109ad9082613ae0565b6001600160a01b0387166000908152600b60205260409020600101556109d38484613ae0565b6001600160a01b0387166000908152600b6020526040902060020155600c54670de0b6b3a764000090610a1690600160801b90046001600160801b031686613ac1565b610a209190613aa1565b6001600160a01b0386166000908152600b6020526040902060010154610a469190613a89565b6001600160a01b0386166000908152600b60205260409020600181019190915560020154610a75908590613a89565b6001600160a01b038087166000818152600b602052604090819020600201939093559151908816907fabc254a3e8b16a8605ce22e693a6e493e375434011c1a7ff082d09e2a84ad12190610aca9088906139fe565b60405180910390a35050505b5050600160005550565b610ae8612bde565b6001600160a01b0316610af96114e5565b6001600160a01b031614610b1f5760405162461bcd60e51b8152600401610722906137ce565b6001600160a01b038116610b455760405162461bcd60e51b815260040161072290613416565b600280546001600160a01b0319166001600160a01b03831690811790915560405130907f073f9d6137d7fa6d64859eb388090b7e90a768c36e707e4404e1fa6485b5c91e90600090a350565b610b99612bde565b6001600160a01b0316610baa6114e5565b6001600160a01b031614610bd05760405162461bcd60e51b8152600401610722906137ce565b6001600160a01b038116610bf65760405162461bcd60e51b815260040161072290613416565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fbdca3ec80f8567aeaf30c6168374c798baf11902e9b21c2b8ba3186ffd13012290600090a250565b600b6020526000908152604090208054600182015460029092015490919083565b610c69612bde565b6001600160a01b0316610c7a6114e5565b6001600160a01b031614610ca05760405162461bcd60e51b8152600401610722906137ce565b60026000541415610cc35760405162461bcd60e51b815260040161072290613914565b60026000556001600160a01b038216610cee5760405162461bcd60e51b8152600401610722906136f4565b6001600160a01b038116610d145760405162461bcd60e51b81526004016107229061344d565b600a546001600160a01b0316610d3c5760405162461bcd60e51b8152600401610722906136bd565b600a54604051631a8a8b3b60e11b81526001600160a01b0380841692633515167692610d6e92879216906004016132a5565b602060405180830381600087803b158015610d8857600080fd5b505af1158015610d9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc09190612fc7565b600680546001600160a01b0319166001600160a01b039283161790819055600a5460405190831692919091169030907e1129b9865226cebad4acf884618ae0607fff06758062b050509602db7065f090600090a450506001600055565b60075481565b6005546001600160a01b031681565b600c54600d546001600160801b0380831692600160801b9004169083565b610e58612bde565b6001600160a01b0316610e696114e5565b6001600160a01b031614610e8f5760405162461bcd60e51b8152600401610722906137ce565b610e994282613a89565b600881905560405130917fa8aa08cc14eef7b97ab4cd52f37082e23f7526bccc98cf91e6a1d412494b90519161078291906139fe565b610ed7612bde565b6001600160a01b0316610ee86114e5565b6001600160a01b031614610f0e5760405162461bcd60e51b8152600401610722906137ce565b610f186000612d74565b565b610f22612bde565b6001600160a01b0316610f336114e5565b6001600160a01b031614610f595760405162461bcd60e51b8152600401610722906137ce565b6001600160a01b038116610f7f5760405162461bcd60e51b815260040161072290613416565b600480546001600160a01b0319166001600160a01b03831690811790915560405130907f877238238dbd7134e89b00809ea73fabb50da117ace807a6b31c733bbf55d36990600090a350565b6002546001600160a01b03163314610ff55760405162461bcd60e51b81526004016107229061383a565b6008544210156110175760405162461bcd60e51b8152600401610722906138dd565b6002600054141561103a5760405162461bcd60e51b815260040161072290613914565b60026000556001600160a01b0384166110655760405162461bcd60e51b815260040161072290613416565b600083116110855760405162461bcd60e51b815260040161072290613686565b600a5460405163172500a160e11b81526000916001600160a01b031690632e4a0142906110b8908890889060040161332a565b602060405180830381600087803b1580156110d257600080fd5b505af11580156110e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110a91906131c6565b60055460405163fb6cb84760e01b81529192506001600160a01b03169063fb6cb8479061113f90849087908790600401613a07565b600060405180830381600087803b15801561115957600080fd5b505af115801561116d573d6000803e3d6000fd5b50505050846001600160a01b03167f6420c9536b9a539410a930b1fd8d115dc296d8b71426dcc0ab64f2f736b7d59f826040516111aa91906139fe565b60405180910390a250506001600055505050565b6008544210156111e05760405162461bcd60e51b8152600401610722906138dd565b600260005414156112035760405162461bcd60e51b815260040161072290613914565b600260005561121133612be2565b60055460405163c139b04f60e01b81526001600160a01b039091169063c139b04f90611243903090859060040161332a565b60206040518083038186803b15801561125b57600080fd5b505afa15801561126f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129391906130ee565b6112af5760405162461bcd60e51b81526004016107229061372b565b336000908152600b6020908152604080832060020154600a548251627a9fd960e91b815292519194936001600160a01b039091169263f53fb2009260048083019392829003018186803b15801561130557600080fd5b505afa158015611319573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133d91906131c6565b600a54604051631665744b60e11b81529192506000916001600160a01b0390911690632ccae89690611373903390600401613291565b60606040518083038186803b15801561138b57600080fd5b505afa15801561139f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c39190613201565b505090508184670de0b6b3a76400006113dc9190613ac1565b6113e69190613aa1565b6113f08285613ae0565b101561140e5760405162461bcd60e51b815260040161072290613484565b600a546040516323de6d9560e11b81526001600160a01b03909116906347bcdb2a90611440903390889060040161332a565b600060405180830381600087803b15801561145a57600080fd5b505af115801561146e573d6000803e3d6000fd5b5050336000818152600b602052604090819020429055600a5490516001600160a01b0390911693509091507f940a14c75c418e7230a2e65567722d2dda5a6713cf71b369bd0fa219fdc1ac5e906114c69088906139fe565b60405180910390a3505060016000555050565b670de0b6b3a764000081565b6001546001600160a01b031690565b600260005414156115175760405162461bcd60e51b815260040161072290613914565b60026000556004546001600160a01b03166115445760405162461bcd60e51b815260040161072290613416565b61154d33612be2565b600a5460408051627a9fd960e91b815290516000926001600160a01b03169163f53fb200916004808301926020929190829003018186803b15801561159157600080fd5b505afa1580156115a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c991906131c6565b336000908152600b6020526040812060028101546007549154939450926115f09042613ae0565b600a5460048054604051633613302f60e01b81529490931194506000936001600160a01b0392831693633613302f9361163293339392909116918891016132e2565b602060405180830381600087803b15801561164c57600080fd5b505af1158015611660573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168491906131c6565b6005549091506001600160a01b031663fb6cb847670de0b6b3a76400006116ab8787613ac1565b6116b59190613aa1565b6000806040518463ffffffff1660e01b81526004016116d693929190613a07565b600060405180830381600087803b1580156116f057600080fd5b505af1158015611704573d6000803e3d6000fd5b50506004805460405163ed59344b60e01b81526001600160a01b03909116935063ed59344b9250611739913391889101613343565b600060405180830381600087803b15801561175357600080fd5b505af1158015611767573d6000803e3d6000fd5b5050336000818152600b6020526040808220600281018390556001019190915560045490516001600160a01b0390911693509091507ff0fee1f70845d356d6a3e0baa0944ce846437b6469ea89416dad2cd7067919a4906114c69085906139fe565b6000806000806000600a60009054906101000a90046001600160a01b03166001600160a01b031663f53fb2006040518163ffffffff1660e01b815260040160206040518083038186803b15801561181f57600080fd5b505afa158015611833573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185791906131c6565b600a54604051631665744b60e11b81529192506001600160a01b031690632ccae89690611888908990600401613291565b60606040518083038186803b1580156118a057600080fd5b505afa1580156118b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d89190613201565b9196509093509150670de0b6b3a76400006118f38287613ac1565b6118fd9190613aa1565b9350509193509193565b61190f612bde565b6001600160a01b03166119206114e5565b6001600160a01b0316146119465760405162461bcd60e51b8152600401610722906137ce565b600081116119665760405162461bcd60e51b81526004016107229061394b565b600a546040516324edae1b60e21b81526001600160a01b03909116906393b6b86c906119969084906004016139fe565b600060405180830381600087803b1580156119b057600080fd5b505af11580156119c4573d6000803e3d6000fd5b50505050306001600160a01b03167f353ac2778fe09bc60cf3070bb11d548faf4037e4217a06977c16463087474aab8260405161078291906139fe565b6004546001600160a01b031681565b600a546040805163e95aa8d360e01b815290516000926001600160a01b03169163e95aa8d3916004808301926020929190829003018186803b158015611a5557600080fd5b505afa158015611a69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a8d91906131c6565b905090565b611a9a612bde565b6001600160a01b0316611aab6114e5565b6001600160a01b031614611ad15760405162461bcd60e51b8152600401610722906137ce565b60008111611af15760405162461bcd60e51b815260040161072290613760565b600781905560405130907f2c2c43c64e937ae35257af782c222986dc5adb4f56dc0881594e79bf83658d8c906107829084906139fe565b611b30612bde565b6001600160a01b0316611b416114e5565b6001600160a01b031614611b675760405162461bcd60e51b8152600401610722906137ce565b60026000541415611b8a5760405162461bcd60e51b815260040161072290613914565b60026000556001600160a01b038216611bb55760405162461bcd60e51b815260040161072290613871565b6001600160a01b038316611bdb5760405162461bcd60e51b81526004016107229061364f565b6040516369ee745160e01b81526001600160a01b038316906369ee745190611c0b908690859030906004016132bf565b602060405180830381600087803b158015611c2557600080fd5b505af1158015611c39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5d9190612fc7565b600980546001600160a01b0319166001600160a01b03928316179081905560405191169030907f6c409a36847a0a3870deae25f656f4300d45957d2643fc27faab145e19cfcf1b90611cb0908590613291565b60405180910390a35050600160005550565b6001600160a01b038082166000908152600b6020908152604080832060020154600a548251627a9fd960e91b81529251949591948694919092169263f53fb2009260048083019392829003018186803b158015611d1e57600080fd5b505afa158015611d32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d5691906131c6565b9050670de0b6b3a7640000611d6b8284613ac1565b611d759190613aa1565b925050915091565b600854421015611d9f5760405162461bcd60e51b8152600401610722906138dd565b60026000541415611dc25760405162461bcd60e51b815260040161072290613914565b60026000908155600754338252600b602052604090912054611de49042613ae0565b1015611e025760405162461bcd60e51b8152600401610722906135e1565b611e0b33612be2565b336000818152600b602052604080822060020154600a549151631665744b60e11b8152909383926001600160a01b031691632ccae89691611e4e91600401613291565b60606040518083038186803b158015611e6657600080fd5b505afa158015611e7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e9e9190613201565b600554604051632da26abb60e11b81529395509093506001600160a01b031691635b44d5769150611ed39084906004016139fe565b600060405180830381600087803b158015611eed57600080fd5b505af1158015611f01573d6000803e3d6000fd5b5050600c5460009250670de0b6b3a76400009150611f2f90600160801b90046001600160801b031686613ac1565b611f399190613aa1565b600c54909150670de0b6b3a764000090611f6390600160801b90046001600160801b031685613ac1565b611f6d9190613aa1565b611f779082613ae0565b336000818152600b602052604080822060010193909355600a54925163b20ecd1560e01b8152909283926001600160a01b039091169163b20ecd1591611fbf91600401613291565b6040805180830381600087803b158015611fd857600080fd5b505af1158015611fec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061201091906131de565b909250905061201f8287613ae0565b336000818152600b60205260409081902060020192909255600a5491516001600160a01b03909216917fced2424eb51507abd1611ac0d9893e5bc6b6d0a0596b53f86d24d31fc75a5d60906120779086908690613a1f565b60405180910390a35050600160005550505050565b612094612bde565b6001600160a01b03166120a56114e5565b6001600160a01b0316146120cb5760405162461bcd60e51b8152600401610722906137ce565b6001600160a01b0381166120f15760405162461bcd60e51b815260040161072290613416565b600580546001600160a01b0319166001600160a01b03831690811790915560405130907fdf8e7a62b39a2ec070924d5c5dce9a1957d75476af59af5a7e7ce2ee48bc777490600090a350565b612145612bde565b6001600160a01b03166121566114e5565b6001600160a01b03161461217c5760405162461bcd60e51b8152600401610722906137ce565b6002600054141561219f5760405162461bcd60e51b815260040161072290613914565b6002600055600a546001600160a01b0316156121cd5760405162461bcd60e51b8152600401610722906135ac565b6001600160a01b0384166121f35760405162461bcd60e51b815260040161072290613797565b604051630d98e31f60e01b81526001600160a01b03851690630d98e31f90612229908b908b908b908b9030908b9060040161336b565b602060405180830381600087803b15801561224357600080fd5b505af1158015612257573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061227b9190612fc7565b600a80546001600160a01b0319166001600160a01b03928316179055600c80546fffffffffffffffffffffffffffffffff1916436001600160801b0390811691909117169055600d839055600554604051633f14eb6160e11b8152911690637e29d6c2906122f190309087908690600401613306565b600060405180830381600087803b15801561230b57600080fd5b505af115801561231f573d6000803e3d6000fd5b5050600a546040516001600160a01b0390911692503091507f184d7691bf4a73930a21086fa1bdf0ee3075421531a60730288325fd5838021790600090a350506001600055505050505050565b600a546001600160a01b031681565b6002546001600160a01b031681565b6006546001600160a01b031681565b60085481565b6009546001600160a01b031681565b600080600a60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156123ff57600080fd5b505afa158015612413573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061243791906131c6565b600c549091506001600160801b03600160801b8204811691164311801561245d57508115155b156124bc57600c5460009061247b906001600160801b031643613ae0565b600d5490915060009061248e9083613ac1565b9050836124a3670de0b6b3a764000083613ac1565b6124ad9190613aa1565b6124b79084613a5e565b925050505b6001600160a01b0384166000908152600b602052604090206002810154600190910154670de0b6b3a76400006124fb6001600160801b03851684613ac1565b6125059190613aa1565b61250f9190613ae0565b95945050505050565b6002600054141561253b5760405162461bcd60e51b815260040161072290613914565b60026000908155600a546040516306e6829960e51b815282916001600160a01b03169063dcd0532090612572903390600401613291565b6040805180830381600087803b15801561258b57600080fd5b505af115801561259f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125c391906131de565b91509150336001600160a01b03167f09c6481cb228ea7f61ceb67c8e708038eb74bbb68cfcc54a9cfca199087ecfb78383604051612602929190613a1f565b60405180910390a250506001600055565b600c546001600160801b0316431115610f1857600a54604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561266b57600080fd5b505afa15801561267f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126a391906131c6565b9050801561273357600c546000906126c4906001600160801b031643613ae0565b600d549091506000906126d79083613ac1565b9050826126ec670de0b6b3a764000083613ac1565b6126f69190613aa1565b600c546127139190600160801b90046001600160801b0316613a5e565b600c80546001600160801b03928316600160801b02921691909117905550505b600c80546fffffffffffffffffffffffffffffffff1916436001600160801b0390811691909117918290556040517f982b813c7d00a9ffce9441ba40f429b2e4a35068d75532f496d0c63585c2fa689261279d92818116928692600160801b9004909116906139db565b60405180910390a150565b6008544210156127ca5760405162461bcd60e51b8152600401610722906138dd565b600260005414156127ed5760405162461bcd60e51b815260040161072290613914565b60026000558061280f5760405162461bcd60e51b815260040161072290613803565b612817612613565b600a546040805163e5a6b10f60e01b815290516000926001600160a01b03169163e5a6b10f916004808301926020929190829003018186803b15801561285c57600080fd5b505afa158015612870573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128949190612fc7565b90506000600a60009054906101000a90046001600160a01b03166001600160a01b031663f53fb2006040518163ffffffff1660e01b815260040160206040518083038186803b1580156128e657600080fd5b505afa1580156128fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061291e91906131c6565b90506001600160a01b038216612984578234101561294e5760405162461bcd60e51b8152600401610722906138a6565b8234111561296957612969336129648534613ae0565b612dc6565b600a5461297f906001600160a01b031684612dc6565b61299e565b600a5461299e90839033906001600160a01b031686612e58565b600a54604051637e348b7d60e01b81526001600160a01b0390911690637e348b7d906129d0903390879060040161332a565b600060405180830381600087803b1580156129ea57600080fd5b505af11580156129fe573d6000803e3d6000fd5b5050600c54670de0b6b3a76400009250839150600160801b90046001600160801b0316612a2b8684613ac1565b612a359190613ac1565b612a3f9190613aa1565b612a499190613aa1565b336000908152600b6020526040902060010154612a669190613a89565b336000908152600b602052604090206001015580612a8c84670de0b6b3a7640000613ac1565b612a969190613aa1565b336000908152600b6020526040902060020154612ab39190613a89565b336000908152600b602052604090819020600201919091556005549051638be5a39f60e01b81526001600160a01b0390911690638be5a39f90612afa9086906004016139fe565b600060405180830381600087803b158015612b1457600080fd5b505af1158015612b28573d6000803e3d6000fd5b5050600a546040516001600160a01b0390911692503391507fd3dba7b5565b16b7749db7d1938410a636e3c7a6ea46ed8ce7e259e19f2f3b9f90611cb09087906139fe565b612b75612bde565b6001600160a01b0316612b866114e5565b6001600160a01b031614612bac5760405162461bcd60e51b8152600401610722906137ce565b6001600160a01b038116612bd25760405162461bcd60e51b8152600401610722906133b9565b612bdb81612d74565b50565b3390565b612bea612613565b6001600160a01b0381166000908152600b6020526040812060020154600c54909190670de0b6b3a764000090612c3090600160801b90046001600160801b031684613ac1565b612c3a9190613aa1565b6001600160a01b0384166000908152600b602052604081206001015491925090612c649083613ae0565b336000908152600b60205260408120600101849055600954919250906001600160a01b031615801590612c9657508115155b15612d225760095460405163186e465160e31b81526001600160a01b039091169063c372328890612ccd908890869060040161332a565b602060405180830381600087803b158015612ce757600080fd5b505af1158015612cfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d1f91906131c6565b90505b846001600160a01b0316336001600160a01b03167fa0306f61d3fafe13787b78e276cb6b644382854a66cb46daae14227d3ec2679783604051612d6591906139fe565b60405180910390a35050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080516000808252602082019092526001600160a01b038416908390604051612df09190613258565b60006040518083038185875af1925050503d8060008114612e2d576040519150601f19603f3d011682016040523d82523d6000602084013e612e32565b606091505b5050905080612e535760405162461bcd60e51b815260040161072290613518565b505050565b600080856001600160a01b03166323b872dd868686604051602401612e7f93929190613306565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051612ecd9190613258565b6000604051808303816000865af19150503d8060008114612f0a576040519150601f19603f3d011682016040523d82523d6000602084013e612f0f565b606091505b5091509150818015612f39575080511580612f39575080806020019051810190612f3991906130ee565b612f555760405162461bcd60e51b8152600401610722906134bb565b505050505050565b60008083601f840112612f6e578182fd5b50813567ffffffffffffffff811115612f85578182fd5b602083019150836020828501011115612f9d57600080fd5b9250929050565b600060208284031215612fb5578081fd5b8135612fc081613b0d565b9392505050565b600060208284031215612fd8578081fd5b8151612fc081613b0d565b60008060408385031215612ff5578081fd5b823561300081613b0d565b9150602083013561301081613b0d565b809150509250929050565b60008060006060848603121561302f578081fd5b833561303a81613b0d565b9250602084013561304a81613b0d565b9150604084013561305a81613b0d565b809150509250925092565b600080600060608486031215613079578283fd5b833561308481613b0d565b9250602084013561309481613b0d565b929592945050506040919091013590565b600080600080608085870312156130ba578081fd5b84356130c581613b0d565b9350602085013592506040850135915060608501356130e381613b22565b939692955090935050565b6000602082840312156130ff578081fd5b8151612fc081613b22565b60008060008060008060008060c0898b031215613125578384fd5b883567ffffffffffffffff8082111561313c578586fd5b6131488c838d01612f5d565b909a50985060208b0135915080821115613160578586fd5b5061316d8b828c01612f5d565b909750955050604089013561318181613b0d565b9350606089013561319181613b0d565b979a969950949793969295929450505060808201359160a0013590565b6000602082840312156131bf578081fd5b5035919050565b6000602082840312156131d7578081fd5b5051919050565b600080604083850312156131f0578182fd5b505080516020909101519092909150565b600080600060608486031215613215578283fd5b8351925060208401519150604084015190509250925092565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60008251815b81811015613278576020818601810151858301520161325e565b818111156132865782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0393841681529183166020830152909116604082015260600190565b6001600160a01b039384168152919092166020820152901515604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03929092168252602082015260606040820181905260009082015260800190565b60006080825261337f60808301888a61322e565b828103602084015261339281878961322e565b9150506001600160a01b038085166040840152808416606084015250979650505050505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526013908201527f556e6f52653a207a65726f206164647265737300000000000000000000000000604082015260600190565b6020808252601a908201527f556e6f52653a7a65726f20666163746f72792061646472657373000000000000604082015260600190565b6020808252601f908201527f556e6f52653a20776974686472617720616d6f756e74206f766572666c6f7700604082015260600190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b60208082526034908201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60408201527f20455448207472616e73666572206661696c6564000000000000000000000000606082015260800190565b60208082526017908201527f556e6f52653a2062616c616e6365206f766572666c6f77000000000000000000604082015260600190565b6020808252818101527f556e6f52653a207269736b20706f6f6c206372656174656420616c7265616479604082015260600190565b60208082526012908201527f556e6f52653a204c6f636b65642074696d650000000000000000000000000000604082015260600190565b60208082526011908201527f556e6f52653a207a65726f2076616c7565000000000000000000000000000000604082015260600190565b6020808252601c908201527f556e6f52653a207a65726f206f70657261746f72206164647265737300000000604082015260600190565b60208082526012908201527f556e6f52653a207a65726f20616d6f756e740000000000000000000000000000604082015260600190565b6020808252601b908201527f556e6f52653a7a65726f204c5020746f6b656e20616464726573730000000000604082015260600190565b60208082526019908201527f556e6f52653a207a65726f206f776e6572206164647265737300000000000000604082015260600190565b6020808252818101527f556e6f52653a206d696e696d756d206361706974616c20756e646572666c6f77604082015260600190565b6020808252601f908201527f556e6f52653a206e6f7420616c6c6f77207a65726f206c6f636b2074696d6500604082015260600190565b6020808252601b908201527f556e6f52653a207a65726f20666163746f727920616464726573730000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526011908201527f556e6f52653a205a45524f2056616c7565000000000000000000000000000000604082015260600190565b60208082526010908201527f556e6f52653a20466f7262696464656e00000000000000000000000000000000604082015260600190565b6020808252818101527f556e6f52653a20726577617264657220666163746f7279206e6f206578697374604082015260600190565b60208082526018908201527f556e6f52653a20696e73756666696369656e7420706169640000000000000000604082015260600190565b60208082526019908201527f556e6f52653a206e6f7420617661696c61626c652074696d6500000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252601b908201527f556e6f52653a206e6f7420616c6c6f77207a65726f2076616c75650000000000604082015260600190565b6020808252818101527f556e6f52653a206e6f7420616c6c6f77206f7468657273207472616e73666572604082015260600190565b6001600160801b039384168152919092166020820152604081019190915260600190565b6001600160801b0393841681526020810192909252909116604082015260600190565b90815260200190565b92835260208301919091521515604082015260600190565b918252602082015260400190565b9283526020830191909152604082015260600190565b93845260208401929092526040830152606082015260800190565b60006001600160801b03808316818516808303821115613a8057613a80613af7565b01949350505050565b60008219821115613a9c57613a9c613af7565b500190565b600082613abc57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615613adb57613adb613af7565b500290565b600082821015613af257613af2613af7565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114612bdb57600080fd5b8015158114612bdb57600080fdfea264697066735822122081df25ce0c02811c2ccad34ff1c89f4520fb5f189cda4b52a368f6a69198289064736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106102855760003560e01c806393b6b86c11610153578063c4e5dacf116100cb578063e08c5de11161007f578063e3161ddd11610064578063e3161ddd1461069b578063e3824a38146106b0578063f2fde38b146106c357610285565b8063e08c5de114610666578063e19e71681461068657610285565b8063cd87c83c116100b0578063cd87c83c14610627578063dba6f9621461063c578063dcc3e06e1461065157610285565b8063c4e5dacf146105fd578063c6e899151461061257610285565b8063af16d6e011610122578063bc8f882811610107578063bc8f8828146105a8578063c2eb8eb9146105bd578063c3dcfcf1146105dd57610285565b8063af16d6e01461055a578063ba6194571461057a57610285565b806393b6b86c146104f057806398c6e76014610510578063a3bdd63214610525578063ae04d45d1461053a57610285565b80635a2f3d09116102015780638395206c116101b55780638da5cb5b1161019a5780638da5cb5b146104965780638fd3ab80146104ab5780639336f406146104c057610285565b80638395206c1461046157806389919b711461048157610285565b8063715018a6116101e6578063715018a61461040c578063736ec05c14610421578063780d115e1461044157610285565b80635a2f3d09146103c85780635d90bad9146103ec57610285565b806318a00d8e116102585780631b600ca21161023d5780631b600ca214610364578063413d9c3a1461038457806342198160146103a657610285565b806318a00d8e1461030c5780631959a0021461032c57610285565b80630bd075a11461028a5780630e5c011e146102ac5780630e9ae420146102cc578063157f71ed146102ec575b600080fd5b34801561029657600080fd5b506102aa6102a53660046131ae565b6106e3565b005b3480156102b857600080fd5b506102aa6102c7366004612fa4565b61078d565b3480156102d857600080fd5b506102aa6102e7366004613065565b6107e8565b3480156102f857600080fd5b506102aa610307366004612fa4565b610ae0565b34801561031857600080fd5b506102aa610327366004612fa4565b610b91565b34801561033857600080fd5b5061034c610347366004612fa4565b610c40565b60405161035b93929190613a2d565b60405180910390f35b34801561037057600080fd5b506102aa61037f366004612fe3565b610c61565b34801561039057600080fd5b50610399610e1d565b60405161035b91906139fe565b3480156103b257600080fd5b506103bb610e23565b60405161035b9190613291565b3480156103d457600080fd5b506103dd610e32565b60405161035b939291906139b7565b3480156103f857600080fd5b506102aa6104073660046131ae565b610e50565b34801561041857600080fd5b506102aa610ecf565b34801561042d57600080fd5b506102aa61043c366004612fa4565b610f1a565b34801561044d57600080fd5b506102aa61045c3660046130a5565b610fcb565b34801561046d57600080fd5b506102aa61047c3660046131ae565b6111be565b34801561048d57600080fd5b506103996114d9565b3480156104a257600080fd5b506103bb6114e5565b3480156104b757600080fd5b506102aa6114f4565b3480156104cc57600080fd5b506104e06104db366004612fa4565b6117c9565b60405161035b9493929190613a43565b3480156104fc57600080fd5b506102aa61050b3660046131ae565b611907565b34801561051c57600080fd5b506103bb611a01565b34801561053157600080fd5b50610399611a10565b34801561054657600080fd5b506102aa6105553660046131ae565b611a92565b34801561056657600080fd5b506102aa61057536600461301b565b611b28565b34801561058657600080fd5b5061059a610595366004612fa4565b611cc2565b60405161035b929190613a1f565b3480156105b457600080fd5b506102aa611d7d565b3480156105c957600080fd5b506102aa6105d8366004612fa4565b61208c565b3480156105e957600080fd5b506102aa6105f836600461310a565b61213d565b34801561060957600080fd5b506103bb61236c565b34801561061e57600080fd5b506103bb61237b565b34801561063357600080fd5b506103bb61238a565b34801561064857600080fd5b50610399612399565b34801561065d57600080fd5b506103bb61239f565b34801561067257600080fd5b50610399610681366004612fa4565b6123ae565b34801561069257600080fd5b506102aa612518565b3480156106a757600080fd5b506102aa612613565b6102aa6106be3660046131ae565b6127a8565b3480156106cf57600080fd5b506102aa6106de366004612fa4565b612b6d565b6106eb612bde565b6001600160a01b03166106fc6114e5565b6001600160a01b03161461072b5760405162461bcd60e51b8152600401610722906137ce565b60405180910390fd5b6000811161074b5760405162461bcd60e51b815260040161072290613618565b600d81905560405130907fbd1dd13c6a5b4a28ebd27fdcb8fdd01aba6bbb9f67599306248f465bcdf9817f906107829084906139fe565b60405180910390a250565b6008544210156107af5760405162461bcd60e51b8152600401610722906138dd565b600260005414156107d25760405162461bcd60e51b815260040161072290613914565b60026000556107e081612be2565b506001600055565b6002600054141561080b5760405162461bcd60e51b815260040161072290613914565b6002600055600a546001600160a01b0316331461083a5760405162461bcd60e51b815260040161072290613982565b6006546001600160a01b0384811691161480159061086657506006546001600160a01b03838116911614155b15610ad65761087483612be2565b6001600160a01b038084166000908152600b602052604080822060020154600a549151631665744b60e11b815290939190911690632ccae896906108bc908890600401613291565b60606040518083038186803b1580156108d457600080fd5b505afa1580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090c9190613201565b5050905082818361091d9190613ae0565b101561093b5760405162461bcd60e51b815260040161072290613575565b600c54600090670de0b6b3a76400009061096590600160801b90046001600160801b031685613ac1565b61096f9190613aa1565b600c54909150670de0b6b3a76400009061099990600160801b90046001600160801b031686613ac1565b6109a39190613aa1565b6109ad9082613ae0565b6001600160a01b0387166000908152600b60205260409020600101556109d38484613ae0565b6001600160a01b0387166000908152600b6020526040902060020155600c54670de0b6b3a764000090610a1690600160801b90046001600160801b031686613ac1565b610a209190613aa1565b6001600160a01b0386166000908152600b6020526040902060010154610a469190613a89565b6001600160a01b0386166000908152600b60205260409020600181019190915560020154610a75908590613a89565b6001600160a01b038087166000818152600b602052604090819020600201939093559151908816907fabc254a3e8b16a8605ce22e693a6e493e375434011c1a7ff082d09e2a84ad12190610aca9088906139fe565b60405180910390a35050505b5050600160005550565b610ae8612bde565b6001600160a01b0316610af96114e5565b6001600160a01b031614610b1f5760405162461bcd60e51b8152600401610722906137ce565b6001600160a01b038116610b455760405162461bcd60e51b815260040161072290613416565b600280546001600160a01b0319166001600160a01b03831690811790915560405130907f073f9d6137d7fa6d64859eb388090b7e90a768c36e707e4404e1fa6485b5c91e90600090a350565b610b99612bde565b6001600160a01b0316610baa6114e5565b6001600160a01b031614610bd05760405162461bcd60e51b8152600401610722906137ce565b6001600160a01b038116610bf65760405162461bcd60e51b815260040161072290613416565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fbdca3ec80f8567aeaf30c6168374c798baf11902e9b21c2b8ba3186ffd13012290600090a250565b600b6020526000908152604090208054600182015460029092015490919083565b610c69612bde565b6001600160a01b0316610c7a6114e5565b6001600160a01b031614610ca05760405162461bcd60e51b8152600401610722906137ce565b60026000541415610cc35760405162461bcd60e51b815260040161072290613914565b60026000556001600160a01b038216610cee5760405162461bcd60e51b8152600401610722906136f4565b6001600160a01b038116610d145760405162461bcd60e51b81526004016107229061344d565b600a546001600160a01b0316610d3c5760405162461bcd60e51b8152600401610722906136bd565b600a54604051631a8a8b3b60e11b81526001600160a01b0380841692633515167692610d6e92879216906004016132a5565b602060405180830381600087803b158015610d8857600080fd5b505af1158015610d9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc09190612fc7565b600680546001600160a01b0319166001600160a01b039283161790819055600a5460405190831692919091169030907e1129b9865226cebad4acf884618ae0607fff06758062b050509602db7065f090600090a450506001600055565b60075481565b6005546001600160a01b031681565b600c54600d546001600160801b0380831692600160801b9004169083565b610e58612bde565b6001600160a01b0316610e696114e5565b6001600160a01b031614610e8f5760405162461bcd60e51b8152600401610722906137ce565b610e994282613a89565b600881905560405130917fa8aa08cc14eef7b97ab4cd52f37082e23f7526bccc98cf91e6a1d412494b90519161078291906139fe565b610ed7612bde565b6001600160a01b0316610ee86114e5565b6001600160a01b031614610f0e5760405162461bcd60e51b8152600401610722906137ce565b610f186000612d74565b565b610f22612bde565b6001600160a01b0316610f336114e5565b6001600160a01b031614610f595760405162461bcd60e51b8152600401610722906137ce565b6001600160a01b038116610f7f5760405162461bcd60e51b815260040161072290613416565b600480546001600160a01b0319166001600160a01b03831690811790915560405130907f877238238dbd7134e89b00809ea73fabb50da117ace807a6b31c733bbf55d36990600090a350565b6002546001600160a01b03163314610ff55760405162461bcd60e51b81526004016107229061383a565b6008544210156110175760405162461bcd60e51b8152600401610722906138dd565b6002600054141561103a5760405162461bcd60e51b815260040161072290613914565b60026000556001600160a01b0384166110655760405162461bcd60e51b815260040161072290613416565b600083116110855760405162461bcd60e51b815260040161072290613686565b600a5460405163172500a160e11b81526000916001600160a01b031690632e4a0142906110b8908890889060040161332a565b602060405180830381600087803b1580156110d257600080fd5b505af11580156110e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110a91906131c6565b60055460405163fb6cb84760e01b81529192506001600160a01b03169063fb6cb8479061113f90849087908790600401613a07565b600060405180830381600087803b15801561115957600080fd5b505af115801561116d573d6000803e3d6000fd5b50505050846001600160a01b03167f6420c9536b9a539410a930b1fd8d115dc296d8b71426dcc0ab64f2f736b7d59f826040516111aa91906139fe565b60405180910390a250506001600055505050565b6008544210156111e05760405162461bcd60e51b8152600401610722906138dd565b600260005414156112035760405162461bcd60e51b815260040161072290613914565b600260005561121133612be2565b60055460405163c139b04f60e01b81526001600160a01b039091169063c139b04f90611243903090859060040161332a565b60206040518083038186803b15801561125b57600080fd5b505afa15801561126f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129391906130ee565b6112af5760405162461bcd60e51b81526004016107229061372b565b336000908152600b6020908152604080832060020154600a548251627a9fd960e91b815292519194936001600160a01b039091169263f53fb2009260048083019392829003018186803b15801561130557600080fd5b505afa158015611319573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133d91906131c6565b600a54604051631665744b60e11b81529192506000916001600160a01b0390911690632ccae89690611373903390600401613291565b60606040518083038186803b15801561138b57600080fd5b505afa15801561139f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c39190613201565b505090508184670de0b6b3a76400006113dc9190613ac1565b6113e69190613aa1565b6113f08285613ae0565b101561140e5760405162461bcd60e51b815260040161072290613484565b600a546040516323de6d9560e11b81526001600160a01b03909116906347bcdb2a90611440903390889060040161332a565b600060405180830381600087803b15801561145a57600080fd5b505af115801561146e573d6000803e3d6000fd5b5050336000818152600b602052604090819020429055600a5490516001600160a01b0390911693509091507f940a14c75c418e7230a2e65567722d2dda5a6713cf71b369bd0fa219fdc1ac5e906114c69088906139fe565b60405180910390a3505060016000555050565b670de0b6b3a764000081565b6001546001600160a01b031690565b600260005414156115175760405162461bcd60e51b815260040161072290613914565b60026000556004546001600160a01b03166115445760405162461bcd60e51b815260040161072290613416565b61154d33612be2565b600a5460408051627a9fd960e91b815290516000926001600160a01b03169163f53fb200916004808301926020929190829003018186803b15801561159157600080fd5b505afa1580156115a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c991906131c6565b336000908152600b6020526040812060028101546007549154939450926115f09042613ae0565b600a5460048054604051633613302f60e01b81529490931194506000936001600160a01b0392831693633613302f9361163293339392909116918891016132e2565b602060405180830381600087803b15801561164c57600080fd5b505af1158015611660573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168491906131c6565b6005549091506001600160a01b031663fb6cb847670de0b6b3a76400006116ab8787613ac1565b6116b59190613aa1565b6000806040518463ffffffff1660e01b81526004016116d693929190613a07565b600060405180830381600087803b1580156116f057600080fd5b505af1158015611704573d6000803e3d6000fd5b50506004805460405163ed59344b60e01b81526001600160a01b03909116935063ed59344b9250611739913391889101613343565b600060405180830381600087803b15801561175357600080fd5b505af1158015611767573d6000803e3d6000fd5b5050336000818152600b6020526040808220600281018390556001019190915560045490516001600160a01b0390911693509091507ff0fee1f70845d356d6a3e0baa0944ce846437b6469ea89416dad2cd7067919a4906114c69085906139fe565b6000806000806000600a60009054906101000a90046001600160a01b03166001600160a01b031663f53fb2006040518163ffffffff1660e01b815260040160206040518083038186803b15801561181f57600080fd5b505afa158015611833573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185791906131c6565b600a54604051631665744b60e11b81529192506001600160a01b031690632ccae89690611888908990600401613291565b60606040518083038186803b1580156118a057600080fd5b505afa1580156118b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d89190613201565b9196509093509150670de0b6b3a76400006118f38287613ac1565b6118fd9190613aa1565b9350509193509193565b61190f612bde565b6001600160a01b03166119206114e5565b6001600160a01b0316146119465760405162461bcd60e51b8152600401610722906137ce565b600081116119665760405162461bcd60e51b81526004016107229061394b565b600a546040516324edae1b60e21b81526001600160a01b03909116906393b6b86c906119969084906004016139fe565b600060405180830381600087803b1580156119b057600080fd5b505af11580156119c4573d6000803e3d6000fd5b50505050306001600160a01b03167f353ac2778fe09bc60cf3070bb11d548faf4037e4217a06977c16463087474aab8260405161078291906139fe565b6004546001600160a01b031681565b600a546040805163e95aa8d360e01b815290516000926001600160a01b03169163e95aa8d3916004808301926020929190829003018186803b158015611a5557600080fd5b505afa158015611a69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a8d91906131c6565b905090565b611a9a612bde565b6001600160a01b0316611aab6114e5565b6001600160a01b031614611ad15760405162461bcd60e51b8152600401610722906137ce565b60008111611af15760405162461bcd60e51b815260040161072290613760565b600781905560405130907f2c2c43c64e937ae35257af782c222986dc5adb4f56dc0881594e79bf83658d8c906107829084906139fe565b611b30612bde565b6001600160a01b0316611b416114e5565b6001600160a01b031614611b675760405162461bcd60e51b8152600401610722906137ce565b60026000541415611b8a5760405162461bcd60e51b815260040161072290613914565b60026000556001600160a01b038216611bb55760405162461bcd60e51b815260040161072290613871565b6001600160a01b038316611bdb5760405162461bcd60e51b81526004016107229061364f565b6040516369ee745160e01b81526001600160a01b038316906369ee745190611c0b908690859030906004016132bf565b602060405180830381600087803b158015611c2557600080fd5b505af1158015611c39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5d9190612fc7565b600980546001600160a01b0319166001600160a01b03928316179081905560405191169030907f6c409a36847a0a3870deae25f656f4300d45957d2643fc27faab145e19cfcf1b90611cb0908590613291565b60405180910390a35050600160005550565b6001600160a01b038082166000908152600b6020908152604080832060020154600a548251627a9fd960e91b81529251949591948694919092169263f53fb2009260048083019392829003018186803b158015611d1e57600080fd5b505afa158015611d32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d5691906131c6565b9050670de0b6b3a7640000611d6b8284613ac1565b611d759190613aa1565b925050915091565b600854421015611d9f5760405162461bcd60e51b8152600401610722906138dd565b60026000541415611dc25760405162461bcd60e51b815260040161072290613914565b60026000908155600754338252600b602052604090912054611de49042613ae0565b1015611e025760405162461bcd60e51b8152600401610722906135e1565b611e0b33612be2565b336000818152600b602052604080822060020154600a549151631665744b60e11b8152909383926001600160a01b031691632ccae89691611e4e91600401613291565b60606040518083038186803b158015611e6657600080fd5b505afa158015611e7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e9e9190613201565b600554604051632da26abb60e11b81529395509093506001600160a01b031691635b44d5769150611ed39084906004016139fe565b600060405180830381600087803b158015611eed57600080fd5b505af1158015611f01573d6000803e3d6000fd5b5050600c5460009250670de0b6b3a76400009150611f2f90600160801b90046001600160801b031686613ac1565b611f399190613aa1565b600c54909150670de0b6b3a764000090611f6390600160801b90046001600160801b031685613ac1565b611f6d9190613aa1565b611f779082613ae0565b336000818152600b602052604080822060010193909355600a54925163b20ecd1560e01b8152909283926001600160a01b039091169163b20ecd1591611fbf91600401613291565b6040805180830381600087803b158015611fd857600080fd5b505af1158015611fec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061201091906131de565b909250905061201f8287613ae0565b336000818152600b60205260409081902060020192909255600a5491516001600160a01b03909216917fced2424eb51507abd1611ac0d9893e5bc6b6d0a0596b53f86d24d31fc75a5d60906120779086908690613a1f565b60405180910390a35050600160005550505050565b612094612bde565b6001600160a01b03166120a56114e5565b6001600160a01b0316146120cb5760405162461bcd60e51b8152600401610722906137ce565b6001600160a01b0381166120f15760405162461bcd60e51b815260040161072290613416565b600580546001600160a01b0319166001600160a01b03831690811790915560405130907fdf8e7a62b39a2ec070924d5c5dce9a1957d75476af59af5a7e7ce2ee48bc777490600090a350565b612145612bde565b6001600160a01b03166121566114e5565b6001600160a01b03161461217c5760405162461bcd60e51b8152600401610722906137ce565b6002600054141561219f5760405162461bcd60e51b815260040161072290613914565b6002600055600a546001600160a01b0316156121cd5760405162461bcd60e51b8152600401610722906135ac565b6001600160a01b0384166121f35760405162461bcd60e51b815260040161072290613797565b604051630d98e31f60e01b81526001600160a01b03851690630d98e31f90612229908b908b908b908b9030908b9060040161336b565b602060405180830381600087803b15801561224357600080fd5b505af1158015612257573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061227b9190612fc7565b600a80546001600160a01b0319166001600160a01b03928316179055600c80546fffffffffffffffffffffffffffffffff1916436001600160801b0390811691909117169055600d839055600554604051633f14eb6160e11b8152911690637e29d6c2906122f190309087908690600401613306565b600060405180830381600087803b15801561230b57600080fd5b505af115801561231f573d6000803e3d6000fd5b5050600a546040516001600160a01b0390911692503091507f184d7691bf4a73930a21086fa1bdf0ee3075421531a60730288325fd5838021790600090a350506001600055505050505050565b600a546001600160a01b031681565b6002546001600160a01b031681565b6006546001600160a01b031681565b60085481565b6009546001600160a01b031681565b600080600a60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156123ff57600080fd5b505afa158015612413573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061243791906131c6565b600c549091506001600160801b03600160801b8204811691164311801561245d57508115155b156124bc57600c5460009061247b906001600160801b031643613ae0565b600d5490915060009061248e9083613ac1565b9050836124a3670de0b6b3a764000083613ac1565b6124ad9190613aa1565b6124b79084613a5e565b925050505b6001600160a01b0384166000908152600b602052604090206002810154600190910154670de0b6b3a76400006124fb6001600160801b03851684613ac1565b6125059190613aa1565b61250f9190613ae0565b95945050505050565b6002600054141561253b5760405162461bcd60e51b815260040161072290613914565b60026000908155600a546040516306e6829960e51b815282916001600160a01b03169063dcd0532090612572903390600401613291565b6040805180830381600087803b15801561258b57600080fd5b505af115801561259f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125c391906131de565b91509150336001600160a01b03167f09c6481cb228ea7f61ceb67c8e708038eb74bbb68cfcc54a9cfca199087ecfb78383604051612602929190613a1f565b60405180910390a250506001600055565b600c546001600160801b0316431115610f1857600a54604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561266b57600080fd5b505afa15801561267f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126a391906131c6565b9050801561273357600c546000906126c4906001600160801b031643613ae0565b600d549091506000906126d79083613ac1565b9050826126ec670de0b6b3a764000083613ac1565b6126f69190613aa1565b600c546127139190600160801b90046001600160801b0316613a5e565b600c80546001600160801b03928316600160801b02921691909117905550505b600c80546fffffffffffffffffffffffffffffffff1916436001600160801b0390811691909117918290556040517f982b813c7d00a9ffce9441ba40f429b2e4a35068d75532f496d0c63585c2fa689261279d92818116928692600160801b9004909116906139db565b60405180910390a150565b6008544210156127ca5760405162461bcd60e51b8152600401610722906138dd565b600260005414156127ed5760405162461bcd60e51b815260040161072290613914565b60026000558061280f5760405162461bcd60e51b815260040161072290613803565b612817612613565b600a546040805163e5a6b10f60e01b815290516000926001600160a01b03169163e5a6b10f916004808301926020929190829003018186803b15801561285c57600080fd5b505afa158015612870573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128949190612fc7565b90506000600a60009054906101000a90046001600160a01b03166001600160a01b031663f53fb2006040518163ffffffff1660e01b815260040160206040518083038186803b1580156128e657600080fd5b505afa1580156128fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061291e91906131c6565b90506001600160a01b038216612984578234101561294e5760405162461bcd60e51b8152600401610722906138a6565b8234111561296957612969336129648534613ae0565b612dc6565b600a5461297f906001600160a01b031684612dc6565b61299e565b600a5461299e90839033906001600160a01b031686612e58565b600a54604051637e348b7d60e01b81526001600160a01b0390911690637e348b7d906129d0903390879060040161332a565b600060405180830381600087803b1580156129ea57600080fd5b505af11580156129fe573d6000803e3d6000fd5b5050600c54670de0b6b3a76400009250839150600160801b90046001600160801b0316612a2b8684613ac1565b612a359190613ac1565b612a3f9190613aa1565b612a499190613aa1565b336000908152600b6020526040902060010154612a669190613a89565b336000908152600b602052604090206001015580612a8c84670de0b6b3a7640000613ac1565b612a969190613aa1565b336000908152600b6020526040902060020154612ab39190613a89565b336000908152600b602052604090819020600201919091556005549051638be5a39f60e01b81526001600160a01b0390911690638be5a39f90612afa9086906004016139fe565b600060405180830381600087803b158015612b1457600080fd5b505af1158015612b28573d6000803e3d6000fd5b5050600a546040516001600160a01b0390911692503391507fd3dba7b5565b16b7749db7d1938410a636e3c7a6ea46ed8ce7e259e19f2f3b9f90611cb09087906139fe565b612b75612bde565b6001600160a01b0316612b866114e5565b6001600160a01b031614612bac5760405162461bcd60e51b8152600401610722906137ce565b6001600160a01b038116612bd25760405162461bcd60e51b8152600401610722906133b9565b612bdb81612d74565b50565b3390565b612bea612613565b6001600160a01b0381166000908152600b6020526040812060020154600c54909190670de0b6b3a764000090612c3090600160801b90046001600160801b031684613ac1565b612c3a9190613aa1565b6001600160a01b0384166000908152600b602052604081206001015491925090612c649083613ae0565b336000908152600b60205260408120600101849055600954919250906001600160a01b031615801590612c9657508115155b15612d225760095460405163186e465160e31b81526001600160a01b039091169063c372328890612ccd908890869060040161332a565b602060405180830381600087803b158015612ce757600080fd5b505af1158015612cfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d1f91906131c6565b90505b846001600160a01b0316336001600160a01b03167fa0306f61d3fafe13787b78e276cb6b644382854a66cb46daae14227d3ec2679783604051612d6591906139fe565b60405180910390a35050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080516000808252602082019092526001600160a01b038416908390604051612df09190613258565b60006040518083038185875af1925050503d8060008114612e2d576040519150601f19603f3d011682016040523d82523d6000602084013e612e32565b606091505b5050905080612e535760405162461bcd60e51b815260040161072290613518565b505050565b600080856001600160a01b03166323b872dd868686604051602401612e7f93929190613306565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051612ecd9190613258565b6000604051808303816000865af19150503d8060008114612f0a576040519150601f19603f3d011682016040523d82523d6000602084013e612f0f565b606091505b5091509150818015612f39575080511580612f39575080806020019051810190612f3991906130ee565b612f555760405162461bcd60e51b8152600401610722906134bb565b505050505050565b60008083601f840112612f6e578182fd5b50813567ffffffffffffffff811115612f85578182fd5b602083019150836020828501011115612f9d57600080fd5b9250929050565b600060208284031215612fb5578081fd5b8135612fc081613b0d565b9392505050565b600060208284031215612fd8578081fd5b8151612fc081613b0d565b60008060408385031215612ff5578081fd5b823561300081613b0d565b9150602083013561301081613b0d565b809150509250929050565b60008060006060848603121561302f578081fd5b833561303a81613b0d565b9250602084013561304a81613b0d565b9150604084013561305a81613b0d565b809150509250925092565b600080600060608486031215613079578283fd5b833561308481613b0d565b9250602084013561309481613b0d565b929592945050506040919091013590565b600080600080608085870312156130ba578081fd5b84356130c581613b0d565b9350602085013592506040850135915060608501356130e381613b22565b939692955090935050565b6000602082840312156130ff578081fd5b8151612fc081613b22565b60008060008060008060008060c0898b031215613125578384fd5b883567ffffffffffffffff8082111561313c578586fd5b6131488c838d01612f5d565b909a50985060208b0135915080821115613160578586fd5b5061316d8b828c01612f5d565b909750955050604089013561318181613b0d565b9350606089013561319181613b0d565b979a969950949793969295929450505060808201359160a0013590565b6000602082840312156131bf578081fd5b5035919050565b6000602082840312156131d7578081fd5b5051919050565b600080604083850312156131f0578182fd5b505080516020909101519092909150565b600080600060608486031215613215578283fd5b8351925060208401519150604084015190509250925092565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60008251815b81811015613278576020818601810151858301520161325e565b818111156132865782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0393841681529183166020830152909116604082015260600190565b6001600160a01b039384168152919092166020820152901515604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03929092168252602082015260606040820181905260009082015260800190565b60006080825261337f60808301888a61322e565b828103602084015261339281878961322e565b9150506001600160a01b038085166040840152808416606084015250979650505050505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526013908201527f556e6f52653a207a65726f206164647265737300000000000000000000000000604082015260600190565b6020808252601a908201527f556e6f52653a7a65726f20666163746f72792061646472657373000000000000604082015260600190565b6020808252601f908201527f556e6f52653a20776974686472617720616d6f756e74206f766572666c6f7700604082015260600190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b60208082526034908201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60408201527f20455448207472616e73666572206661696c6564000000000000000000000000606082015260800190565b60208082526017908201527f556e6f52653a2062616c616e6365206f766572666c6f77000000000000000000604082015260600190565b6020808252818101527f556e6f52653a207269736b20706f6f6c206372656174656420616c7265616479604082015260600190565b60208082526012908201527f556e6f52653a204c6f636b65642074696d650000000000000000000000000000604082015260600190565b60208082526011908201527f556e6f52653a207a65726f2076616c7565000000000000000000000000000000604082015260600190565b6020808252601c908201527f556e6f52653a207a65726f206f70657261746f72206164647265737300000000604082015260600190565b60208082526012908201527f556e6f52653a207a65726f20616d6f756e740000000000000000000000000000604082015260600190565b6020808252601b908201527f556e6f52653a7a65726f204c5020746f6b656e20616464726573730000000000604082015260600190565b60208082526019908201527f556e6f52653a207a65726f206f776e6572206164647265737300000000000000604082015260600190565b6020808252818101527f556e6f52653a206d696e696d756d206361706974616c20756e646572666c6f77604082015260600190565b6020808252601f908201527f556e6f52653a206e6f7420616c6c6f77207a65726f206c6f636b2074696d6500604082015260600190565b6020808252601b908201527f556e6f52653a207a65726f20666163746f727920616464726573730000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526011908201527f556e6f52653a205a45524f2056616c7565000000000000000000000000000000604082015260600190565b60208082526010908201527f556e6f52653a20466f7262696464656e00000000000000000000000000000000604082015260600190565b6020808252818101527f556e6f52653a20726577617264657220666163746f7279206e6f206578697374604082015260600190565b60208082526018908201527f556e6f52653a20696e73756666696369656e7420706169640000000000000000604082015260600190565b60208082526019908201527f556e6f52653a206e6f7420617661696c61626c652074696d6500000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252601b908201527f556e6f52653a206e6f7420616c6c6f77207a65726f2076616c75650000000000604082015260600190565b6020808252818101527f556e6f52653a206e6f7420616c6c6f77206f7468657273207472616e73666572604082015260600190565b6001600160801b039384168152919092166020820152604081019190915260600190565b6001600160801b0393841681526020810192909252909116604082015260600190565b90815260200190565b92835260208301919091521515604082015260600190565b918252602082015260400190565b9283526020830191909152604082015260600190565b93845260208401929092526040830152606082015260800190565b60006001600160801b03808316818516808303821115613a8057613a80613af7565b01949350505050565b60008219821115613a9c57613a9c613af7565b500190565b600082613abc57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615613adb57613adb613af7565b500290565b600082821015613af257613af2613af7565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114612bdb57600080fd5b8015158114612bdb57600080fdfea264697066735822122081df25ce0c02811c2ccad34ff1c89f4520fb5f189cda4b52a368f6a69198289064736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "createRiskPool(string,string,address,address,uint256,uint256)": {
        "details": "create Risk pool with UNO from SSIP owner"
      },
      "getTotalWithdrawPendingAmount()": {
        "details": "get total withdraw request amount in pending for the risk pool in UNO"
      },
      "getWithdrawRequestPerUser(address)": {
        "details": "get withdraw request amount in pending per user in UNO"
      },
      "leaveFromPending()": {
        "details": "user can submit claim again and receive his funds into his wallet after 10 days since last WR."
      },
      "leaveFromPoolInPending(uint256)": {
        "details": "WR will be in pending for 10 days at least"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 114,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 7,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 9603,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "claimAssessor",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 9605,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "exchangeAgent",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 9607,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "migrateTo",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 9609,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "capitalAgent",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 9611,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "syntheticSSIP",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 9614,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "LOCK_TIME",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 9619,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "STAKING_START_TIME",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 9621,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "rewarder",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 9624,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "riskPool",
        "offset": 0,
        "slot": "10",
        "type": "t_address"
      },
      {
        "astId": 9643,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "userInfo",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_struct(UserInfo)9638_storage)"
      },
      {
        "astId": 9646,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "poolInfo",
        "offset": 0,
        "slot": "12",
        "type": "t_struct(PoolInfo)9631_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(UserInfo)9638_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct SingleSidedInsurancePool.UserInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(UserInfo)9638_storage"
      },
      "t_struct(PoolInfo)9631_storage": {
        "encoding": "inplace",
        "label": "struct SingleSidedInsurancePool.PoolInfo",
        "members": [
          {
            "astId": 9626,
            "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
            "label": "lastRewardBlock",
            "offset": 0,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 9628,
            "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
            "label": "accUnoPerShare",
            "offset": 16,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 9630,
            "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
            "label": "unoMultiplierPerBlock",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(UserInfo)9638_storage": {
        "encoding": "inplace",
        "label": "struct SingleSidedInsurancePool.UserInfo",
        "members": [
          {
            "astId": 9633,
            "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
            "label": "lastWithdrawTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 9635,
            "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
            "label": "rewardDebt",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 9637,
            "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
            "label": "amount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}