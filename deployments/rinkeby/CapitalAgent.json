{
  "address": "0x254D75e01617455BC25258036e642Fb82bbfd0c9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_UNO_TOKEN",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_USDC_TOKEN",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_ssip",
          "type": "address"
        }
      ],
      "name": "LogAddPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "LogAddPoolWhiteList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_policy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_policyTokenId",
          "type": "uint256"
        }
      ],
      "name": "LogMarkToClaimPolicy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_salesPolicy",
          "type": "address"
        }
      ],
      "name": "LogRemovePolicy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_ssip",
          "type": "address"
        }
      ],
      "name": "LogRemovePool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "LogRemovePoolWhiteList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_capitalAgent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        }
      ],
      "name": "LogSetExchangeAgent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_capitalAgent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_MCR",
          "type": "uint256"
        }
      ],
      "name": "LogSetMCR",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_capitalAgent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_MLR",
          "type": "uint256"
        }
      ],
      "name": "LogSetMLR",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_salesPolicy",
          "type": "address"
        }
      ],
      "name": "LogSetPolicy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "LogSetSalesPolicyFactory",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_policy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_policyUtilized",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_totalUtilizedAmount",
          "type": "uint256"
        }
      ],
      "name": "LogUpdatePolicyCoverage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_policy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_policyTokenId",
          "type": "uint256"
        }
      ],
      "name": "LogUpdatePolicyExpired",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_ssip",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_poolCapital",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_totalCapital",
          "type": "uint256"
        }
      ],
      "name": "LogUpdatePoolCapital",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CALC_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MCR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MLR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawAmount",
          "type": "uint256"
        }
      ],
      "name": "SSIPPolicyCaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_stakingAmount",
          "type": "uint256"
        }
      ],
      "name": "SSIPStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawAmount",
          "type": "uint256"
        }
      ],
      "name": "SSIPWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNO_TOKEN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC_TOKEN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ssip",
          "type": "address"
        }
      ],
      "name": "addPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "addPoolWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawAmount",
          "type": "uint256"
        }
      ],
      "name": "checkCapitalByMCR",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_coverageAmount",
          "type": "uint256"
        }
      ],
      "name": "checkCoverageByMLR",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exchangeAgent",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_policyId",
          "type": "uint256"
        }
      ],
      "name": "markToClaimPolicy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "policyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "policy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "utilizedAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "exist",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_coverageAmount",
          "type": "uint256"
        }
      ],
      "name": "policySale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalCapital",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "exist",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "poolWhiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "removePolicy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ssip",
          "type": "address"
        }
      ],
      "name": "removePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "removePoolWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "salesPolicyFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        }
      ],
      "name": "setExchangeAgent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_MCR",
          "type": "uint256"
        }
      ],
      "name": "setMCR",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_MLR",
          "type": "uint256"
        }
      ],
      "name": "setMLR",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_policy",
          "type": "address"
        }
      ],
      "name": "setPolicy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "setSalesPolicyFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalCapitalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalUtilizedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_policyId",
          "type": "uint256"
        }
      ],
      "name": "updatePolicyStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd48ecc2f546964b690afecdbccda16ea12fa835eb9541858f7fc0f19a0bc3a7b",
  "receipt": {
    "to": null,
    "from": "0x5569BDF4e02cec3fE459796e3d0e741616029fA4",
    "contractAddress": "0x254D75e01617455BC25258036e642Fb82bbfd0c9",
    "transactionIndex": 1,
    "gasUsed": "1793165",
    "logsBloom": "0x
    "blockHash": "0xf5ff26ed4d6d1830f08d8c77aadb9809947b92f86b54f6df3585e06c70fb4b25",
    "transactionHash": "0xd48ecc2f546964b690afecdbccda16ea12fa835eb9541858f7fc0f19a0bc3a7b",
    "logs": [],
    "blockNumber": 10002385,
    "cumulativeGasUsed": "1822178",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x1E545CbA6E77CBfcBd0a7CAD9F2D8E0051F347D4",
    "0x53fb43BaE4C13d6AFAD37fB37c3fC49f3Af433F5",
    "0x40c035016AD732b6cFce34c3F881040B6C6cf71E"
  ],
  "solcInputHash": "bf649fb54ad93792de572409f0dce774",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_UNO_TOKEN\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_USDC_TOKEN\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_ssip\",\"type\":\"address\"}],\"name\":\"LogAddPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"LogAddPoolWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_policy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_policyTokenId\",\"type\":\"uint256\"}],\"name\":\"LogMarkToClaimPolicy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_salesPolicy\",\"type\":\"address\"}],\"name\":\"LogRemovePolicy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_ssip\",\"type\":\"address\"}],\"name\":\"LogRemovePool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"LogRemovePoolWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_capitalAgent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"}],\"name\":\"LogSetExchangeAgent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_capitalAgent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_MCR\",\"type\":\"uint256\"}],\"name\":\"LogSetMCR\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_capitalAgent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_MLR\",\"type\":\"uint256\"}],\"name\":\"LogSetMLR\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_salesPolicy\",\"type\":\"address\"}],\"name\":\"LogSetPolicy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"LogSetSalesPolicyFactory\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_policy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_policyUtilized\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_totalUtilizedAmount\",\"type\":\"uint256\"}],\"name\":\"LogUpdatePolicyCoverage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_policy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_policyTokenId\",\"type\":\"uint256\"}],\"name\":\"LogUpdatePolicyExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_ssip\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_poolCapital\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_totalCapital\",\"type\":\"uint256\"}],\"name\":\"LogUpdatePoolCapital\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CALC_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MCR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MLR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"SSIPPolicyCaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stakingAmount\",\"type\":\"uint256\"}],\"name\":\"SSIPStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"SSIPWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNO_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ssip\",\"type\":\"address\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"addPoolWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"checkCapitalByMCR\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_coverageAmount\",\"type\":\"uint256\"}],\"name\":\"checkCoverageByMLR\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeAgent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policyId\",\"type\":\"uint256\"}],\"name\":\"markToClaimPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"policy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"utilizedAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exist\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_coverageAmount\",\"type\":\"uint256\"}],\"name\":\"policySale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCapital\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exist\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolWhiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removePolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ssip\",\"type\":\"address\"}],\"name\":\"removePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"removePoolWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"salesPolicyFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"}],\"name\":\"setExchangeAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_MCR\",\"type\":\"uint256\"}],\"name\":\"setMCR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_MLR\",\"type\":\"uint256\"}],\"name\":\"setMLR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policy\",\"type\":\"address\"}],\"name\":\"setPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"setSalesPolicyFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCapitalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUtilizedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policyId\",\"type\":\"uint256\"}],\"name\":\"updatePolicyStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CapitalAgent.sol\":\"CapitalAgent\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"contracts/CapitalAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"./interfaces/ISalesPolicy.sol\\\";\\nimport \\\"./interfaces/IExchangeAgent.sol\\\";\\nimport \\\"./interfaces/ISingleSidedInsurancePool.sol\\\";\\nimport \\\"./interfaces/IRiskPool.sol\\\";\\nimport \\\"./interfaces/ICapitalAgent.sol\\\";\\n\\ncontract CapitalAgent is ICapitalAgent, ReentrancyGuard {\\n    address public owner;\\n    address public exchangeAgent;\\n    address public salesPolicyFactory;\\n    address public UNO_TOKEN;\\n    address public USDC_TOKEN;\\n\\n    struct PoolInfo {\\n        uint256 totalCapital;\\n        bool exist;\\n    }\\n\\n    struct PolicyInfo {\\n        address policy;\\n        uint256 utilizedAmount;\\n        bool exist;\\n    }\\n\\n    mapping(address => PoolInfo) public poolInfo;\\n\\n    uint256 public totalCapitalStaked;\\n\\n    PolicyInfo public policyInfo;\\n\\n    uint256 public totalUtilizedAmount;\\n\\n    uint256 public MCR;\\n    uint256 public MLR;\\n\\n    uint256 public CALC_PRECISION = 1e18;\\n\\n    mapping(address => bool) public poolWhiteList;\\n\\n    event LogAddPool(address indexed _ssip);\\n    event LogRemovePool(address indexed _ssip);\\n    event LogSetPolicy(address indexed _salesPolicy);\\n    event LogRemovePolicy(address indexed _salesPolicy);\\n    event LogUpdatePoolCapital(address indexed _ssip, uint256 _poolCapital, uint256 _totalCapital);\\n    event LogUpdatePolicyCoverage(\\n        address indexed _policy,\\n        uint256 _amount,\\n        uint256 _policyUtilized,\\n        uint256 _totalUtilizedAmount\\n    );\\n    event LogUpdatePolicyExpired(address indexed _policy, uint256 _policyTokenId);\\n    event LogMarkToClaimPolicy(address indexed _policy, uint256 _policyTokenId);\\n    event LogSetMCR(address indexed _owner, address indexed _capitalAgent, uint256 _MCR);\\n    event LogSetMLR(address indexed _owner, address indexed _capitalAgent, uint256 _MLR);\\n    event LogSetExchangeAgent(address indexed _owner, address indexed _capitalAgent, address _exchangeAgent);\\n    event LogSetSalesPolicyFactory(address indexed _factory);\\n    event LogAddPoolWhiteList(address indexed _pool);\\n    event LogRemovePoolWhiteList(address indexed _pool);\\n\\n    constructor(\\n        address _exchangeAgent,\\n        address _UNO_TOKEN,\\n        address _USDC_TOKEN\\n    ) {\\n        require(_exchangeAgent != address(0), \\\"UnoRe: zero exchangeAgent address\\\");\\n        require(_UNO_TOKEN != address(0), \\\"UnoRe: zero UNO address\\\");\\n        require(_USDC_TOKEN != address(0), \\\"UnoRe: zero USDC address\\\");\\n        owner = msg.sender;\\n        exchangeAgent = _exchangeAgent;\\n        UNO_TOKEN = _UNO_TOKEN;\\n        USDC_TOKEN = _USDC_TOKEN;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(owner == msg.sender, \\\"UnoRe: Capital Agent Forbidden\\\");\\n        _;\\n    }\\n\\n    modifier onlyPoolWhiteList() {\\n        require(poolWhiteList[msg.sender], \\\"UnoRe: Capital Agent Forbidden\\\");\\n        _;\\n    }\\n\\n    function setSalesPolicyFactory(address _factory) external onlyOwner nonReentrant {\\n        require(_factory != address(0), \\\"UnoRe: zero factory address\\\");\\n        salesPolicyFactory = _factory;\\n        emit LogSetSalesPolicyFactory(_factory);\\n    }\\n\\n    function addPoolWhiteList(address _pool) external onlyOwner nonReentrant {\\n        require(_pool != address(0), \\\"UnoRe: zero pool address\\\");\\n        require(!poolWhiteList[_pool], \\\"UnoRe: white list already\\\");\\n        poolWhiteList[_pool] = true;\\n        emit LogAddPoolWhiteList(_pool);\\n    }\\n\\n    function removePoolWhiteList(address _pool) external onlyOwner nonReentrant {\\n        require(_pool != address(0), \\\"UnoRe: zero pool address\\\");\\n        require(poolWhiteList[_pool], \\\"UnoRe: no white list\\\");\\n        poolWhiteList[_pool] = false;\\n        emit LogRemovePoolWhiteList(_pool);\\n    }\\n\\n    function addPool(address _ssip) external override onlyPoolWhiteList {\\n        require(_ssip != address(0), \\\"UnoRe: zero address\\\");\\n        require(!poolInfo[_ssip].exist, \\\"UnoRe: already exist pool\\\");\\n        poolInfo[_ssip] = PoolInfo({totalCapital: 0, exist: true});\\n\\n        emit LogAddPool(_ssip);\\n    }\\n\\n    function removePool(address _ssip) external onlyOwner nonReentrant {\\n        require(_ssip != address(0), \\\"UnoRe: zero address\\\");\\n        require(poolInfo[_ssip].exist, \\\"UnoRe: no exit pool\\\");\\n        if (poolInfo[_ssip].totalCapital > 0) {\\n            totalCapitalStaked = totalCapitalStaked - poolInfo[_ssip].totalCapital;\\n        }\\n        delete poolInfo[_ssip];\\n        emit LogRemovePool(_ssip);\\n    }\\n\\n    function setPolicy(address _policy) external override nonReentrant {\\n        require(salesPolicyFactory != address(0), \\\"UnoRe: not set factory address yet\\\");\\n        require(salesPolicyFactory == msg.sender, \\\"UnoRe: only salesPolicyFactory can call\\\");\\n        policyInfo = PolicyInfo({policy: _policy, utilizedAmount: 0, exist: true});\\n\\n        emit LogSetPolicy(_policy);\\n    }\\n\\n    function removePolicy() external onlyOwner nonReentrant {\\n        require(policyInfo.exist, \\\"UnoRe: no exit pool\\\");\\n        if (policyInfo.utilizedAmount > 0) {\\n            totalCapitalStaked = totalUtilizedAmount - policyInfo.utilizedAmount;\\n        }\\n        address _policy = policyInfo.policy;\\n        policyInfo.policy = address(0);\\n        policyInfo.exist = false;\\n        policyInfo.utilizedAmount = 0;\\n        emit LogRemovePolicy(_policy);\\n    }\\n\\n    function SSIPWithdraw(uint256 _withdrawAmount) external override nonReentrant {\\n        require(poolInfo[msg.sender].exist, \\\"UnoRe: no exist ssip\\\");\\n        require(_checkCapitalByMCR(_withdrawAmount), \\\"UnoRe: minimum capital underflow\\\");\\n        _updatePoolCapital(msg.sender, _withdrawAmount, false);\\n    }\\n\\n    function SSIPPolicyCaim(uint256 _withdrawAmount) external override nonReentrant {\\n        require(poolInfo[msg.sender].exist, \\\"UnoRe: no exist ssip\\\");\\n        _updatePoolCapital(msg.sender, _withdrawAmount, false);\\n    }\\n\\n    function SSIPStaking(uint256 _stakingAmount) external override nonReentrant {\\n        require(poolInfo[msg.sender].exist, \\\"UnoRe: no exist ssip\\\");\\n        _updatePoolCapital(msg.sender, _stakingAmount, true);\\n    }\\n\\n    function checkCapitalByMCR(uint256 _withdrawAmount) external view override returns (bool) {\\n        return _checkCapitalByMCR(_withdrawAmount);\\n    }\\n\\n    function checkCoverageByMLR(uint256 _coverageAmount) external view override returns (bool) {\\n        return _checkCoverageByMLR(_coverageAmount);\\n    }\\n\\n    function policySale(uint256 _coverageAmount) external override nonReentrant {\\n        require(msg.sender == policyInfo.policy, \\\"UnoRe: only salesPolicy can call\\\");\\n        require(policyInfo.exist, \\\"UnoRe: no exist policy\\\");\\n        require(_checkCoverageByMLR(_coverageAmount), \\\"UnoRe: maximum leverage overflow\\\");\\n        _updatePolicyCoverage(_coverageAmount, true);\\n    }\\n\\n    function updatePolicyStatus(uint256 _policyId) external override nonReentrant {\\n        require(policyInfo.policy != address(0), \\\"UnoRe: no exist salesPolicy\\\");\\n        (uint256 _coverageAmount, uint256 _coverageDuration, uint256 _coverStartAt) = ISalesPolicy(policyInfo.policy)\\n            .getPolicyData(_policyId);\\n        bool isExpired = block.timestamp >= _coverageDuration + _coverStartAt;\\n        if (isExpired) {\\n            _updatePolicyCoverage(_coverageAmount, false);\\n            ISalesPolicy(policyInfo.policy).updatePolicyExpired(_policyId);\\n            emit LogUpdatePolicyExpired(policyInfo.policy, _policyId);\\n        }\\n    }\\n\\n    function markToClaimPolicy(uint256 _policyId) external onlyOwner nonReentrant {\\n        require(policyInfo.policy != address(0), \\\"UnoRe: no exist salesPolicy\\\");\\n        (uint256 _coverageAmount, , ) = ISalesPolicy(policyInfo.policy).getPolicyData(_policyId);\\n        _updatePolicyCoverage(_coverageAmount, false);\\n        ISalesPolicy(policyInfo.policy).markToClaim(_policyId);\\n        emit LogMarkToClaimPolicy(policyInfo.policy, _policyId);\\n    }\\n\\n    function _updatePoolCapital(\\n        address _pool,\\n        uint256 _amount,\\n        bool isAdd\\n    ) private {\\n        if (!isAdd) {\\n            require(poolInfo[_pool].totalCapital >= _amount, \\\"UnoRe: pool capital overflow\\\");\\n        }\\n        poolInfo[_pool].totalCapital = isAdd ? poolInfo[_pool].totalCapital + _amount : poolInfo[_pool].totalCapital - _amount;\\n        totalCapitalStaked = isAdd ? totalCapitalStaked + _amount : totalCapitalStaked - _amount;\\n        emit LogUpdatePoolCapital(_pool, poolInfo[_pool].totalCapital, totalCapitalStaked);\\n    }\\n\\n    function _updatePolicyCoverage(uint256 _amount, bool isAdd) private {\\n        if (!isAdd) {\\n            require(policyInfo.utilizedAmount >= _amount, \\\"UnoRe: policy coverage overflow\\\");\\n        }\\n        policyInfo.utilizedAmount = isAdd ? policyInfo.utilizedAmount + _amount : policyInfo.utilizedAmount - _amount;\\n        totalUtilizedAmount = isAdd ? totalUtilizedAmount + _amount : totalUtilizedAmount - _amount;\\n        emit LogUpdatePolicyCoverage(policyInfo.policy, _amount, policyInfo.utilizedAmount, totalUtilizedAmount);\\n    }\\n\\n    function _checkCapitalByMCR(uint256 _withdrawAmount) private view returns (bool) {\\n        return totalCapitalStaked - _withdrawAmount >= (totalCapitalStaked * MCR) / CALC_PRECISION;\\n    }\\n\\n    function _checkCoverageByMLR(uint256 _newCoverageAmount) private view returns (bool) {\\n        uint256 totalCapitalStakedInUSDC = IExchangeAgent(exchangeAgent).getNeededTokenAmount(\\n            UNO_TOKEN,\\n            USDC_TOKEN,\\n            totalCapitalStaked\\n        );\\n        return totalUtilizedAmount + _newCoverageAmount <= (totalCapitalStakedInUSDC * MLR) / CALC_PRECISION;\\n    }\\n\\n    function setMCR(uint256 _MCR) external onlyOwner nonReentrant {\\n        require(_MCR > 0, \\\"UnoRe: zero mcr\\\");\\n        MCR = _MCR;\\n        emit LogSetMCR(msg.sender, address(this), _MCR);\\n    }\\n\\n    function setMLR(uint256 _MLR) external onlyOwner nonReentrant {\\n        require(_MLR > 0, \\\"UnoRe: zero mlr\\\");\\n        MLR = _MLR;\\n        emit LogSetMLR(msg.sender, address(this), _MLR);\\n    }\\n\\n    function setExchangeAgent(address _exchangeAgent) external onlyOwner nonReentrant {\\n        require(_exchangeAgent != address(0), \\\"UnoRe: zero address\\\");\\n        exchangeAgent = _exchangeAgent;\\n        emit LogSetExchangeAgent(msg.sender, address(this), _exchangeAgent);\\n    }\\n}\\n\",\"keccak256\":\"0x523db2a861cf168cc693a630c59b52f7a32b4b3c128de3d874f00c98065725a6\",\"license\":\"MIT\"},\"contracts/interfaces/ICapitalAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\ninterface ICapitalAgent {\\n    function addPool(address _ssip) external;\\n\\n    function setPolicy(address _policy) external;\\n\\n    function SSIPWithdraw(uint256 _withdrawAmount) external;\\n\\n    function SSIPStaking(uint256 _stakingAmount) external;\\n\\n    function SSIPPolicyCaim(uint256 _withdrawAmount) external;\\n\\n    function checkCapitalByMCR(uint256 _withdrawAmount) external view returns (bool);\\n\\n    function checkCoverageByMLR(uint256 _coverageAmount) external view returns (bool);\\n\\n    function policySale(uint256 _coverageAmount) external;\\n\\n    function updatePolicyStatus(uint256 _policyId) external;\\n}\\n\",\"keccak256\":\"0xac51d31953a3ce50959e6ebdab4e121d4a00a7d1714862fd47dca5d5c2973eb5\",\"license\":\"MIT\"},\"contracts/interfaces/IExchangeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\ninterface IExchangeAgent {\\n    function USDC_TOKEN() external view returns (address);\\n\\n    function getTokenAmountForUSDC(address _token, uint256 _usdtAmount) external view returns (uint256);\\n\\n    function getETHAmountForUSDC(uint256 _usdtAmount) external view returns (uint256);\\n\\n    function getETHAmountForToken(address _token, uint256 _tokenAmount) external view returns (uint256);\\n\\n    function getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external view returns (uint256);\\n\\n    function convertForToken(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external returns (uint256);\\n\\n    function convertForETH(address _token, uint256 _convertAmount) external returns (uint256);\\n}\\n\",\"keccak256\":\"0xac695d6d1b861eb9f84ac2009f97fd5b00d44500b6735fb9256f1c227323e07e\",\"license\":\"MIT\"},\"contracts/interfaces/IRiskPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface IRiskPool {\\n    function enter(address _from, uint256 _amount) external;\\n\\n    function leaveFromPoolInPending(address _to, uint256 _amount) external;\\n\\n    function leaveFromPending(address _to) external returns (uint256, uint256);\\n\\n    function cancelWithrawRequest(address _to) external returns (uint256, uint256);\\n\\n    function policyClaim(address _to, uint256 _amount) external returns (uint256 realClaimAmount);\\n\\n    function migrateLP(\\n        address _to,\\n        address _migrateTo,\\n        bool _isUnLocked\\n    ) external returns (uint256);\\n\\n    function setMinLPCapital(uint256 _minLPCapital) external;\\n\\n    function currency() external view returns (address);\\n\\n    function getTotalWithdrawRequestAmount() external view returns (uint256);\\n\\n    function getWithdrawRequest(address _to)\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256\\n        );\\n\\n    function lpPriceUno() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xf70acb54582191fcc1287662ea59e713bd4f5b504fc54a1de9278322cc900b67\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ISalesPolicy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface ISalesPolicy {\\n    function setPremiumPool(address _premiumPool) external;\\n\\n    function setExchangeAgent(address _exchangeAgent) external;\\n\\n    function setCapitalAgent(address _capitalAgent) external;\\n\\n    function setBuyPolicyMaxDeadline(uint256 _maxDeadline) external;\\n\\n    function approvePremium(address _premiumCurrency) external;\\n\\n    function setProtocolURI(string memory newURI) external;\\n\\n    function setSigner(address _signer) external;\\n\\n    function updatePolicyExpired(uint256 _policyId) external;\\n\\n    function markToClaim(uint256 _policyId) external;\\n\\n    function allPoliciesLength() external view returns (uint256);\\n\\n    function getPolicyData(uint256 _policyId)\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256\\n        );\\n}\\n\",\"keccak256\":\"0xc0eef911615b934911b5e0fb2120cf9ba60b2b2b8e9908f0a33c2f8504b1eba5\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ISingleSidedInsurancePool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface ISingleSidedInsurancePool {\\n    function updatePool() external;\\n\\n    function enterInPool(uint256 _amount) external;\\n\\n    function leaveFromPoolInPending(uint256 _amount) external;\\n\\n    function leaveFromPending() external;\\n\\n    function harvest(address _to) external;\\n\\n    function lpTransfer(\\n        address _from,\\n        address _to,\\n        uint256 _amount\\n    ) external;\\n\\n    function riskPool() external view returns (address);\\n}\\n\",\"keccak256\":\"0x8f34cb3f24d9ab3a8272c3bb9ea752afe5c6f9fe84ff65a9c1a22cee27165052\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x6080604052670de0b6b3a7640000600e553480156200001d57600080fd5b5060405162001f2738038062001f27833981016040819052620000409162000134565b60016000556001600160a01b038316620000775760405162461bcd60e51b81526004016200006e90620001b4565b60405180910390fd5b6001600160a01b038216620000a05760405162461bcd60e51b81526004016200006e90620001f5565b6001600160a01b038116620000c95760405162461bcd60e51b81526004016200006e906200017d565b600180546001600160a01b03199081163317909155600280546001600160a01b039586169083161790556004805493851693821693909317909255600580549190931691161790556200022c565b80516001600160a01b03811681146200012f57600080fd5b919050565b60008060006060848603121562000149578283fd5b620001548462000117565b9250620001646020850162000117565b9150620001746040850162000117565b90509250925092565b60208082526018908201527f556e6f52653a207a65726f205553444320616464726573730000000000000000604082015260600190565b60208082526021908201527f556e6f52653a207a65726f2065786368616e67654167656e74206164647265736040820152607360f81b606082015260800190565b60208082526017908201527f556e6f52653a207a65726f20554e4f2061646472657373000000000000000000604082015260600190565b611ceb806200023c6000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80638da5cb5b1161010f578063be22041b116100a2578063d8c5c86311610071578063d8c5c863146103cc578063d914cd4b146103df578063d9203b91146103f2578063fa569274146103fa576101e5565b8063be22041b1461038b578063be304cf01461039e578063c3ea3a28146103b1578063d4688a45146103c4576101e5565b8063a0931af2116100de578063a0931af21461033f578063a65888fb14610352578063a88d2f7a14610365578063b3d7f72814610378576101e5565b80638da5cb5b146102f757806392ff38ec146102ff578063974e4d85146103075780639a7b5f111461031e576101e5565b80634dc70bac116101875780637d4163d3116101565780637d4163d3146102b6578063869bd44a146102c95780638bb70831146102dc5780638be5a39f146102e4576101e5565b80634dc70bac1461027e5780635b44d5761461029357806365cb3a83146102a6578063794e5724146102ae576101e5565b806336760a1c116101c357806336760a1c1461023d578063385a128f146102455780633b7d0946146102585780634a3a3d141461026b576101e5565b80630f97b97b146101ea57806318a00d8e1461020857806325042fe91461021d575b600080fd5b6101f2610402565b6040516101ff91906116e0565b60405180910390f35b61021b610216366004611655565b610411565b005b61023061022b366004611655565b6104f1565b6040516101ff919061173b565b6101f2610506565b61021b610253366004611683565b610515565b61021b610266366004611655565b6105bd565b61021b610279366004611655565b61070c565b61028661080a565b6040516101ff9190611bf4565b61021b6102a1366004611683565b610810565b61021b6108a2565b610286610991565b61021b6102c4366004611655565b610997565b61021b6102d7366004611683565b610a8c565b610286610c48565b61021b6102f2366004611683565b610c4e565b6101f2610cb3565b610286610cc2565b61030f610cc8565b6040516101ff93929190611718565b61033161032c366004611655565b610ce3565b6040516101ff929190611bfd565b61021b61034d366004611683565b610cff565b61021b610360366004611655565b610da3565b61021b610373366004611655565b610ea5565b61021b610386366004611683565b610f6c565b61021b610399366004611683565b610fc5565b6102306103ac366004611683565b611178565b6102306103bf366004611683565b611189565b610286611194565b61021b6103da366004611683565b61119a565b61021b6103ed366004611655565b611242565b6101f2611343565b6101f2611352565b6004546001600160a01b031681565b6001546001600160a01b031633146104445760405162461bcd60e51b815260040161043b906117b2565b60405180910390fd5b600260005414156104675760405162461bcd60e51b815260040161043b90611b51565b60026000556001600160a01b0381166104925760405162461bcd60e51b815260040161043b906117e9565b600280546001600160a01b0319166001600160a01b038316179055604051309033907f28e0ff29ad991f2655c48b0b095a69abbf13aec6c8bc181dd526dbb3f8c9d0b9906104e19085906116e0565b60405180910390a3506001600055565b600f6020526000908152604090205460ff1681565b6003546001600160a01b031681565b6001546001600160a01b0316331461053f5760405162461bcd60e51b815260040161043b906117b2565b600260005414156105625760405162461bcd60e51b815260040161043b90611b51565b6002600055806105845760405162461bcd60e51b815260040161043b90611857565b600c819055604051309033907fa55ee73f4232498ac4c250ffa77f4337343a213648a66147d8848f6660fa3fdf906104e1908590611bf4565b6001546001600160a01b031633146105e75760405162461bcd60e51b815260040161043b906117b2565b6002600054141561060a5760405162461bcd60e51b815260040161043b90611b51565b60026000556001600160a01b0381166106355760405162461bcd60e51b815260040161043b906117e9565b6001600160a01b03811660009081526006602052604090206001015460ff166106705760405162461bcd60e51b815260040161043b906119a1565b6001600160a01b038116600090815260066020526040902054156106b8576001600160a01b0381166000908152600660205260409020546007546106b49190611c88565b6007555b6001600160a01b038116600081815260066020526040808220828155600101805460ff19169055517ff54e47602c09e6190ae0c9cba6074e2e211bf36944fd714fbb0bd78aba514cab9190a2506001600055565b6001546001600160a01b031633146107365760405162461bcd60e51b815260040161043b906117b2565b600260005414156107595760405162461bcd60e51b815260040161043b90611b51565b60026000556001600160a01b0381166107845760405162461bcd60e51b815260040161043b906118fc565b6001600160a01b0381166000908152600f602052604090205460ff166107bc5760405162461bcd60e51b815260040161043b90611746565b6001600160a01b0381166000818152600f6020526040808220805460ff19169055517f4151e001c03bfed83a194d10eea2c0edf04f98e382c440c94a947a99d38d2c329190a2506001600055565b600e5481565b600260005414156108335760405162461bcd60e51b815260040161043b90611b51565b600260009081553381526006602052604090206001015460ff166108695760405162461bcd60e51b815260040161043b90611b1a565b61087281611361565b61088e5760405162461bcd60e51b815260040161043b906119d8565b61089a33826000611396565b506001600055565b6001546001600160a01b031633146108cc5760405162461bcd60e51b815260040161043b906117b2565b600260005414156108ef5760405162461bcd60e51b815260040161043b90611b51565b6002600055600a5460ff166109165760405162461bcd60e51b815260040161043b906119a1565b6009541561093257600954600b5461092e9190611c88565b6007555b600880546001600160a01b03198116909155600a805460ff19169055600060098190556040516001600160a01b039092169182917fffb315d96bed6cc0b00a9cc39d15fcbcab7d047fca09660a2d73569cfc75817c91a2506001600055565b600c5481565b600260005414156109ba5760405162461bcd60e51b815260040161043b90611b51565b60026000556003546001600160a01b03166109e75760405162461bcd60e51b815260040161043b90611a44565b6003546001600160a01b03163314610a115760405162461bcd60e51b815260040161043b90611abd565b604080516060810182526001600160a01b0383168082526000602083018190526001928401839052600880546001600160a01b031916831790556009819055600a805460ff191690931790925591517f8ba1947a8c64577d7adbd8cbc248c72b68738fe23afef984d842ba5ec5af5cfe9190a2506001600055565b6001546001600160a01b03163314610ab65760405162461bcd60e51b815260040161043b906117b2565b60026000541415610ad95760405162461bcd60e51b815260040161043b90611b51565b60026000556008546001600160a01b0316610b065760405162461bcd60e51b815260040161043b90611820565b600854604051637a5402e960e01b81526000916001600160a01b031690637a5402e990610b37908590600401611bf4565b60606040518083038186803b158015610b4f57600080fd5b505afa158015610b63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8791906116b3565b50509050610b968160006114c2565b6008546040516319d9b48f60e11b81526001600160a01b03909116906333b3691e90610bc6908590600401611bf4565b600060405180830381600087803b158015610be057600080fd5b505af1158015610bf4573d6000803e3d6000fd5b50506008546040516001600160a01b0390911692507f56b46e5b13fdb3c0b1989f448e91b2ad68cf0c8e8ddd87f996720708ae3a15699150610c37908590611bf4565b60405180910390a250506001600055565b600d5481565b60026000541415610c715760405162461bcd60e51b815260040161043b90611b51565b600260009081553381526006602052604090206001015460ff16610ca75760405162461bcd60e51b815260040161043b90611b1a565b61089a33826001611396565b6001546001600160a01b031681565b60075481565b600854600954600a546001600160a01b039092169160ff1683565b6006602052600090815260409020805460019091015460ff1682565b60026000541415610d225760405162461bcd60e51b815260040161043b90611b51565b60026000556008546001600160a01b03163314610d515760405162461bcd60e51b815260040161043b90611bbf565b600a5460ff16610d735760405162461bcd60e51b815260040161043b90611a86565b610d7c8161158d565b610d985760405162461bcd60e51b815260040161043b9061177d565b61089a8160016114c2565b6001546001600160a01b03163314610dcd5760405162461bcd60e51b815260040161043b906117b2565b60026000541415610df05760405162461bcd60e51b815260040161043b90611b51565b60026000556001600160a01b038116610e1b5760405162461bcd60e51b815260040161043b906118fc565b6001600160a01b0381166000908152600f602052604090205460ff1615610e545760405162461bcd60e51b815260040161043b906118c5565b6001600160a01b0381166000818152600f6020526040808220805460ff19166001179055517f398e8e2ed05e6be725398a28e81fdf023a447b92941bd666e68ce2091b82bcc79190a2506001600055565b6001546001600160a01b03163314610ecf5760405162461bcd60e51b815260040161043b906117b2565b60026000541415610ef25760405162461bcd60e51b815260040161043b90611b51565b60026000556001600160a01b038116610f1d5760405162461bcd60e51b815260040161043b90611a0d565b600380546001600160a01b0319166001600160a01b0383169081179091556040517f6507596e94e343212d1c22479359f82fffb65f099deb3ebcae9eb33c3d06de9e90600090a2506001600055565b60026000541415610f8f5760405162461bcd60e51b815260040161043b90611b51565b600260009081553381526006602052604090206001015460ff1661088e5760405162461bcd60e51b815260040161043b90611b1a565b60026000541415610fe85760405162461bcd60e51b815260040161043b90611b51565b60026000556008546001600160a01b03166110155760405162461bcd60e51b815260040161043b90611820565b600854604051637a5402e960e01b8152600091829182916001600160a01b031690637a5402e99061104a908790600401611bf4565b60606040518083038186803b15801561106257600080fd5b505afa158015611076573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109a91906116b3565b9194509250905060006110ad8284611c31565b42108015915061116c576110c28460006114c2565b6008546040516352eaf0a160e11b81526001600160a01b039091169063a5d5e142906110f2908890600401611bf4565b600060405180830381600087803b15801561110c57600080fd5b505af1158015611120573d6000803e3d6000fd5b50506008546040516001600160a01b0390911692507faf1c77a8196c946ab8e645210cd1e2685b4fb758ddfd474fd918298854dea6fc9150611163908890611bf4565b60405180910390a25b50506001600055505050565b600061118382611361565b92915050565b60006111838261158d565b600b5481565b6001546001600160a01b031633146111c45760405162461bcd60e51b815260040161043b906117b2565b600260005414156111e75760405162461bcd60e51b815260040161043b90611b51565b6002600055806112095760405162461bcd60e51b815260040161043b90611933565b600d819055604051309033907fb2f30bd42a6b499419a01b9b79e7b98934167f5a8a8c389ce446e20a8e5df765906104e1908590611bf4565b336000908152600f602052604090205460ff166112715760405162461bcd60e51b815260040161043b906117b2565b6001600160a01b0381166112975760405162461bcd60e51b815260040161043b906117e9565b6001600160a01b03811660009081526006602052604090206001015460ff16156112d35760405162461bcd60e51b815260040161043b9061196a565b6040805180820182526000808252600160208084018281526001600160a01b0387168085526006909252858420945185555193909101805460ff191693151593909317909255915190917f0efea706f79fea31d38bda2770598b35fe0bf3c0332f91d3fb62bf987f3b2e3391a250565b6002546001600160a01b031681565b6005546001600160a01b031681565b6000600e54600c546007546113769190611c69565b6113809190611c49565b8260075461138e9190611c88565b101592915050565b806113d3576001600160a01b0383166000908152600660205260409020548211156113d35760405162461bcd60e51b815260040161043b90611b88565b80611401576001600160a01b0383166000908152600660205260409020546113fc908390611c88565b611425565b6001600160a01b038316600090815260066020526040902054611425908390611c31565b6001600160a01b0384166000908152600660205260409020558061145657816007546114519190611c88565b611464565b816007546114649190611c31565b60078190556001600160a01b0384166000818152600660205260409081902054905191927f4c54f63d510ce2f2f9bf99bf203458cb67aa75fae97ccab560a1654eba9dbf24926114b5929190611c0d565b60405180910390a2505050565b806114e9576009548211156114e95760405162461bcd60e51b815260040161043b9061188e565b80611501576009546114fc908390611c88565b61150f565b60095461150f908390611c31565b6009558061152a5781600b546115259190611c88565b611538565b81600b546115389190611c31565b600b8190556008546009546040516001600160a01b03909216927facece99dd8b86cb96519fb17caded4d103b35a8261463d0d11f80a4114607300926115819287929091611c1b565b60405180910390a25050565b60025460048054600554600754604051631a44cdf360e11b815260009586956001600160a01b03918216956334899be6956115d195918416949316929091016116f4565b60206040518083038186803b1580156115e957600080fd5b505afa1580156115fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611621919061169b565b9050600e54600d54826116349190611c69565b61163e9190611c49565b83600b5461164c9190611c31565b11159392505050565b600060208284031215611666578081fd5b81356001600160a01b038116811461167c578182fd5b9392505050565b600060208284031215611694578081fd5b5035919050565b6000602082840312156116ac578081fd5b5051919050565b6000806000606084860312156116c7578182fd5b8351925060208401519150604084015190509250925092565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0393909316835260208301919091521515604082015260600190565b901515815260200190565b60208082526014908201527f556e6f52653a206e6f207768697465206c697374000000000000000000000000604082015260600190565b6020808252818101527f556e6f52653a206d6178696d756d206c65766572616765206f766572666c6f77604082015260600190565b6020808252601e908201527f556e6f52653a204361706974616c204167656e7420466f7262696464656e0000604082015260600190565b60208082526013908201527f556e6f52653a207a65726f206164647265737300000000000000000000000000604082015260600190565b6020808252601b908201527f556e6f52653a206e6f2065786973742073616c6573506f6c6963790000000000604082015260600190565b6020808252600f908201527f556e6f52653a207a65726f206d63720000000000000000000000000000000000604082015260600190565b6020808252601f908201527f556e6f52653a20706f6c69637920636f766572616765206f766572666c6f7700604082015260600190565b60208082526019908201527f556e6f52653a207768697465206c69737420616c726561647900000000000000604082015260600190565b60208082526018908201527f556e6f52653a207a65726f20706f6f6c20616464726573730000000000000000604082015260600190565b6020808252600f908201527f556e6f52653a207a65726f206d6c720000000000000000000000000000000000604082015260600190565b60208082526019908201527f556e6f52653a20616c726561647920657869737420706f6f6c00000000000000604082015260600190565b60208082526013908201527f556e6f52653a206e6f206578697420706f6f6c00000000000000000000000000604082015260600190565b6020808252818101527f556e6f52653a206d696e696d756d206361706974616c20756e646572666c6f77604082015260600190565b6020808252601b908201527f556e6f52653a207a65726f20666163746f727920616464726573730000000000604082015260600190565b60208082526022908201527f556e6f52653a206e6f742073657420666163746f727920616464726573732079604082015261195d60f21b606082015260800190565b60208082526016908201527f556e6f52653a206e6f20657869737420706f6c69637900000000000000000000604082015260600190565b60208082526027908201527f556e6f52653a206f6e6c792073616c6573506f6c696379466163746f7279206360408201527f616e2063616c6c00000000000000000000000000000000000000000000000000606082015260800190565b60208082526014908201527f556e6f52653a206e6f2065786973742073736970000000000000000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252601c908201527f556e6f52653a20706f6f6c206361706974616c206f766572666c6f7700000000604082015260600190565b6020808252818101527f556e6f52653a206f6e6c792073616c6573506f6c6963792063616e2063616c6c604082015260600190565b90815260200190565b9182521515602082015260400190565b918252602082015260400190565b9283526020830191909152604082015260600190565b60008219821115611c4457611c44611c9f565b500190565b600082611c6457634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611c8357611c83611c9f565b500290565b600082821015611c9a57611c9a611c9f565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220db8472292d57ed3a1c4f48ac52df7b8f64a292c83002715ee51b2443ab8be60a64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c80638da5cb5b1161010f578063be22041b116100a2578063d8c5c86311610071578063d8c5c863146103cc578063d914cd4b146103df578063d9203b91146103f2578063fa569274146103fa576101e5565b8063be22041b1461038b578063be304cf01461039e578063c3ea3a28146103b1578063d4688a45146103c4576101e5565b8063a0931af2116100de578063a0931af21461033f578063a65888fb14610352578063a88d2f7a14610365578063b3d7f72814610378576101e5565b80638da5cb5b146102f757806392ff38ec146102ff578063974e4d85146103075780639a7b5f111461031e576101e5565b80634dc70bac116101875780637d4163d3116101565780637d4163d3146102b6578063869bd44a146102c95780638bb70831146102dc5780638be5a39f146102e4576101e5565b80634dc70bac1461027e5780635b44d5761461029357806365cb3a83146102a6578063794e5724146102ae576101e5565b806336760a1c116101c357806336760a1c1461023d578063385a128f146102455780633b7d0946146102585780634a3a3d141461026b576101e5565b80630f97b97b146101ea57806318a00d8e1461020857806325042fe91461021d575b600080fd5b6101f2610402565b6040516101ff91906116e0565b60405180910390f35b61021b610216366004611655565b610411565b005b61023061022b366004611655565b6104f1565b6040516101ff919061173b565b6101f2610506565b61021b610253366004611683565b610515565b61021b610266366004611655565b6105bd565b61021b610279366004611655565b61070c565b61028661080a565b6040516101ff9190611bf4565b61021b6102a1366004611683565b610810565b61021b6108a2565b610286610991565b61021b6102c4366004611655565b610997565b61021b6102d7366004611683565b610a8c565b610286610c48565b61021b6102f2366004611683565b610c4e565b6101f2610cb3565b610286610cc2565b61030f610cc8565b6040516101ff93929190611718565b61033161032c366004611655565b610ce3565b6040516101ff929190611bfd565b61021b61034d366004611683565b610cff565b61021b610360366004611655565b610da3565b61021b610373366004611655565b610ea5565b61021b610386366004611683565b610f6c565b61021b610399366004611683565b610fc5565b6102306103ac366004611683565b611178565b6102306103bf366004611683565b611189565b610286611194565b61021b6103da366004611683565b61119a565b61021b6103ed366004611655565b611242565b6101f2611343565b6101f2611352565b6004546001600160a01b031681565b6001546001600160a01b031633146104445760405162461bcd60e51b815260040161043b906117b2565b60405180910390fd5b600260005414156104675760405162461bcd60e51b815260040161043b90611b51565b60026000556001600160a01b0381166104925760405162461bcd60e51b815260040161043b906117e9565b600280546001600160a01b0319166001600160a01b038316179055604051309033907f28e0ff29ad991f2655c48b0b095a69abbf13aec6c8bc181dd526dbb3f8c9d0b9906104e19085906116e0565b60405180910390a3506001600055565b600f6020526000908152604090205460ff1681565b6003546001600160a01b031681565b6001546001600160a01b0316331461053f5760405162461bcd60e51b815260040161043b906117b2565b600260005414156105625760405162461bcd60e51b815260040161043b90611b51565b6002600055806105845760405162461bcd60e51b815260040161043b90611857565b600c819055604051309033907fa55ee73f4232498ac4c250ffa77f4337343a213648a66147d8848f6660fa3fdf906104e1908590611bf4565b6001546001600160a01b031633146105e75760405162461bcd60e51b815260040161043b906117b2565b6002600054141561060a5760405162461bcd60e51b815260040161043b90611b51565b60026000556001600160a01b0381166106355760405162461bcd60e51b815260040161043b906117e9565b6001600160a01b03811660009081526006602052604090206001015460ff166106705760405162461bcd60e51b815260040161043b906119a1565b6001600160a01b038116600090815260066020526040902054156106b8576001600160a01b0381166000908152600660205260409020546007546106b49190611c88565b6007555b6001600160a01b038116600081815260066020526040808220828155600101805460ff19169055517ff54e47602c09e6190ae0c9cba6074e2e211bf36944fd714fbb0bd78aba514cab9190a2506001600055565b6001546001600160a01b031633146107365760405162461bcd60e51b815260040161043b906117b2565b600260005414156107595760405162461bcd60e51b815260040161043b90611b51565b60026000556001600160a01b0381166107845760405162461bcd60e51b815260040161043b906118fc565b6001600160a01b0381166000908152600f602052604090205460ff166107bc5760405162461bcd60e51b815260040161043b90611746565b6001600160a01b0381166000818152600f6020526040808220805460ff19169055517f4151e001c03bfed83a194d10eea2c0edf04f98e382c440c94a947a99d38d2c329190a2506001600055565b600e5481565b600260005414156108335760405162461bcd60e51b815260040161043b90611b51565b600260009081553381526006602052604090206001015460ff166108695760405162461bcd60e51b815260040161043b90611b1a565b61087281611361565b61088e5760405162461bcd60e51b815260040161043b906119d8565b61089a33826000611396565b506001600055565b6001546001600160a01b031633146108cc5760405162461bcd60e51b815260040161043b906117b2565b600260005414156108ef5760405162461bcd60e51b815260040161043b90611b51565b6002600055600a5460ff166109165760405162461bcd60e51b815260040161043b906119a1565b6009541561093257600954600b5461092e9190611c88565b6007555b600880546001600160a01b03198116909155600a805460ff19169055600060098190556040516001600160a01b039092169182917fffb315d96bed6cc0b00a9cc39d15fcbcab7d047fca09660a2d73569cfc75817c91a2506001600055565b600c5481565b600260005414156109ba5760405162461bcd60e51b815260040161043b90611b51565b60026000556003546001600160a01b03166109e75760405162461bcd60e51b815260040161043b90611a44565b6003546001600160a01b03163314610a115760405162461bcd60e51b815260040161043b90611abd565b604080516060810182526001600160a01b0383168082526000602083018190526001928401839052600880546001600160a01b031916831790556009819055600a805460ff191690931790925591517f8ba1947a8c64577d7adbd8cbc248c72b68738fe23afef984d842ba5ec5af5cfe9190a2506001600055565b6001546001600160a01b03163314610ab65760405162461bcd60e51b815260040161043b906117b2565b60026000541415610ad95760405162461bcd60e51b815260040161043b90611b51565b60026000556008546001600160a01b0316610b065760405162461bcd60e51b815260040161043b90611820565b600854604051637a5402e960e01b81526000916001600160a01b031690637a5402e990610b37908590600401611bf4565b60606040518083038186803b158015610b4f57600080fd5b505afa158015610b63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8791906116b3565b50509050610b968160006114c2565b6008546040516319d9b48f60e11b81526001600160a01b03909116906333b3691e90610bc6908590600401611bf4565b600060405180830381600087803b158015610be057600080fd5b505af1158015610bf4573d6000803e3d6000fd5b50506008546040516001600160a01b0390911692507f56b46e5b13fdb3c0b1989f448e91b2ad68cf0c8e8ddd87f996720708ae3a15699150610c37908590611bf4565b60405180910390a250506001600055565b600d5481565b60026000541415610c715760405162461bcd60e51b815260040161043b90611b51565b600260009081553381526006602052604090206001015460ff16610ca75760405162461bcd60e51b815260040161043b90611b1a565b61089a33826001611396565b6001546001600160a01b031681565b60075481565b600854600954600a546001600160a01b039092169160ff1683565b6006602052600090815260409020805460019091015460ff1682565b60026000541415610d225760405162461bcd60e51b815260040161043b90611b51565b60026000556008546001600160a01b03163314610d515760405162461bcd60e51b815260040161043b90611bbf565b600a5460ff16610d735760405162461bcd60e51b815260040161043b90611a86565b610d7c8161158d565b610d985760405162461bcd60e51b815260040161043b9061177d565b61089a8160016114c2565b6001546001600160a01b03163314610dcd5760405162461bcd60e51b815260040161043b906117b2565b60026000541415610df05760405162461bcd60e51b815260040161043b90611b51565b60026000556001600160a01b038116610e1b5760405162461bcd60e51b815260040161043b906118fc565b6001600160a01b0381166000908152600f602052604090205460ff1615610e545760405162461bcd60e51b815260040161043b906118c5565b6001600160a01b0381166000818152600f6020526040808220805460ff19166001179055517f398e8e2ed05e6be725398a28e81fdf023a447b92941bd666e68ce2091b82bcc79190a2506001600055565b6001546001600160a01b03163314610ecf5760405162461bcd60e51b815260040161043b906117b2565b60026000541415610ef25760405162461bcd60e51b815260040161043b90611b51565b60026000556001600160a01b038116610f1d5760405162461bcd60e51b815260040161043b90611a0d565b600380546001600160a01b0319166001600160a01b0383169081179091556040517f6507596e94e343212d1c22479359f82fffb65f099deb3ebcae9eb33c3d06de9e90600090a2506001600055565b60026000541415610f8f5760405162461bcd60e51b815260040161043b90611b51565b600260009081553381526006602052604090206001015460ff1661088e5760405162461bcd60e51b815260040161043b90611b1a565b60026000541415610fe85760405162461bcd60e51b815260040161043b90611b51565b60026000556008546001600160a01b03166110155760405162461bcd60e51b815260040161043b90611820565b600854604051637a5402e960e01b8152600091829182916001600160a01b031690637a5402e99061104a908790600401611bf4565b60606040518083038186803b15801561106257600080fd5b505afa158015611076573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109a91906116b3565b9194509250905060006110ad8284611c31565b42108015915061116c576110c28460006114c2565b6008546040516352eaf0a160e11b81526001600160a01b039091169063a5d5e142906110f2908890600401611bf4565b600060405180830381600087803b15801561110c57600080fd5b505af1158015611120573d6000803e3d6000fd5b50506008546040516001600160a01b0390911692507faf1c77a8196c946ab8e645210cd1e2685b4fb758ddfd474fd918298854dea6fc9150611163908890611bf4565b60405180910390a25b50506001600055505050565b600061118382611361565b92915050565b60006111838261158d565b600b5481565b6001546001600160a01b031633146111c45760405162461bcd60e51b815260040161043b906117b2565b600260005414156111e75760405162461bcd60e51b815260040161043b90611b51565b6002600055806112095760405162461bcd60e51b815260040161043b90611933565b600d819055604051309033907fb2f30bd42a6b499419a01b9b79e7b98934167f5a8a8c389ce446e20a8e5df765906104e1908590611bf4565b336000908152600f602052604090205460ff166112715760405162461bcd60e51b815260040161043b906117b2565b6001600160a01b0381166112975760405162461bcd60e51b815260040161043b906117e9565b6001600160a01b03811660009081526006602052604090206001015460ff16156112d35760405162461bcd60e51b815260040161043b9061196a565b6040805180820182526000808252600160208084018281526001600160a01b0387168085526006909252858420945185555193909101805460ff191693151593909317909255915190917f0efea706f79fea31d38bda2770598b35fe0bf3c0332f91d3fb62bf987f3b2e3391a250565b6002546001600160a01b031681565b6005546001600160a01b031681565b6000600e54600c546007546113769190611c69565b6113809190611c49565b8260075461138e9190611c88565b101592915050565b806113d3576001600160a01b0383166000908152600660205260409020548211156113d35760405162461bcd60e51b815260040161043b90611b88565b80611401576001600160a01b0383166000908152600660205260409020546113fc908390611c88565b611425565b6001600160a01b038316600090815260066020526040902054611425908390611c31565b6001600160a01b0384166000908152600660205260409020558061145657816007546114519190611c88565b611464565b816007546114649190611c31565b60078190556001600160a01b0384166000818152600660205260409081902054905191927f4c54f63d510ce2f2f9bf99bf203458cb67aa75fae97ccab560a1654eba9dbf24926114b5929190611c0d565b60405180910390a2505050565b806114e9576009548211156114e95760405162461bcd60e51b815260040161043b9061188e565b80611501576009546114fc908390611c88565b61150f565b60095461150f908390611c31565b6009558061152a5781600b546115259190611c88565b611538565b81600b546115389190611c31565b600b8190556008546009546040516001600160a01b03909216927facece99dd8b86cb96519fb17caded4d103b35a8261463d0d11f80a4114607300926115819287929091611c1b565b60405180910390a25050565b60025460048054600554600754604051631a44cdf360e11b815260009586956001600160a01b03918216956334899be6956115d195918416949316929091016116f4565b60206040518083038186803b1580156115e957600080fd5b505afa1580156115fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611621919061169b565b9050600e54600d54826116349190611c69565b61163e9190611c49565b83600b5461164c9190611c31565b11159392505050565b600060208284031215611666578081fd5b81356001600160a01b038116811461167c578182fd5b9392505050565b600060208284031215611694578081fd5b5035919050565b6000602082840312156116ac578081fd5b5051919050565b6000806000606084860312156116c7578182fd5b8351925060208401519150604084015190509250925092565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0393909316835260208301919091521515604082015260600190565b901515815260200190565b60208082526014908201527f556e6f52653a206e6f207768697465206c697374000000000000000000000000604082015260600190565b6020808252818101527f556e6f52653a206d6178696d756d206c65766572616765206f766572666c6f77604082015260600190565b6020808252601e908201527f556e6f52653a204361706974616c204167656e7420466f7262696464656e0000604082015260600190565b60208082526013908201527f556e6f52653a207a65726f206164647265737300000000000000000000000000604082015260600190565b6020808252601b908201527f556e6f52653a206e6f2065786973742073616c6573506f6c6963790000000000604082015260600190565b6020808252600f908201527f556e6f52653a207a65726f206d63720000000000000000000000000000000000604082015260600190565b6020808252601f908201527f556e6f52653a20706f6c69637920636f766572616765206f766572666c6f7700604082015260600190565b60208082526019908201527f556e6f52653a207768697465206c69737420616c726561647900000000000000604082015260600190565b60208082526018908201527f556e6f52653a207a65726f20706f6f6c20616464726573730000000000000000604082015260600190565b6020808252600f908201527f556e6f52653a207a65726f206d6c720000000000000000000000000000000000604082015260600190565b60208082526019908201527f556e6f52653a20616c726561647920657869737420706f6f6c00000000000000604082015260600190565b60208082526013908201527f556e6f52653a206e6f206578697420706f6f6c00000000000000000000000000604082015260600190565b6020808252818101527f556e6f52653a206d696e696d756d206361706974616c20756e646572666c6f77604082015260600190565b6020808252601b908201527f556e6f52653a207a65726f20666163746f727920616464726573730000000000604082015260600190565b60208082526022908201527f556e6f52653a206e6f742073657420666163746f727920616464726573732079604082015261195d60f21b606082015260800190565b60208082526016908201527f556e6f52653a206e6f20657869737420706f6c69637900000000000000000000604082015260600190565b60208082526027908201527f556e6f52653a206f6e6c792073616c6573506f6c696379466163746f7279206360408201527f616e2063616c6c00000000000000000000000000000000000000000000000000606082015260800190565b60208082526014908201527f556e6f52653a206e6f2065786973742073736970000000000000000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252601c908201527f556e6f52653a20706f6f6c206361706974616c206f766572666c6f7700000000604082015260600190565b6020808252818101527f556e6f52653a206f6e6c792073616c6573506f6c6963792063616e2063616c6c604082015260600190565b90815260200190565b9182521515602082015260400190565b918252602082015260400190565b9283526020830191909152604082015260600190565b60008219821115611c4457611c44611c9f565b500190565b600082611c6457634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611c8357611c83611c9f565b500290565b600082821015611c9a57611c9a611c9f565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220db8472292d57ed3a1c4f48ac52df7b8f64a292c83002715ee51b2443ab8be60a64736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 114,
        "contract": "contracts/CapitalAgent.sol:CapitalAgent",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 2416,
        "contract": "contracts/CapitalAgent.sol:CapitalAgent",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 2418,
        "contract": "contracts/CapitalAgent.sol:CapitalAgent",
        "label": "exchangeAgent",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 2420,
        "contract": "contracts/CapitalAgent.sol:CapitalAgent",
        "label": "salesPolicyFactory",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 2422,
        "contract": "contracts/CapitalAgent.sol:CapitalAgent",
        "label": "UNO_TOKEN",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 2424,
        "contract": "contracts/CapitalAgent.sol:CapitalAgent",
        "label": "USDC_TOKEN",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 2441,
        "contract": "contracts/CapitalAgent.sol:CapitalAgent",
        "label": "poolInfo",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_struct(PoolInfo)2429_storage)"
      },
      {
        "astId": 2443,
        "contract": "contracts/CapitalAgent.sol:CapitalAgent",
        "label": "totalCapitalStaked",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 2446,
        "contract": "contracts/CapitalAgent.sol:CapitalAgent",
        "label": "policyInfo",
        "offset": 0,
        "slot": "8",
        "type": "t_struct(PolicyInfo)2436_storage"
      },
      {
        "astId": 2448,
        "contract": "contracts/CapitalAgent.sol:CapitalAgent",
        "label": "totalUtilizedAmount",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 2450,
        "contract": "contracts/CapitalAgent.sol:CapitalAgent",
        "label": "MCR",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 2452,
        "contract": "contracts/CapitalAgent.sol:CapitalAgent",
        "label": "MLR",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 2455,
        "contract": "contracts/CapitalAgent.sol:CapitalAgent",
        "label": "CALC_PRECISION",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 2459,
        "contract": "contracts/CapitalAgent.sol:CapitalAgent",
        "label": "poolWhiteList",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(PoolInfo)2429_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct CapitalAgent.PoolInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(PoolInfo)2429_storage"
      },
      "t_struct(PolicyInfo)2436_storage": {
        "encoding": "inplace",
        "label": "struct CapitalAgent.PolicyInfo",
        "members": [
          {
            "astId": 2431,
            "contract": "contracts/CapitalAgent.sol:CapitalAgent",
            "label": "policy",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 2433,
            "contract": "contracts/CapitalAgent.sol:CapitalAgent",
            "label": "utilizedAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 2435,
            "contract": "contracts/CapitalAgent.sol:CapitalAgent",
            "label": "exist",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(PoolInfo)2429_storage": {
        "encoding": "inplace",
        "label": "struct CapitalAgent.PoolInfo",
        "members": [
          {
            "astId": 2426,
            "contract": "contracts/CapitalAgent.sol:CapitalAgent",
            "label": "totalCapital",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2428,
            "contract": "contracts/CapitalAgent.sol:CapitalAgent",
            "label": "exist",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}