{
  "address": "0xf6F31ACB097B206c80cfcd1d0855f7170891bE4c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_unoToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdcToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_premiumPool",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "LogAddCurrency",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_premiumPool",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_whiteListAddress",
          "type": "address"
        }
      ],
      "name": "LogAddWhiteList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_premiumPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_unoAmount",
          "type": "uint256"
        }
      ],
      "name": "LogBuyBackAndBurn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_premiumCurrency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_premiumAmount",
          "type": "uint256"
        }
      ],
      "name": "LogCollectPremium",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_rewarder",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountDeposited",
          "type": "uint256"
        }
      ],
      "name": "LogDepositToSyntheticSSIPRewarder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_rewarder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_ethAmountDeposited",
          "type": "uint256"
        }
      ],
      "name": "LogDepositToSyntheticSSRPRewarder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_premiumPool",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "LogMaxApproveCurrency",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_premiumPool",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "LogMaxDestroyCurrencyAllowance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_premiumPool",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "LogRemoveCurrency",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_premiumPool",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_whiteListAddress",
          "type": "address"
        }
      ],
      "name": "LogRemoveWhiteList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "PremiumWithdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BACK_BURN_PREMIUM_ETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "BACK_BURN_UNO_PREMIUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "SSIP_PREMIUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SSIP_PREMIUM_ETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "SSRP_PREMIUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SSRP_PREMIUM_ETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNO_TOKEN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC_TOKEN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "addCurrency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_whiteListAddress",
          "type": "address"
        }
      ],
      "name": "addWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "availableCurrencies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "availableCurrencyList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyBackAndBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_premiumCurrency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_premiumAmount",
          "type": "uint256"
        }
      ],
      "name": "collectPremium",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collectPremiumInETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewarder",
          "type": "address"
        }
      ],
      "name": "depositToSyntheticSSIPRewarder",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewarder",
          "type": "address"
        }
      ],
      "name": "depositToSyntheticSSRPRewarder",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "destroyCurrencyAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exchangeAgent",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "maxApproveCurrency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "removeCurrency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_whiteListAddress",
          "type": "address"
        }
      ],
      "name": "removeWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawPremium",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x584c0eac444abf9c5cd04acd89f014729c59f7daf1f013eebbebe64b127b1ecc",
  "receipt": {
    "to": null,
    "from": "0x5569BDF4e02cec3fE459796e3d0e741616029fA4",
    "contractAddress": "0xf6F31ACB097B206c80cfcd1d0855f7170891bE4c",
    "transactionIndex": 2,
    "gasUsed": "2287999",
    "logsBloom": "0x
    "blockHash": "0x13a3efa4228ba6fff3bb66af4108bd54ea906ae519ce55971557928972c6d7d8",
    "transactionHash": "0x584c0eac444abf9c5cd04acd89f014729c59f7daf1f013eebbebe64b127b1ecc",
    "logs": [],
    "blockNumber": 10002383,
    "cumulativeGasUsed": "7076817",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x1E545CbA6E77CBfcBd0a7CAD9F2D8E0051F347D4",
    "0x53fb43BaE4C13d6AFAD37fB37c3fC49f3Af433F5",
    "0x40c035016AD732b6cFce34c3F881040B6C6cf71E"
  ],
  "solcInputHash": "bf649fb54ad93792de572409f0dce774",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_unoToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_premiumPool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"LogAddCurrency\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_premiumPool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_whiteListAddress\",\"type\":\"address\"}],\"name\":\"LogAddWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_premiumPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_unoAmount\",\"type\":\"uint256\"}],\"name\":\"LogBuyBackAndBurn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_premiumCurrency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_premiumAmount\",\"type\":\"uint256\"}],\"name\":\"LogCollectPremium\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_rewarder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountDeposited\",\"type\":\"uint256\"}],\"name\":\"LogDepositToSyntheticSSIPRewarder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_rewarder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ethAmountDeposited\",\"type\":\"uint256\"}],\"name\":\"LogDepositToSyntheticSSRPRewarder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_premiumPool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"LogMaxApproveCurrency\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_premiumPool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"LogMaxDestroyCurrencyAllowance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_premiumPool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"LogRemoveCurrency\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_premiumPool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_whiteListAddress\",\"type\":\"address\"}],\"name\":\"LogRemoveWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"PremiumWithdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BACK_BURN_PREMIUM_ETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"BACK_BURN_UNO_PREMIUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"SSIP_PREMIUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SSIP_PREMIUM_ETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"SSRP_PREMIUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SSRP_PREMIUM_ETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNO_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"addCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_whiteListAddress\",\"type\":\"address\"}],\"name\":\"addWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"availableCurrencies\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"availableCurrencyList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyBackAndBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_premiumCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_premiumAmount\",\"type\":\"uint256\"}],\"name\":\"collectPremium\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectPremiumInETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewarder\",\"type\":\"address\"}],\"name\":\"depositToSyntheticSSIPRewarder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewarder\",\"type\":\"address\"}],\"name\":\"depositToSyntheticSSRPRewarder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"destroyCurrencyAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeAgent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"maxApproveCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"removeCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_whiteListAddress\",\"type\":\"address\"}],\"name\":\"removeWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawPremium\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PremiumPool.sol\":\"PremiumPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"contracts/PremiumPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"./interfaces/IExchangeAgent.sol\\\";\\nimport \\\"./libraries/TransferHelper.sol\\\";\\nimport \\\"./interfaces/IPremiumPool.sol\\\";\\n\\ncontract PremiumPool is IPremiumPool, ReentrancyGuard {\\n    address public owner;\\n    address public exchangeAgent;\\n    address public UNO_TOKEN;\\n    address public USDC_TOKEN;\\n    mapping(address => bool) public availableCurrencies;\\n    address[] public availableCurrencyList;\\n    mapping(address => bool) public whiteList;\\n\\n    address public constant burnAddress = 0x000000000000000000000000000000000000dEaD;\\n    mapping(address => uint256) public SSRP_PREMIUM;\\n    mapping(address => uint256) public SSIP_PREMIUM;\\n    mapping(address => uint256) public BACK_BURN_UNO_PREMIUM;\\n    uint256 public SSRP_PREMIUM_ETH;\\n    uint256 public SSIP_PREMIUM_ETH;\\n    uint256 public BACK_BURN_PREMIUM_ETH;\\n\\n    uint256 private MAX_INTEGER = type(uint256).max;\\n\\n    event PremiumWithdraw(address indexed _currency, address indexed _to, uint256 _amount);\\n    event LogBuyBackAndBurn(address indexed _operator, address indexed _premiumPool, uint256 _unoAmount);\\n    event LogCollectPremium(address indexed _from, address _premiumCurrency, uint256 _premiumAmount);\\n    event LogDepositToSyntheticSSRPRewarder(address indexed _rewarder, uint256 _ethAmountDeposited);\\n    event LogDepositToSyntheticSSIPRewarder(address indexed _rewarder, address indexed _currency, uint256 _amountDeposited);\\n    event LogAddCurrency(address indexed _premiumPool, address indexed _currency);\\n    event LogRemoveCurrency(address indexed _premiumPool, address indexed _currency);\\n    event LogMaxApproveCurrency(address indexed _premiumPool, address indexed _currency, address indexed _to);\\n    event LogMaxDestroyCurrencyAllowance(address indexed _premiumPool, address indexed _currency, address indexed _to);\\n    event LogAddWhiteList(address indexed _premiumPool, address indexed _whiteListAddress);\\n    event LogRemoveWhiteList(address indexed _premiumPool, address indexed _whiteListAddress);\\n\\n    constructor(\\n        address _exchangeAgent,\\n        address _unoToken,\\n        address _usdcToken\\n    ) {\\n        require(_exchangeAgent != address(0), \\\"UnoRe: zero exchangeAgent address\\\");\\n        require(_unoToken != address(0), \\\"UnoRe: zero UNO address\\\");\\n        require(_usdcToken != address(0), \\\"UnoRe: zero USDC address\\\");\\n        exchangeAgent = _exchangeAgent;\\n        owner = msg.sender;\\n        UNO_TOKEN = _unoToken;\\n        USDC_TOKEN = _usdcToken;\\n        whiteList[msg.sender] = true;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"UnoRe: PremiumPool Forbidden\\\");\\n        _;\\n    }\\n\\n    modifier onlyAvailableCurrency(address _currency) {\\n        require(availableCurrencies[_currency], \\\"UnoRe: not allowed currency\\\");\\n        _;\\n    }\\n\\n    modifier onlyWhiteList() {\\n        require(whiteList[msg.sender], \\\"UnoRe: not white list address\\\");\\n        _;\\n    }\\n\\n    receive() external payable {}\\n\\n    function collectPremiumInETH() external payable override nonReentrant onlyWhiteList {\\n        uint256 _premiumAmount = msg.value;\\n        uint256 _premium_SSRP = (_premiumAmount * 1000) / 10000;\\n        uint256 _premium_SSIP = (_premiumAmount * 7000) / 10000;\\n        SSRP_PREMIUM_ETH = SSRP_PREMIUM_ETH + _premium_SSRP;\\n        SSIP_PREMIUM_ETH = SSIP_PREMIUM_ETH + _premium_SSIP;\\n        BACK_BURN_PREMIUM_ETH = BACK_BURN_PREMIUM_ETH + (_premiumAmount - _premium_SSRP - _premium_SSIP);\\n        emit LogCollectPremium(msg.sender, address(0), _premiumAmount);\\n    }\\n\\n    function collectPremium(address _premiumCurrency, uint256 _premiumAmount)\\n        external\\n        override\\n        nonReentrant\\n        onlyAvailableCurrency(_premiumCurrency)\\n        onlyWhiteList\\n    {\\n        require(IERC20(_premiumCurrency).balanceOf(msg.sender) >= _premiumAmount, \\\"UnoRe: premium balance overflow\\\");\\n        TransferHelper.safeTransferFrom(_premiumCurrency, msg.sender, address(this), _premiumAmount);\\n        uint256 _premium_SSRP = (_premiumAmount * 1000) / 10000;\\n        uint256 _premium_SSIP = (_premiumAmount * 7000) / 10000;\\n        SSRP_PREMIUM[_premiumCurrency] = SSRP_PREMIUM[_premiumCurrency] + _premium_SSRP;\\n        SSIP_PREMIUM[_premiumCurrency] = SSIP_PREMIUM[_premiumCurrency] + _premium_SSIP;\\n        BACK_BURN_UNO_PREMIUM[_premiumCurrency] =\\n            BACK_BURN_UNO_PREMIUM[_premiumCurrency] +\\n            (_premiumAmount - _premium_SSRP - _premium_SSIP);\\n        emit LogCollectPremium(msg.sender, _premiumCurrency, _premiumAmount);\\n    }\\n\\n    function depositToSyntheticSSRPRewarder(address _rewarder) external payable onlyOwner nonReentrant {\\n        require(_rewarder != address(0), \\\"UnoRe: zero address\\\");\\n        uint256 usdcAmountToDeposit = 0;\\n        if (SSRP_PREMIUM_ETH > 0) {\\n            TransferHelper.safeTransferETH(exchangeAgent, SSRP_PREMIUM_ETH);\\n            uint256 convertedAmount = IExchangeAgent(exchangeAgent).convertForToken(address(0), USDC_TOKEN, SSRP_PREMIUM_ETH);\\n            usdcAmountToDeposit += convertedAmount;\\n            SSRP_PREMIUM_ETH = 0;\\n        }\\n        for (uint256 ii = 0; ii < availableCurrencyList.length; ii++) {\\n            if (SSRP_PREMIUM[availableCurrencyList[ii]] > 0) {\\n                if (availableCurrencyList[ii] == USDC_TOKEN) {\\n                    usdcAmountToDeposit += SSRP_PREMIUM[availableCurrencyList[ii]];\\n                } else {\\n                    uint256 convertedUSDCAmount = IExchangeAgent(exchangeAgent).convertForToken(\\n                        availableCurrencyList[ii],\\n                        USDC_TOKEN,\\n                        SSRP_PREMIUM[availableCurrencyList[ii]]\\n                    );\\n                    usdcAmountToDeposit += convertedUSDCAmount;\\n                }\\n                SSRP_PREMIUM[availableCurrencyList[ii]] = 0;\\n            }\\n        }\\n        if (usdcAmountToDeposit > 0) {\\n            TransferHelper.safeTransfer(USDC_TOKEN, _rewarder, usdcAmountToDeposit);\\n            emit LogDepositToSyntheticSSRPRewarder(_rewarder, usdcAmountToDeposit);\\n        }\\n    }\\n\\n    function depositToSyntheticSSIPRewarder(address _currency, address _rewarder) external payable onlyOwner nonReentrant {\\n        require(_rewarder != address(0), \\\"UnoRe: zero address\\\");\\n        if (_currency == address(0) && SSIP_PREMIUM_ETH > 0) {\\n            TransferHelper.safeTransferETH(_rewarder, SSIP_PREMIUM_ETH);\\n            SSIP_PREMIUM_ETH = 0;\\n            emit LogDepositToSyntheticSSIPRewarder(_rewarder, _currency, SSIP_PREMIUM_ETH);\\n        } else {\\n            if (availableCurrencies[_currency] && SSIP_PREMIUM[_currency] > 0) {\\n                TransferHelper.safeTransfer(_currency, _rewarder, SSIP_PREMIUM[_currency]);\\n                SSIP_PREMIUM[_currency] = 0;\\n                emit LogDepositToSyntheticSSIPRewarder(_rewarder, _currency, SSIP_PREMIUM[_currency]);\\n            }\\n        }\\n    }\\n\\n    function buyBackAndBurn() external onlyOwner {\\n        uint256 unoAmount = 0;\\n        if (BACK_BURN_PREMIUM_ETH > 0) {\\n            TransferHelper.safeTransferETH(exchangeAgent, BACK_BURN_PREMIUM_ETH);\\n            unoAmount += IExchangeAgent(exchangeAgent).convertForToken(address(0), UNO_TOKEN, BACK_BURN_PREMIUM_ETH);\\n            BACK_BURN_PREMIUM_ETH = 0;\\n        }\\n        for (uint256 ii = 0; ii < availableCurrencyList.length; ii++) {\\n            if (BACK_BURN_UNO_PREMIUM[availableCurrencyList[ii]] > 0) {\\n                uint256 convertedAmount = IExchangeAgent(exchangeAgent).convertForToken(\\n                    availableCurrencyList[ii],\\n                    UNO_TOKEN,\\n                    BACK_BURN_UNO_PREMIUM[availableCurrencyList[ii]]\\n                );\\n                unoAmount += convertedAmount;\\n                BACK_BURN_UNO_PREMIUM[availableCurrencyList[ii]] = 0;\\n            }\\n        }\\n        if (unoAmount > 0) {\\n            TransferHelper.safeTransfer(UNO_TOKEN, burnAddress, unoAmount);\\n        }\\n        emit LogBuyBackAndBurn(msg.sender, address(this), unoAmount);\\n    }\\n\\n    function withdrawPremium(\\n        address _currency,\\n        address _to,\\n        uint256 _amount\\n    ) external override onlyOwner {\\n        require(_to != address(0), \\\"UnoRe: zero address\\\");\\n        require(_amount > 0, \\\"UnoRe: zero amount\\\");\\n        if (_currency == address(0)) {\\n            require(address(this).balance >= _amount, \\\"UnoRe: Insufficient Premium\\\");\\n            TransferHelper.safeTransferETH(_to, _amount);\\n        } else {\\n            require(IERC20(_currency).balanceOf(address(this)) >= _amount, \\\"UnoRe: Insufficient Premium\\\");\\n            TransferHelper.safeTransfer(_currency, _to, _amount);\\n        }\\n        emit PremiumWithdraw(_currency, _to, _amount);\\n    }\\n\\n    function addCurrency(address _currency) external onlyOwner {\\n        require(!availableCurrencies[_currency], \\\"Already available\\\");\\n        availableCurrencies[_currency] = true;\\n        availableCurrencyList.push(_currency);\\n        maxApproveCurrency(_currency, exchangeAgent);\\n        emit LogAddCurrency(address(this), _currency);\\n    }\\n\\n    function removeCurrency(address _currency) external onlyOwner {\\n        require(availableCurrencies[_currency], \\\"Not available yet\\\");\\n        availableCurrencies[_currency] = false;\\n        uint256 len = availableCurrencyList.length;\\n        address lastCurrency = availableCurrencyList[len - 1];\\n        for (uint256 ii = 0; ii < len; ii++) {\\n            if (_currency == availableCurrencyList[ii]) {\\n                availableCurrencyList[ii] = lastCurrency;\\n                availableCurrencyList.pop();\\n                destroyCurrencyAllowance(_currency, exchangeAgent);\\n                return;\\n            }\\n        }\\n        emit LogRemoveCurrency(address(this), _currency);\\n    }\\n\\n    function maxApproveCurrency(address _currency, address _to) public onlyOwner nonReentrant {\\n        if (IERC20(_currency).allowance(address(this), _to) < MAX_INTEGER) {\\n            TransferHelper.safeApprove(_currency, _to, MAX_INTEGER);\\n            emit LogMaxApproveCurrency(address(this), _currency, _to);\\n        }\\n    }\\n\\n    function destroyCurrencyAllowance(address _currency, address _to) public onlyOwner nonReentrant {\\n        if (IERC20(_currency).allowance(address(this), _to) > 0) {\\n            TransferHelper.safeApprove(_currency, _to, 0);\\n            emit LogMaxDestroyCurrencyAllowance(address(this), _currency, _to);\\n        }\\n    }\\n\\n    function addWhiteList(address _whiteListAddress) external onlyOwner {\\n        require(_whiteListAddress != address(0), \\\"UnoRe: zero address\\\");\\n        require(!whiteList[_whiteListAddress], \\\"UnoRe: white list already\\\");\\n        whiteList[_whiteListAddress] = true;\\n        emit LogAddWhiteList(address(this), _whiteListAddress);\\n    }\\n\\n    function removeWhiteList(address _whiteListAddress) external onlyOwner {\\n        require(_whiteListAddress != address(0), \\\"UnoRe: zero address\\\");\\n        require(whiteList[_whiteListAddress], \\\"UnoRe: white list removed or unadded already\\\");\\n        whiteList[_whiteListAddress] = false;\\n        emit LogRemoveWhiteList(address(this), _whiteListAddress);\\n    }\\n}\\n\",\"keccak256\":\"0xa38ddfdfc6308e99afce576114de0746036ffe3816d6fc97dfc768dba1d0d3a2\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IExchangeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\ninterface IExchangeAgent {\\n    function USDC_TOKEN() external view returns (address);\\n\\n    function getTokenAmountForUSDC(address _token, uint256 _usdtAmount) external view returns (uint256);\\n\\n    function getETHAmountForUSDC(uint256 _usdtAmount) external view returns (uint256);\\n\\n    function getETHAmountForToken(address _token, uint256 _tokenAmount) external view returns (uint256);\\n\\n    function getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external view returns (uint256);\\n\\n    function convertForToken(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external returns (uint256);\\n\\n    function convertForETH(address _token, uint256 _convertAmount) external returns (uint256);\\n}\\n\",\"keccak256\":\"0xac695d6d1b861eb9f84ac2009f97fd5b00d44500b6735fb9256f1c227323e07e\",\"license\":\"MIT\"},\"contracts/interfaces/IPremiumPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface IPremiumPool {\\n    function collectPremium(address _premiumCurrency, uint256 _premiumAmount) external;\\n\\n    function collectPremiumInETH() external payable;\\n\\n    function withdrawPremium(\\n        address _currency,\\n        address _to,\\n        uint256 _amount\\n    ) external;\\n}\\n\",\"keccak256\":\"0x0936fc16db359003c002ef420acd4e4894b6271ca8cb91a2d0a5c8f357f3590c\",\"license\":\"GPL-3.0\"},\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.0;\\n\\n// from Uniswap TransferHelper library\\nlibrary TransferHelper {\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeApprove: approve failed\\\");\\n    }\\n\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeTransfer: transfer failed\\\");\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::transferFrom: transferFrom failed\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"TransferHelper::safeTransferETH: ETH transfer failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xb7650ccd26cfa42968350d9c477f55f98059d74e0f173a1da45b06c2607e705d\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x6080604052600019600e553480156200001757600080fd5b50604051620027d0380380620027d08339810160408190526200003a916200014b565b60016000556001600160a01b038316620000715760405162461bcd60e51b81526004016200006890620001cb565b60405180910390fd5b6001600160a01b0382166200009a5760405162461bcd60e51b815260040162000068906200020c565b6001600160a01b038116620000c35760405162461bcd60e51b8152600401620000689062000194565b600280546001600160a01b03199081166001600160a01b03958616179091556001805433908316811782556003805484169587169590951790945560048054909216929094169190911790556000908152600760205260409020805460ff1916909117905562000243565b80516001600160a01b03811681146200014657600080fd5b919050565b60008060006060848603121562000160578283fd5b6200016b846200012e565b92506200017b602085016200012e565b91506200018b604085016200012e565b90509250925092565b60208082526018908201527f556e6f52653a207a65726f205553444320616464726573730000000000000000604082015260600190565b60208082526021908201527f556e6f52653a207a65726f2065786368616e67654167656e74206164647265736040820152607360f81b606082015260800190565b60208082526017908201527f556e6f52653a207a65726f20554e4f2061646472657373000000000000000000604082015260600190565b61257d80620002536000396000f3fe6080604052600436106101a55760003560e01c80638c8ac76d116100e1578063c970e99f1161008a578063e7cd4a0411610064578063e7cd4a0414610433578063e980a96a14610453578063f88822c414610466578063fa56927414610479576101ac565b8063c970e99f146103e9578063d84e305a146103fe578063d9203b911461041e576101ac565b8063bc181416116100bb578063bc181416146103a1578063c4ddd57c146103a9578063c5d3a107146103c9576101ac565b80638c8ac76d1461034c5780638da5cb5b1461036c57806397274e6e14610381576101ac565b8063372c12b11161014e5780635bb48a00116101285780635bb48a00146102d757806370d5ae05146102f7578063729ae6b01461030c5780638ab234b61461032c576101ac565b8063372c12b114610282578063493721f5146102a257806354ea1d7d146102b7576101ac565b8063140742371161017f578063140742371461021e5780631af42c0f146102335780632042e5c214610260576101ac565b8063095002b8146101b15780630cf84e0b146101dc5780630f97b97b146101fc576101ac565b366101ac57005b600080fd5b3480156101bd57600080fd5b506101c661048e565b6040516101d3919061249f565b60405180910390f35b3480156101e857600080fd5b506101c66101f7366004611ebb565b610494565b34801561020857600080fd5b506102116104a6565b6040516101d39190611ffb565b34801561022a57600080fd5b506101c66104b5565b34801561023f57600080fd5b5061025361024e366004611ebb565b6104bb565b6040516101d39190612066565b34801561026c57600080fd5b5061028061027b366004611ebb565b6104d0565b005b34801561028e57600080fd5b5061025361029d366004611ebb565b6105ab565b3480156102ae57600080fd5b506101c66105c0565b3480156102c357600080fd5b506102806102d2366004611edc565b6105c6565b3480156102e357600080fd5b506102116102f2366004611f92565b6106f1565b34801561030357600080fd5b5061021161071b565b34801561031857600080fd5b506101c6610327366004611ebb565b610721565b34801561033857600080fd5b50610280610347366004611ebb565b610733565b34801561035857600080fd5b50610280610367366004611f49565b610851565b34801561037857600080fd5b50610211610acd565b34801561038d57600080fd5b5061028061039c366004611edc565b610adc565b610280610c04565b3480156103b557600080fd5b506101c66103c4366004611ebb565b610d23565b3480156103d557600080fd5b506102806103e4366004611ebb565b610d35565b3480156103f557600080fd5b50610280610f51565b34801561040a57600080fd5b50610280610419366004611f0e565b61129d565b34801561042a57600080fd5b50610211611441565b34801561043f57600080fd5b5061028061044e366004611ebb565b611450565b610280610461366004611edc565b611526565b610280610474366004611ebb565b6116eb565b34801561048557600080fd5b50610211611b3b565b600d5481565b600a6020526000908152604090205481565b6003546001600160a01b031681565b600b5481565b60056020526000908152604090205460ff1681565b6001546001600160a01b031633146105035760405162461bcd60e51b81526004016104fa9061229b565b60405180910390fd5b6001600160a01b0381166105295760405162461bcd60e51b81526004016104fa90612071565b6001600160a01b03811660009081526007602052604090205460ff166105615760405162461bcd60e51b81526004016104fa906120a8565b6001600160a01b038116600081815260076020526040808220805460ff191690555130917f2f467772ef0a5478314f3bc2b37d4b2ad29b65f052b2cedc8e2972dda033529291a350565b60076020526000908152604090205460ff1681565b600c5481565b6001546001600160a01b031633146105f05760405162461bcd60e51b81526004016104fa9061229b565b600260005414156106135760405162461bcd60e51b81526004016104fa90612468565b6002600055600e54604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e90610649903090869060040161200f565b60206040518083038186803b15801561066157600080fd5b505afa158015610675573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106999190611faa565b10156106e8576106ac8282600e54611b4a565b6040516001600160a01b03808316919084169030907f43121c61393a372aa50e4d3b0ec4003cce2d54e92ae7799836389597d5ead98d90600090a45b50506001600055565b6006818154811061070157600080fd5b6000918252602090912001546001600160a01b0316905081565b61dead81565b60096020526000908152604090205481565b6001546001600160a01b0316331461075d5760405162461bcd60e51b81526004016104fa9061229b565b6001600160a01b03811660009081526005602052604090205460ff16156107965760405162461bcd60e51b81526004016104fa9061222d565b6001600160a01b038082166000818152600560205260408120805460ff191660019081179091556006805491820181559091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01805473ffffffffffffffffffffffffffffffffffffffff19169091179055600254610818918391166105c6565b6040516001600160a01b0382169030907fc2def0bb3cfcff0462d9a69faa99e2ddeb1bf6b642d12a1fe3ed6653944fecd590600090a350565b600260005414156108745760405162461bcd60e51b81526004016104fa90612468565b600260009081556001600160a01b038316815260056020526040902054829060ff166108b25760405162461bcd60e51b81526004016104fa90612162565b3360009081526007602052604090205460ff166108e15760405162461bcd60e51b81526004016104fa906123d4565b6040516370a0823160e01b815282906001600160a01b038516906370a082319061090f903390600401611ffb565b60206040518083038186803b15801561092757600080fd5b505afa15801561093b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095f9190611faa565b101561097d5760405162461bcd60e51b81526004016104fa90612264565b61098983333085611c37565b600061271061099a846103e86124e0565b6109a491906124c0565b905060006127106109b785611b586124e0565b6109c191906124c0565b6001600160a01b0386166000908152600860205260409020549091506109e89083906124a8565b6001600160a01b038616600090815260086020908152604080832093909355600990522054610a189082906124a8565b6001600160a01b03861660009081526009602052604090205580610a3c83866124ff565b610a4691906124ff565b6001600160a01b0386166000908152600a6020526040902054610a6991906124a8565b6001600160a01b0386166000908152600a602052604090819020919091555133907f411101aad886ab4351e7c392d06f013b37a7c6c00b7f964bca364da03df0e7d590610ab9908890889061204d565b60405180910390a250506001600055505050565b6001546001600160a01b031681565b6001546001600160a01b03163314610b065760405162461bcd60e51b81526004016104fa9061229b565b60026000541415610b295760405162461bcd60e51b81526004016104fa90612468565b60026000908155604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e90610b5e903090869060040161200f565b60206040518083038186803b158015610b7657600080fd5b505afa158015610b8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bae9190611faa565b11156106e857610bc082826000611b4a565b6040516001600160a01b03808316919084169030907fefc983aa790fe837a31d17855afa75e3d276afef0959edcd4edd1a5e09905ee590600090a450506001600055565b60026000541415610c275760405162461bcd60e51b81526004016104fa90612468565b600260009081553381526007602052604090205460ff16610c5a5760405162461bcd60e51b81526004016104fa906123d4565b346000612710610c6c836103e86124e0565b610c7691906124c0565b90506000612710610c8984611b586124e0565b610c9391906124c0565b905081600b54610ca391906124a8565b600b55600c54610cb49082906124a8565b600c5580610cc283856124ff565b610ccc91906124ff565b600d54610cd991906124a8565b600d5560405133907f411101aad886ab4351e7c392d06f013b37a7c6c00b7f964bca364da03df0e7d590610d1190600090879061204d565b60405180910390a25050600160005550565b60086020526000908152604090205481565b6001546001600160a01b03163314610d5f5760405162461bcd60e51b81526004016104fa9061229b565b6001600160a01b03811660009081526005602052604090205460ff16610d975760405162461bcd60e51b81526004016104fa90612340565b6001600160a01b0381166000908152600560205260408120805460ff19169055600680549190610dc86001846124ff565b81548110610de657634e487b7160e01b600052603260045260246000fd5b60009182526020822001546001600160a01b031691505b82811015610f145760068181548110610e2657634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0385811691161415610f02578160068281548110610e6757634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506006805480610eb457634e487b7160e01b600052603160045260246000fd5b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff19169055019055600254610efa9085906001600160a01b0316610adc565b505050610f4e565b80610f0c81612516565b915050610dfd565b506040516001600160a01b0384169030907f39198a02f988846be034bb915c4f3e43a226a15d6f29cf21918e838b1a5f878490600090a350505b50565b6001546001600160a01b03163314610f7b5760405162461bcd60e51b81526004016104fa9061229b565b600d546000901561103f57600254600d54610f9f916001600160a01b031690611d27565b600254600354600d546040516393badc4160e01b81526001600160a01b03938416936393badc4193610fdb936000939290911691600401612029565b602060405180830381600087803b158015610ff557600080fd5b505af1158015611009573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102d9190611faa565b61103790826124a8565b6000600d5590505b60005b60065481101561123e576000600a60006006848154811061107357634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b03168352820192909252604001902054111561122c57600254600680546000926001600160a01b0316916393badc4191859081106110d657634e487b7160e01b600052603260045260246000fd5b6000918252602082200154600354600680546001600160a01b03938416949290931692600a9291908990811061111c57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b0316835282019290925260409081019091205490517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815261117e93929190600401612029565b602060405180830381600087803b15801561119857600080fd5b505af11580156111ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d09190611faa565b90506111dc81846124a8565b92506000600a60006006858154811061120557634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b03168352820192909252604001902055505b8061123681612516565b915050611042565b50801561125e5760035461125e906001600160a01b031661dead83611db9565b604051309033907f94032d93ea01eeeccc1b1f03a7eddaf352c7cd85e246c6fc01afed0ddf6b5c1d9061129290859061249f565b60405180910390a350565b6001546001600160a01b031633146112c75760405162461bcd60e51b81526004016104fa9061229b565b6001600160a01b0382166112ed5760405162461bcd60e51b81526004016104fa90612071565b6000811161130d5760405162461bcd60e51b81526004016104fa906122d2565b6001600160a01b03831661134a578047101561133b5760405162461bcd60e51b81526004016104fa90612309565b6113458282611d27565b6113f1565b6040516370a0823160e01b815281906001600160a01b038516906370a0823190611378903090600401611ffb565b60206040518083038186803b15801561139057600080fd5b505afa1580156113a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c89190611faa565b10156113e65760405162461bcd60e51b81526004016104fa90612309565b6113f1838383611db9565b816001600160a01b0316836001600160a01b03167f8d18a25569e967883ac0402e6991b4ac87616370a1c2ce59726abce4ef45bdb883604051611434919061249f565b60405180910390a3505050565b6002546001600160a01b031681565b6001546001600160a01b0316331461147a5760405162461bcd60e51b81526004016104fa9061229b565b6001600160a01b0381166114a05760405162461bcd60e51b81526004016104fa90612071565b6001600160a01b03811660009081526007602052604090205460ff16156114d95760405162461bcd60e51b81526004016104fa906121f6565b6001600160a01b038116600081815260076020526040808220805460ff191660011790555130917f8cd7b0b1a7316eb3e5d781d629cb8bf4e2fd9a8903bdd0f6b894c087d61b21f291a350565b6001546001600160a01b031633146115505760405162461bcd60e51b81526004016104fa9061229b565b600260005414156115735760405162461bcd60e51b81526004016104fa90612468565b60026000556001600160a01b03811661159e5760405162461bcd60e51b81526004016104fa90612071565b6001600160a01b0382161580156115b757506000600c54115b15611622576115c881600c54611d27565b6000600c81905550816001600160a01b0316816001600160a01b03167f370cbb08cddf346c35e924a503aa223dcc1b75a993d7c23a602d2e4bc0802c10600c54604051611615919061249f565b60405180910390a36106e8565b6001600160a01b03821660009081526005602052604090205460ff16801561166157506001600160a01b03821660009081526009602052604090205415155b156106e8576001600160a01b03821660009081526009602052604090205461168c9083908390611db9565b6001600160a01b038083166000818152600960205260408082208290555191928416917f370cbb08cddf346c35e924a503aa223dcc1b75a993d7c23a602d2e4bc0802c10916116da9161249f565b60405180910390a350506001600055565b6001546001600160a01b031633146117155760405162461bcd60e51b81526004016104fa9061229b565b600260005414156117385760405162461bcd60e51b81526004016104fa90612468565b60026000556001600160a01b0381166117635760405162461bcd60e51b81526004016104fa90612071565b600b546000901561182c57600254600b54611787916001600160a01b031690611d27565b60025460048054600b546040516393badc4160e01b81526000946001600160a01b03908116946393badc41946117c594889491909316929101612029565b602060405180830381600087803b1580156117df57600080fd5b505af11580156117f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118179190611faa565b905061182381836124a8565b6000600b559150505b60005b600654811015611ad3576000600860006006848154811061186057634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040019020541115611ac157600454600680546001600160a01b0390921691839081106118bc57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031614156119325760086000600683815481106118fc57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b0316835282019290925260400190205461192b90836124a8565b9150611a74565b600254600680546000926001600160a01b0316916393badc41918590811061196a57634e487b7160e01b600052603260045260246000fd5b6000918252602082200154600454600680546001600160a01b039384169492909316926008929190899081106119b057634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b0316835282019290925260409081019091205490517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152611a1293929190600401612029565b602060405180830381600087803b158015611a2c57600080fd5b505af1158015611a40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a649190611faa565b9050611a7081846124a8565b9250505b60006008600060068481548110611a9b57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040019020555b80611acb81612516565b91505061182f565b5080156106e857600454611af1906001600160a01b03168383611db9565b816001600160a01b03167f9a380c5d696c8e394928ff8981a11ee388a14e2f7e16d373d73486cf3c48625482604051611b2a919061249f565b60405180910390a250506001600055565b6004546001600160a01b031681565b600080846001600160a01b031663095ea7b38585604051602401611b6f92919061204d565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051611ba89190611fc2565b6000604051808303816000865af19150503d8060008114611be5576040519150601f19603f3d011682016040523d82523d6000602084013e611bea565b606091505b5091509150818015611c14575080511580611c14575080806020019051810190611c149190611f72565b611c305760405162461bcd60e51b81526004016104fa90612377565b5050505050565b600080856001600160a01b03166323b872dd868686604051602401611c5e93929190612029565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051611c979190611fc2565b6000604051808303816000865af19150503d8060008114611cd4576040519150601f19603f3d011682016040523d82523d6000602084013e611cd9565b606091505b5091509150818015611d03575080511580611d03575080806020019051810190611d039190611f72565b611d1f5760405162461bcd60e51b81526004016104fa90612105565b505050505050565b604080516000808252602082019092526001600160a01b038416908390604051611d519190611fc2565b60006040518083038185875af1925050503d8060008114611d8e576040519150601f19603f3d011682016040523d82523d6000602084013e611d93565b606091505b5050905080611db45760405162461bcd60e51b81526004016104fa90612199565b505050565b600080846001600160a01b031663a9059cbb8585604051602401611dde92919061204d565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051611e179190611fc2565b6000604051808303816000865af19150503d8060008114611e54576040519150601f19603f3d011682016040523d82523d6000602084013e611e59565b606091505b5091509150818015611e83575080511580611e83575080806020019051810190611e839190611f72565b611c305760405162461bcd60e51b81526004016104fa9061240b565b80356001600160a01b0381168114611eb657600080fd5b919050565b600060208284031215611ecc578081fd5b611ed582611e9f565b9392505050565b60008060408385031215611eee578081fd5b611ef783611e9f565b9150611f0560208401611e9f565b90509250929050565b600080600060608486031215611f22578081fd5b611f2b84611e9f565b9250611f3960208501611e9f565b9150604084013590509250925092565b60008060408385031215611f5b578182fd5b611f6483611e9f565b946020939093013593505050565b600060208284031215611f83578081fd5b81518015158114611ed5578182fd5b600060208284031215611fa3578081fd5b5035919050565b600060208284031215611fbb578081fd5b5051919050565b60008251815b81811015611fe25760208186018101518583015201611fc8565b81811115611ff05782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526013908201527f556e6f52653a207a65726f206164647265737300000000000000000000000000604082015260600190565b6020808252602c908201527f556e6f52653a207768697465206c6973742072656d6f766564206f7220756e6160408201527f6464656420616c72656164790000000000000000000000000000000000000000606082015260800190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b6020808252601b908201527f556e6f52653a206e6f7420616c6c6f7765642063757272656e63790000000000604082015260600190565b60208082526034908201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60408201527f20455448207472616e73666572206661696c6564000000000000000000000000606082015260800190565b60208082526019908201527f556e6f52653a207768697465206c69737420616c726561647900000000000000604082015260600190565b60208082526011908201527f416c726561647920617661696c61626c65000000000000000000000000000000604082015260600190565b6020808252601f908201527f556e6f52653a207072656d69756d2062616c616e6365206f766572666c6f7700604082015260600190565b6020808252601c908201527f556e6f52653a205072656d69756d506f6f6c20466f7262696464656e00000000604082015260600190565b60208082526012908201527f556e6f52653a207a65726f20616d6f756e740000000000000000000000000000604082015260600190565b6020808252601b908201527f556e6f52653a20496e73756666696369656e74205072656d69756d0000000000604082015260600190565b60208082526011908201527f4e6f7420617661696c61626c6520796574000000000000000000000000000000604082015260600190565b6020808252602b908201527f5472616e7366657248656c7065723a3a73616665417070726f76653a2061707060408201527f726f7665206661696c6564000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f556e6f52653a206e6f74207768697465206c6973742061646472657373000000604082015260600190565b6020808252602d908201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260408201527f616e73666572206661696c656400000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b90815260200190565b600082198211156124bb576124bb612531565b500190565b6000826124db57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156124fa576124fa612531565b500290565b60008282101561251157612511612531565b500390565b600060001982141561252a5761252a612531565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220eb11d61d5dc08c31fd686bfcf1d263e661733e04b51df2115b9a222c61b0f28364736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106101a55760003560e01c80638c8ac76d116100e1578063c970e99f1161008a578063e7cd4a0411610064578063e7cd4a0414610433578063e980a96a14610453578063f88822c414610466578063fa56927414610479576101ac565b8063c970e99f146103e9578063d84e305a146103fe578063d9203b911461041e576101ac565b8063bc181416116100bb578063bc181416146103a1578063c4ddd57c146103a9578063c5d3a107146103c9576101ac565b80638c8ac76d1461034c5780638da5cb5b1461036c57806397274e6e14610381576101ac565b8063372c12b11161014e5780635bb48a00116101285780635bb48a00146102d757806370d5ae05146102f7578063729ae6b01461030c5780638ab234b61461032c576101ac565b8063372c12b114610282578063493721f5146102a257806354ea1d7d146102b7576101ac565b8063140742371161017f578063140742371461021e5780631af42c0f146102335780632042e5c214610260576101ac565b8063095002b8146101b15780630cf84e0b146101dc5780630f97b97b146101fc576101ac565b366101ac57005b600080fd5b3480156101bd57600080fd5b506101c661048e565b6040516101d3919061249f565b60405180910390f35b3480156101e857600080fd5b506101c66101f7366004611ebb565b610494565b34801561020857600080fd5b506102116104a6565b6040516101d39190611ffb565b34801561022a57600080fd5b506101c66104b5565b34801561023f57600080fd5b5061025361024e366004611ebb565b6104bb565b6040516101d39190612066565b34801561026c57600080fd5b5061028061027b366004611ebb565b6104d0565b005b34801561028e57600080fd5b5061025361029d366004611ebb565b6105ab565b3480156102ae57600080fd5b506101c66105c0565b3480156102c357600080fd5b506102806102d2366004611edc565b6105c6565b3480156102e357600080fd5b506102116102f2366004611f92565b6106f1565b34801561030357600080fd5b5061021161071b565b34801561031857600080fd5b506101c6610327366004611ebb565b610721565b34801561033857600080fd5b50610280610347366004611ebb565b610733565b34801561035857600080fd5b50610280610367366004611f49565b610851565b34801561037857600080fd5b50610211610acd565b34801561038d57600080fd5b5061028061039c366004611edc565b610adc565b610280610c04565b3480156103b557600080fd5b506101c66103c4366004611ebb565b610d23565b3480156103d557600080fd5b506102806103e4366004611ebb565b610d35565b3480156103f557600080fd5b50610280610f51565b34801561040a57600080fd5b50610280610419366004611f0e565b61129d565b34801561042a57600080fd5b50610211611441565b34801561043f57600080fd5b5061028061044e366004611ebb565b611450565b610280610461366004611edc565b611526565b610280610474366004611ebb565b6116eb565b34801561048557600080fd5b50610211611b3b565b600d5481565b600a6020526000908152604090205481565b6003546001600160a01b031681565b600b5481565b60056020526000908152604090205460ff1681565b6001546001600160a01b031633146105035760405162461bcd60e51b81526004016104fa9061229b565b60405180910390fd5b6001600160a01b0381166105295760405162461bcd60e51b81526004016104fa90612071565b6001600160a01b03811660009081526007602052604090205460ff166105615760405162461bcd60e51b81526004016104fa906120a8565b6001600160a01b038116600081815260076020526040808220805460ff191690555130917f2f467772ef0a5478314f3bc2b37d4b2ad29b65f052b2cedc8e2972dda033529291a350565b60076020526000908152604090205460ff1681565b600c5481565b6001546001600160a01b031633146105f05760405162461bcd60e51b81526004016104fa9061229b565b600260005414156106135760405162461bcd60e51b81526004016104fa90612468565b6002600055600e54604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e90610649903090869060040161200f565b60206040518083038186803b15801561066157600080fd5b505afa158015610675573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106999190611faa565b10156106e8576106ac8282600e54611b4a565b6040516001600160a01b03808316919084169030907f43121c61393a372aa50e4d3b0ec4003cce2d54e92ae7799836389597d5ead98d90600090a45b50506001600055565b6006818154811061070157600080fd5b6000918252602090912001546001600160a01b0316905081565b61dead81565b60096020526000908152604090205481565b6001546001600160a01b0316331461075d5760405162461bcd60e51b81526004016104fa9061229b565b6001600160a01b03811660009081526005602052604090205460ff16156107965760405162461bcd60e51b81526004016104fa9061222d565b6001600160a01b038082166000818152600560205260408120805460ff191660019081179091556006805491820181559091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01805473ffffffffffffffffffffffffffffffffffffffff19169091179055600254610818918391166105c6565b6040516001600160a01b0382169030907fc2def0bb3cfcff0462d9a69faa99e2ddeb1bf6b642d12a1fe3ed6653944fecd590600090a350565b600260005414156108745760405162461bcd60e51b81526004016104fa90612468565b600260009081556001600160a01b038316815260056020526040902054829060ff166108b25760405162461bcd60e51b81526004016104fa90612162565b3360009081526007602052604090205460ff166108e15760405162461bcd60e51b81526004016104fa906123d4565b6040516370a0823160e01b815282906001600160a01b038516906370a082319061090f903390600401611ffb565b60206040518083038186803b15801561092757600080fd5b505afa15801561093b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095f9190611faa565b101561097d5760405162461bcd60e51b81526004016104fa90612264565b61098983333085611c37565b600061271061099a846103e86124e0565b6109a491906124c0565b905060006127106109b785611b586124e0565b6109c191906124c0565b6001600160a01b0386166000908152600860205260409020549091506109e89083906124a8565b6001600160a01b038616600090815260086020908152604080832093909355600990522054610a189082906124a8565b6001600160a01b03861660009081526009602052604090205580610a3c83866124ff565b610a4691906124ff565b6001600160a01b0386166000908152600a6020526040902054610a6991906124a8565b6001600160a01b0386166000908152600a602052604090819020919091555133907f411101aad886ab4351e7c392d06f013b37a7c6c00b7f964bca364da03df0e7d590610ab9908890889061204d565b60405180910390a250506001600055505050565b6001546001600160a01b031681565b6001546001600160a01b03163314610b065760405162461bcd60e51b81526004016104fa9061229b565b60026000541415610b295760405162461bcd60e51b81526004016104fa90612468565b60026000908155604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e90610b5e903090869060040161200f565b60206040518083038186803b158015610b7657600080fd5b505afa158015610b8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bae9190611faa565b11156106e857610bc082826000611b4a565b6040516001600160a01b03808316919084169030907fefc983aa790fe837a31d17855afa75e3d276afef0959edcd4edd1a5e09905ee590600090a450506001600055565b60026000541415610c275760405162461bcd60e51b81526004016104fa90612468565b600260009081553381526007602052604090205460ff16610c5a5760405162461bcd60e51b81526004016104fa906123d4565b346000612710610c6c836103e86124e0565b610c7691906124c0565b90506000612710610c8984611b586124e0565b610c9391906124c0565b905081600b54610ca391906124a8565b600b55600c54610cb49082906124a8565b600c5580610cc283856124ff565b610ccc91906124ff565b600d54610cd991906124a8565b600d5560405133907f411101aad886ab4351e7c392d06f013b37a7c6c00b7f964bca364da03df0e7d590610d1190600090879061204d565b60405180910390a25050600160005550565b60086020526000908152604090205481565b6001546001600160a01b03163314610d5f5760405162461bcd60e51b81526004016104fa9061229b565b6001600160a01b03811660009081526005602052604090205460ff16610d975760405162461bcd60e51b81526004016104fa90612340565b6001600160a01b0381166000908152600560205260408120805460ff19169055600680549190610dc86001846124ff565b81548110610de657634e487b7160e01b600052603260045260246000fd5b60009182526020822001546001600160a01b031691505b82811015610f145760068181548110610e2657634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0385811691161415610f02578160068281548110610e6757634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506006805480610eb457634e487b7160e01b600052603160045260246000fd5b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff19169055019055600254610efa9085906001600160a01b0316610adc565b505050610f4e565b80610f0c81612516565b915050610dfd565b506040516001600160a01b0384169030907f39198a02f988846be034bb915c4f3e43a226a15d6f29cf21918e838b1a5f878490600090a350505b50565b6001546001600160a01b03163314610f7b5760405162461bcd60e51b81526004016104fa9061229b565b600d546000901561103f57600254600d54610f9f916001600160a01b031690611d27565b600254600354600d546040516393badc4160e01b81526001600160a01b03938416936393badc4193610fdb936000939290911691600401612029565b602060405180830381600087803b158015610ff557600080fd5b505af1158015611009573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102d9190611faa565b61103790826124a8565b6000600d5590505b60005b60065481101561123e576000600a60006006848154811061107357634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b03168352820192909252604001902054111561122c57600254600680546000926001600160a01b0316916393badc4191859081106110d657634e487b7160e01b600052603260045260246000fd5b6000918252602082200154600354600680546001600160a01b03938416949290931692600a9291908990811061111c57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b0316835282019290925260409081019091205490517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815261117e93929190600401612029565b602060405180830381600087803b15801561119857600080fd5b505af11580156111ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d09190611faa565b90506111dc81846124a8565b92506000600a60006006858154811061120557634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b03168352820192909252604001902055505b8061123681612516565b915050611042565b50801561125e5760035461125e906001600160a01b031661dead83611db9565b604051309033907f94032d93ea01eeeccc1b1f03a7eddaf352c7cd85e246c6fc01afed0ddf6b5c1d9061129290859061249f565b60405180910390a350565b6001546001600160a01b031633146112c75760405162461bcd60e51b81526004016104fa9061229b565b6001600160a01b0382166112ed5760405162461bcd60e51b81526004016104fa90612071565b6000811161130d5760405162461bcd60e51b81526004016104fa906122d2565b6001600160a01b03831661134a578047101561133b5760405162461bcd60e51b81526004016104fa90612309565b6113458282611d27565b6113f1565b6040516370a0823160e01b815281906001600160a01b038516906370a0823190611378903090600401611ffb565b60206040518083038186803b15801561139057600080fd5b505afa1580156113a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c89190611faa565b10156113e65760405162461bcd60e51b81526004016104fa90612309565b6113f1838383611db9565b816001600160a01b0316836001600160a01b03167f8d18a25569e967883ac0402e6991b4ac87616370a1c2ce59726abce4ef45bdb883604051611434919061249f565b60405180910390a3505050565b6002546001600160a01b031681565b6001546001600160a01b0316331461147a5760405162461bcd60e51b81526004016104fa9061229b565b6001600160a01b0381166114a05760405162461bcd60e51b81526004016104fa90612071565b6001600160a01b03811660009081526007602052604090205460ff16156114d95760405162461bcd60e51b81526004016104fa906121f6565b6001600160a01b038116600081815260076020526040808220805460ff191660011790555130917f8cd7b0b1a7316eb3e5d781d629cb8bf4e2fd9a8903bdd0f6b894c087d61b21f291a350565b6001546001600160a01b031633146115505760405162461bcd60e51b81526004016104fa9061229b565b600260005414156115735760405162461bcd60e51b81526004016104fa90612468565b60026000556001600160a01b03811661159e5760405162461bcd60e51b81526004016104fa90612071565b6001600160a01b0382161580156115b757506000600c54115b15611622576115c881600c54611d27565b6000600c81905550816001600160a01b0316816001600160a01b03167f370cbb08cddf346c35e924a503aa223dcc1b75a993d7c23a602d2e4bc0802c10600c54604051611615919061249f565b60405180910390a36106e8565b6001600160a01b03821660009081526005602052604090205460ff16801561166157506001600160a01b03821660009081526009602052604090205415155b156106e8576001600160a01b03821660009081526009602052604090205461168c9083908390611db9565b6001600160a01b038083166000818152600960205260408082208290555191928416917f370cbb08cddf346c35e924a503aa223dcc1b75a993d7c23a602d2e4bc0802c10916116da9161249f565b60405180910390a350506001600055565b6001546001600160a01b031633146117155760405162461bcd60e51b81526004016104fa9061229b565b600260005414156117385760405162461bcd60e51b81526004016104fa90612468565b60026000556001600160a01b0381166117635760405162461bcd60e51b81526004016104fa90612071565b600b546000901561182c57600254600b54611787916001600160a01b031690611d27565b60025460048054600b546040516393badc4160e01b81526000946001600160a01b03908116946393badc41946117c594889491909316929101612029565b602060405180830381600087803b1580156117df57600080fd5b505af11580156117f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118179190611faa565b905061182381836124a8565b6000600b559150505b60005b600654811015611ad3576000600860006006848154811061186057634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040019020541115611ac157600454600680546001600160a01b0390921691839081106118bc57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031614156119325760086000600683815481106118fc57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b0316835282019290925260400190205461192b90836124a8565b9150611a74565b600254600680546000926001600160a01b0316916393badc41918590811061196a57634e487b7160e01b600052603260045260246000fd5b6000918252602082200154600454600680546001600160a01b039384169492909316926008929190899081106119b057634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b0316835282019290925260409081019091205490517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152611a1293929190600401612029565b602060405180830381600087803b158015611a2c57600080fd5b505af1158015611a40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a649190611faa565b9050611a7081846124a8565b9250505b60006008600060068481548110611a9b57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040019020555b80611acb81612516565b91505061182f565b5080156106e857600454611af1906001600160a01b03168383611db9565b816001600160a01b03167f9a380c5d696c8e394928ff8981a11ee388a14e2f7e16d373d73486cf3c48625482604051611b2a919061249f565b60405180910390a250506001600055565b6004546001600160a01b031681565b600080846001600160a01b031663095ea7b38585604051602401611b6f92919061204d565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051611ba89190611fc2565b6000604051808303816000865af19150503d8060008114611be5576040519150601f19603f3d011682016040523d82523d6000602084013e611bea565b606091505b5091509150818015611c14575080511580611c14575080806020019051810190611c149190611f72565b611c305760405162461bcd60e51b81526004016104fa90612377565b5050505050565b600080856001600160a01b03166323b872dd868686604051602401611c5e93929190612029565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051611c979190611fc2565b6000604051808303816000865af19150503d8060008114611cd4576040519150601f19603f3d011682016040523d82523d6000602084013e611cd9565b606091505b5091509150818015611d03575080511580611d03575080806020019051810190611d039190611f72565b611d1f5760405162461bcd60e51b81526004016104fa90612105565b505050505050565b604080516000808252602082019092526001600160a01b038416908390604051611d519190611fc2565b60006040518083038185875af1925050503d8060008114611d8e576040519150601f19603f3d011682016040523d82523d6000602084013e611d93565b606091505b5050905080611db45760405162461bcd60e51b81526004016104fa90612199565b505050565b600080846001600160a01b031663a9059cbb8585604051602401611dde92919061204d565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051611e179190611fc2565b6000604051808303816000865af19150503d8060008114611e54576040519150601f19603f3d011682016040523d82523d6000602084013e611e59565b606091505b5091509150818015611e83575080511580611e83575080806020019051810190611e839190611f72565b611c305760405162461bcd60e51b81526004016104fa9061240b565b80356001600160a01b0381168114611eb657600080fd5b919050565b600060208284031215611ecc578081fd5b611ed582611e9f565b9392505050565b60008060408385031215611eee578081fd5b611ef783611e9f565b9150611f0560208401611e9f565b90509250929050565b600080600060608486031215611f22578081fd5b611f2b84611e9f565b9250611f3960208501611e9f565b9150604084013590509250925092565b60008060408385031215611f5b578182fd5b611f6483611e9f565b946020939093013593505050565b600060208284031215611f83578081fd5b81518015158114611ed5578182fd5b600060208284031215611fa3578081fd5b5035919050565b600060208284031215611fbb578081fd5b5051919050565b60008251815b81811015611fe25760208186018101518583015201611fc8565b81811115611ff05782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526013908201527f556e6f52653a207a65726f206164647265737300000000000000000000000000604082015260600190565b6020808252602c908201527f556e6f52653a207768697465206c6973742072656d6f766564206f7220756e6160408201527f6464656420616c72656164790000000000000000000000000000000000000000606082015260800190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b6020808252601b908201527f556e6f52653a206e6f7420616c6c6f7765642063757272656e63790000000000604082015260600190565b60208082526034908201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60408201527f20455448207472616e73666572206661696c6564000000000000000000000000606082015260800190565b60208082526019908201527f556e6f52653a207768697465206c69737420616c726561647900000000000000604082015260600190565b60208082526011908201527f416c726561647920617661696c61626c65000000000000000000000000000000604082015260600190565b6020808252601f908201527f556e6f52653a207072656d69756d2062616c616e6365206f766572666c6f7700604082015260600190565b6020808252601c908201527f556e6f52653a205072656d69756d506f6f6c20466f7262696464656e00000000604082015260600190565b60208082526012908201527f556e6f52653a207a65726f20616d6f756e740000000000000000000000000000604082015260600190565b6020808252601b908201527f556e6f52653a20496e73756666696369656e74205072656d69756d0000000000604082015260600190565b60208082526011908201527f4e6f7420617661696c61626c6520796574000000000000000000000000000000604082015260600190565b6020808252602b908201527f5472616e7366657248656c7065723a3a73616665417070726f76653a2061707060408201527f726f7665206661696c6564000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f556e6f52653a206e6f74207768697465206c6973742061646472657373000000604082015260600190565b6020808252602d908201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260408201527f616e73666572206661696c656400000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b90815260200190565b600082198211156124bb576124bb612531565b500190565b6000826124db57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156124fa576124fa612531565b500290565b60008282101561251157612511612531565b500390565b600060001982141561252a5761252a612531565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220eb11d61d5dc08c31fd686bfcf1d263e661733e04b51df2115b9a222c61b0f28364736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 114,
        "contract": "contracts/PremiumPool.sol:PremiumPool",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 4888,
        "contract": "contracts/PremiumPool.sol:PremiumPool",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 4890,
        "contract": "contracts/PremiumPool.sol:PremiumPool",
        "label": "exchangeAgent",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 4892,
        "contract": "contracts/PremiumPool.sol:PremiumPool",
        "label": "UNO_TOKEN",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 4894,
        "contract": "contracts/PremiumPool.sol:PremiumPool",
        "label": "USDC_TOKEN",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 4898,
        "contract": "contracts/PremiumPool.sol:PremiumPool",
        "label": "availableCurrencies",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4901,
        "contract": "contracts/PremiumPool.sol:PremiumPool",
        "label": "availableCurrencyList",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 4905,
        "contract": "contracts/PremiumPool.sol:PremiumPool",
        "label": "whiteList",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4912,
        "contract": "contracts/PremiumPool.sol:PremiumPool",
        "label": "SSRP_PREMIUM",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4916,
        "contract": "contracts/PremiumPool.sol:PremiumPool",
        "label": "SSIP_PREMIUM",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4920,
        "contract": "contracts/PremiumPool.sol:PremiumPool",
        "label": "BACK_BURN_UNO_PREMIUM",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4922,
        "contract": "contracts/PremiumPool.sol:PremiumPool",
        "label": "SSRP_PREMIUM_ETH",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 4924,
        "contract": "contracts/PremiumPool.sol:PremiumPool",
        "label": "SSIP_PREMIUM_ETH",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 4926,
        "contract": "contracts/PremiumPool.sol:PremiumPool",
        "label": "BACK_BURN_PREMIUM_ETH",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 4933,
        "contract": "contracts/PremiumPool.sol:PremiumPool",
        "label": "MAX_INTEGER",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}