{
  "address": "0xcf98D8AE6EF3eeff4826162571190cD9802dCf2D",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_usdcToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_twapOraclePriceFeedFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_multiSigWallet",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_dexAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_convertToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_convertAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_convertedAmount",
          "type": "uint256"
        }
      ],
      "name": "ConvertedTokenToETH",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_dexAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_convertToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_convertedToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_convertAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_convertedAmount",
          "type": "uint256"
        }
      ],
      "name": "ConvertedTokenToToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_whiteListAddress",
          "type": "address"
        }
      ],
      "name": "LogAddWhiteList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_whiteListAddress",
          "type": "address"
        }
      ],
      "name": "LogRemoveWhiteList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_slippage",
          "type": "uint256"
        }
      ],
      "name": "LogSetSlippage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "TWAP_ORACLE_PRICE_FEED_FACTORY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNISWAP_FACTORY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNISWAP_ROUTER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC_TOKEN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_whiteListAddress",
          "type": "address"
        }
      ],
      "name": "addWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_convertAmount",
          "type": "uint256"
        }
      ],
      "name": "convertForETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_token0Amount",
          "type": "uint256"
        }
      ],
      "name": "convertForToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "getETHAmountForToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_usdtAmount",
          "type": "uint256"
        }
      ],
      "name": "getETHAmountForUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_token0Amount",
          "type": "uint256"
        }
      ],
      "name": "getNeededTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_usdtAmount",
          "type": "uint256"
        }
      ],
      "name": "getTokenAmountForUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_whiteListAddress",
          "type": "address"
        }
      ],
      "name": "removeWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_slippage",
          "type": "uint256"
        }
      ],
      "name": "setSlippage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slippage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x4e3d586fa1875e99d5372dc429168e3e81c06f0710e8c63887c58cf633756477",
  "receipt": {
    "to": null,
    "from": "0x5569BDF4e02cec3fE459796e3d0e741616029fA4",
    "contractAddress": "0xcf98D8AE6EF3eeff4826162571190cD9802dCf2D",
    "transactionIndex": 2,
    "gasUsed": "1868921",
    "logsBloom": "0x
    "blockHash": "0x31325a3e8859b33c1ee59fd9b18972b8c1ac5aadf7ecb8e1759258bb3d980636",
    "transactionHash": "0x4e3d586fa1875e99d5372dc429168e3e81c06f0710e8c63887c58cf633756477",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 10028817,
        "transactionHash": "0x4e3d586fa1875e99d5372dc429168e3e81c06f0710e8c63887c58cf633756477",
        "address": "0xcf98D8AE6EF3eeff4826162571190cD9802dCf2D",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005569bdf4e02cec3fe459796e3d0e741616029fa4"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0x31325a3e8859b33c1ee59fd9b18972b8c1ac5aadf7ecb8e1759258bb3d980636"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 10028817,
        "transactionHash": "0x4e3d586fa1875e99d5372dc429168e3e81c06f0710e8c63887c58cf633756477",
        "address": "0xcf98D8AE6EF3eeff4826162571190cD9802dCf2D",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000005569bdf4e02cec3fe459796e3d0e741616029fa4",
          "0x000000000000000000000000fadd5ddd92fa216c08c096958efec97179f6fc58"
        ],
        "data": "0x",
        "logIndex": 4,
        "blockHash": "0x31325a3e8859b33c1ee59fd9b18972b8c1ac5aadf7ecb8e1759258bb3d980636"
      }
    ],
    "blockNumber": 10028817,
    "cumulativeGasUsed": "4877199",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x40c035016AD732b6cFce34c3F881040B6C6cf71E",
    "0xc778417e063141139fce010982780140aa0cd5ab",
    "0x6fa8a7E5c13E4094fD4Fa288ba59544791E4c9d3",
    "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",
    "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
    "0xfadD5ddd92fa216C08C096958Efec97179F6fC58"
  ],
  "solcInputHash": "9c34ee606f87ff608005a3853a8c7b58",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdcToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_twapOraclePriceFeedFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_multiSigWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_dexAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_convertToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_convertAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_convertedAmount\",\"type\":\"uint256\"}],\"name\":\"ConvertedTokenToETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_dexAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_convertToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_convertedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_convertAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_convertedAmount\",\"type\":\"uint256\"}],\"name\":\"ConvertedTokenToToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_whiteListAddress\",\"type\":\"address\"}],\"name\":\"LogAddWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_whiteListAddress\",\"type\":\"address\"}],\"name\":\"LogRemoveWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_slippage\",\"type\":\"uint256\"}],\"name\":\"LogSetSlippage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TWAP_ORACLE_PRICE_FEED_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNISWAP_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNISWAP_ROUTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_whiteListAddress\",\"type\":\"address\"}],\"name\":\"addWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_convertAmount\",\"type\":\"uint256\"}],\"name\":\"convertForETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_token0Amount\",\"type\":\"uint256\"}],\"name\":\"convertForToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"getETHAmountForToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_usdtAmount\",\"type\":\"uint256\"}],\"name\":\"getETHAmountForUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_token0Amount\",\"type\":\"uint256\"}],\"name\":\"getNeededTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_usdtAmount\",\"type\":\"uint256\"}],\"name\":\"getTokenAmountForUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_whiteListAddress\",\"type\":\"address\"}],\"name\":\"removeWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slippage\",\"type\":\"uint256\"}],\"name\":\"setSlippage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ExchangeAgent.sol\":\"ExchangeAgent\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/ExchangeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/IUniswapFactory.sol\\\";\\nimport \\\"./interfaces/IUniswapRouter02.sol\\\";\\nimport \\\"./interfaces/ITwapOraclePriceFeedFactory.sol\\\";\\nimport \\\"./interfaces/ITwapOraclePriceFeed.sol\\\";\\nimport \\\"./interfaces/IExchangeAgent.sol\\\";\\nimport \\\"./libraries/TransferHelper.sol\\\";\\n\\ncontract ExchangeAgent is IExchangeAgent, ReentrancyGuard, Ownable {\\n    address public immutable override USDC_TOKEN;\\n    address public immutable UNISWAP_FACTORY;\\n    address public immutable TWAP_ORACLE_PRICE_FEED_FACTORY;\\n    address public immutable UNISWAP_ROUTER;\\n    address public immutable WETH;\\n    uint256 public slippage;\\n    uint256 private constant SLIPPAGE_PRECISION = 100;\\n\\n    mapping(address => bool) public whiteList;\\n\\n    event ConvertedTokenToToken(\\n        address indexed _dexAddress,\\n        address indexed _convertToken,\\n        address indexed _convertedToken,\\n        uint256 _convertAmount,\\n        uint256 _desiredAmount,\\n        uint256 _convertedAmount\\n    );\\n\\n    event ConvertedTokenToETH(\\n        address indexed _dexAddress,\\n        address indexed _convertToken,\\n        uint256 _convertAmount,\\n        uint256 _desiredAmount,\\n        uint256 _convertedAmount\\n    );\\n\\n    event LogAddWhiteList(address indexed _exchangeAgent, address indexed _whiteListAddress);\\n    event LogRemoveWhiteList(address indexed _exchangeAgent, address indexed _whiteListAddress);\\n    event LogSetSlippage(address indexed _exchangeAgent, uint256 _slippage);\\n\\n    constructor(\\n        address _usdcToken,\\n        address _WETH,\\n        address _twapOraclePriceFeedFactory,\\n        address _uniswapRouter,\\n        address _uniswapFactory,\\n        address _multiSigWallet\\n    ) {\\n        require(_usdcToken != address(0), \\\"UnoRe: zero USDC address\\\");\\n        require(_twapOraclePriceFeedFactory != address(0), \\\"UnoRe: zero twapOraclePriceFeedFactory address\\\");\\n        require(_uniswapRouter != address(0), \\\"UnoRe: zero uniswapRouter address\\\");\\n        require(_uniswapFactory != address(0), \\\"UnoRe: zero uniswapFactory address\\\");\\n        require(_WETH != address(0), \\\"UnoRe: zero WETH address\\\");\\n        require(_multiSigWallet != address(0), \\\"UnoRe: zero multisigwallet address\\\");\\n        USDC_TOKEN = _usdcToken;\\n        UNISWAP_FACTORY = _uniswapFactory;\\n        TWAP_ORACLE_PRICE_FEED_FACTORY = _twapOraclePriceFeedFactory;\\n        UNISWAP_ROUTER = _uniswapRouter;\\n        WETH = _WETH;\\n        whiteList[msg.sender] = true;\\n        slippage = 5 * SLIPPAGE_PRECISION;\\n        transferOwnership(_multiSigWallet);\\n    }\\n\\n    modifier onlyWhiteList() {\\n        require(whiteList[msg.sender], \\\"UnoRe: ExchangeAgent Forbidden\\\");\\n        _;\\n    }\\n\\n    receive() external payable {}\\n\\n    function addWhiteList(address _whiteListAddress) external onlyOwner {\\n        require(_whiteListAddress != address(0), \\\"UnoRe: zero address\\\");\\n        require(!whiteList[_whiteListAddress], \\\"UnoRe: white list already\\\");\\n        whiteList[_whiteListAddress] = true;\\n        emit LogAddWhiteList(address(this), _whiteListAddress);\\n    }\\n\\n    function removeWhiteList(address _whiteListAddress) external onlyOwner {\\n        require(_whiteListAddress != address(0), \\\"UnoRe: zero address\\\");\\n        require(whiteList[_whiteListAddress], \\\"UnoRe: white list removed or unadded already\\\");\\n        whiteList[_whiteListAddress] = false;\\n        emit LogRemoveWhiteList(address(this), _whiteListAddress);\\n    }\\n\\n    function setSlippage(uint256 _slippage) external onlyOwner {\\n        require(_slippage > 0, \\\"UnoRe: zero slippage\\\");\\n        require(_slippage < 100, \\\"UnoRe: 100% slippage overflow\\\");\\n        slippage = _slippage * SLIPPAGE_PRECISION;\\n        emit LogSetSlippage(address(this), _slippage);\\n    }\\n\\n    // estimate token amount for amount in USDC\\n    function getTokenAmountForUSDC(address _token, uint256 _usdtAmount) external view override returns (uint256) {\\n        return _getNeededTokenAmount(USDC_TOKEN, _token, _usdtAmount);\\n    }\\n\\n    // estimate ETH amount for amount in USDC\\n    function getETHAmountForUSDC(uint256 _usdtAmount) external view override returns (uint256) {\\n        return _getNeededTokenAmount(USDC_TOKEN, WETH, _usdtAmount);\\n    }\\n\\n    function getETHAmountForToken(address _token, uint256 _tokenAmount) external view override returns (uint256) {\\n        return _getNeededTokenAmount(_token, WETH, _tokenAmount);\\n    }\\n\\n    function getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external view override returns (uint256) {\\n        return _getNeededTokenAmount(_token0, _token1, _token0Amount);\\n    }\\n\\n    function convertForToken(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external override onlyWhiteList nonReentrant returns (uint256) {\\n        uint256 twapPrice = 0;\\n        if (_token0 != address(0)) {\\n            require(IERC20(_token0).balanceOf(msg.sender) > 0, \\\"UnoRe: zero balance\\\");\\n            TransferHelper.safeTransferFrom(_token0, msg.sender, address(this), _token0Amount);\\n            twapPrice = _getNeededTokenAmount(_token0, _token1, _token0Amount);\\n        } else {\\n            twapPrice = _getNeededTokenAmount(WETH, _token1, _token0Amount);\\n        }\\n        require(twapPrice > 0, \\\"UnoRe: no pairs\\\");\\n        uint256 desiredAmount = (twapPrice * (100 * SLIPPAGE_PRECISION - slippage)) / 100 / SLIPPAGE_PRECISION;\\n\\n        uint256 convertedAmount = _convertTokenForToken(UNISWAP_ROUTER, _token0, _token1, _token0Amount, desiredAmount);\\n        return convertedAmount;\\n    }\\n\\n    function convertForETH(address _token, uint256 _convertAmount)\\n        external\\n        override\\n        onlyWhiteList\\n        nonReentrant\\n        returns (uint256)\\n    {\\n        require(IERC20(_token).balanceOf(msg.sender) > 0, \\\"UnoRe: zero balance\\\");\\n        if (_token != address(0)) {\\n            TransferHelper.safeTransferFrom(_token, msg.sender, address(this), _convertAmount);\\n        }\\n        uint256 twapPriceInUSDC = _getNeededTokenAmount(_token, WETH, _convertAmount);\\n        require(twapPriceInUSDC > 0, \\\"UnoRe: no pairs\\\");\\n        uint256 desiredAmount = (twapPriceInUSDC * (100 * SLIPPAGE_PRECISION - slippage)) / 100 / SLIPPAGE_PRECISION;\\n\\n        uint256 convertedAmount = _convertTokenForETH(UNISWAP_ROUTER, _token, _convertAmount, desiredAmount);\\n        return convertedAmount;\\n    }\\n\\n    function _convertTokenForToken(\\n        address _dexAddress,\\n        address _token0,\\n        address _token1,\\n        uint256 _convertAmount,\\n        uint256 _desiredAmount\\n    ) private returns (uint256) {\\n        IUniswapRouter02 _dexRouter = IUniswapRouter02(_dexAddress);\\n        address _factory = _dexRouter.factory();\\n        uint256 usdtBalanceBeforeSwap = IERC20(_token1).balanceOf(msg.sender);\\n        address inpToken = _dexRouter.WETH();\\n        if (_token0 != address(0)) {\\n            inpToken = _token0;\\n            TransferHelper.safeApprove(_token0, address(_dexRouter), _convertAmount);\\n        }\\n        if (IUniswapFactory(_factory).getPair(inpToken, _token1) != address(0)) {\\n            address[] memory path = new address[](2);\\n            path[0] = inpToken;\\n            path[1] = _token1;\\n            if (_token0 == address(0)) {\\n                _dexRouter.swapExactETHForTokensSupportingFeeOnTransferTokens{value: _convertAmount}(\\n                    _desiredAmount,\\n                    path,\\n                    msg.sender,\\n                    block.timestamp\\n                );\\n            } else {\\n                _dexRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n                    _convertAmount,\\n                    _desiredAmount,\\n                    path,\\n                    msg.sender,\\n                    block.timestamp\\n                );\\n            }\\n        }\\n        uint256 usdtBalanceAfterSwap = IERC20(_token1).balanceOf(msg.sender);\\n        emit ConvertedTokenToToken(\\n            _dexAddress,\\n            _token0,\\n            _token1,\\n            _convertAmount,\\n            _desiredAmount,\\n            usdtBalanceAfterSwap - usdtBalanceBeforeSwap\\n        );\\n        return usdtBalanceAfterSwap - usdtBalanceBeforeSwap;\\n    }\\n\\n    function _convertTokenForETH(\\n        address _dexAddress,\\n        address _token,\\n        uint256 _convertAmount,\\n        uint256 _desiredAmount\\n    ) private returns (uint256) {\\n        IUniswapRouter02 _dexRouter = IUniswapRouter02(_dexAddress);\\n        address _factory = _dexRouter.factory();\\n        uint256 ethBalanceBeforeSwap = address(msg.sender).balance;\\n        TransferHelper.safeApprove(_token, address(_dexRouter), _convertAmount);\\n        if (IUniswapFactory(_factory).getPair(_token, WETH) != address(0)) {\\n            address[] memory path = new address[](2);\\n            path[0] = _token;\\n            path[1] = WETH;\\n            _dexRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(\\n                _convertAmount,\\n                _desiredAmount,\\n                path,\\n                msg.sender,\\n                block.timestamp\\n            );\\n        }\\n        uint256 ethBalanceAfterSwap = address(msg.sender).balance;\\n        emit ConvertedTokenToETH(_dexAddress, _token, _convertAmount, _desiredAmount, ethBalanceAfterSwap - ethBalanceBeforeSwap);\\n        return ethBalanceAfterSwap - ethBalanceBeforeSwap;\\n    }\\n\\n    /**\\n     * @dev Get expected _token1 amount for _inputAmount of _token0\\n     * _desiredAmount should consider decimals based on _token1\\n     */\\n    function _getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) private view returns (uint256) {\\n        address pair = IUniswapFactory(UNISWAP_FACTORY).getPair(_token0, _token1);\\n        require(pair != address(0), \\\"There's no pair\\\");\\n\\n        address twapOraclePriceFeed = ITwapOraclePriceFeedFactory(TWAP_ORACLE_PRICE_FEED_FACTORY).getTwapOraclePriceFeed(\\n            _token0,\\n            _token1\\n        );\\n\\n        uint256 expectedToken1Amount = ITwapOraclePriceFeed(twapOraclePriceFeed).consult(_token0, _token0Amount);\\n\\n        return expectedToken1Amount;\\n    }\\n}\\n\",\"keccak256\":\"0x1f82845d73ea9d0624fa2bfde113b36cc1e9fe3ed49dc3c7f0028d34366f4e17\",\"license\":\"MIT\"},\"contracts/interfaces/IExchangeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\ninterface IExchangeAgent {\\n    function USDC_TOKEN() external view returns (address);\\n\\n    function getTokenAmountForUSDC(address _token, uint256 _usdtAmount) external view returns (uint256);\\n\\n    function getETHAmountForUSDC(uint256 _usdtAmount) external view returns (uint256);\\n\\n    function getETHAmountForToken(address _token, uint256 _tokenAmount) external view returns (uint256);\\n\\n    function getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external view returns (uint256);\\n\\n    function convertForToken(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external returns (uint256);\\n\\n    function convertForETH(address _token, uint256 _convertAmount) external returns (uint256);\\n}\\n\",\"keccak256\":\"0xac695d6d1b861eb9f84ac2009f97fd5b00d44500b6735fb9256f1c227323e07e\",\"license\":\"MIT\"},\"contracts/interfaces/ITwapOraclePriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface ITwapOraclePriceFeed {\\n    function update() external;\\n\\n    function consult(address token, uint256 amountIn) external view returns (uint256 amountOut);\\n}\\n\",\"keccak256\":\"0x93c07be9b8250abbe953aa68574a82e0e58e4a6330e190785d8a95e0762a8752\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ITwapOraclePriceFeedFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface ITwapOraclePriceFeedFactory {\\n    function twapOraclePriceFeedList(address _pair) external view returns (address);\\n\\n    function getTwapOraclePriceFeed(address _token0, address _token1) external view returns (address twapOraclePriceFeed);\\n}\\n\",\"keccak256\":\"0xa476375c4fb24d5ee56dfdd8a9059530e2678be1d5a0070c129919c9e9932898\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IUniswapFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface IUniswapFactory {\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint256);\\n\\n    function feeTo() external view returns (address);\\n\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n\\n    function allPairs(uint256) external view returns (address pair);\\n\\n    function allPairsLength() external view returns (uint256);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n\\n    function setFeeToSetter(address) external;\\n}\\n\",\"keccak256\":\"0xcc6c828391ba6e5ab0d338b965395129121abe68729901a2ffe861517ec3358a\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IUniswapRouter01.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\ninterface IUniswapRouter01 {\\n    function factory() external pure returns (address);\\n\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        returns (\\n            uint256 amountA,\\n            uint256 amountB,\\n            uint256 liquidity\\n        );\\n\\n    function addLiquidityETH(\\n        address token,\\n        uint256 amountTokenDesired,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        payable\\n        returns (\\n            uint256 amountToken,\\n            uint256 amountETH,\\n            uint256 liquidity\\n        );\\n\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETH(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactTokens(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactETH(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapETHForExactTokens(\\n        uint256 amountOut,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function quote(\\n        uint256 amountA,\\n        uint256 reserveA,\\n        uint256 reserveB\\n    ) external pure returns (uint256 amountB);\\n\\n    function getAmountOut(\\n        uint256 amountIn,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountOut);\\n\\n    function getAmountIn(\\n        uint256 amountOut,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountIn);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\\n\\n    function getAmountsIn(uint256 amountOut, address[] calldata path) external view returns (uint256[] memory amounts);\\n}\\n\",\"keccak256\":\"0xc6dcd143a19e9a62147f13fb8e1c874fd453a92f6d83ed4905d4d58f8e633295\",\"license\":\"MIT\"},\"contracts/interfaces/IUniswapRouter02.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\nimport \\\"./IUniswapRouter01.sol\\\";\\n\\ninterface IUniswapRouter02 is IUniswapRouter01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountETH);\\n\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable;\\n\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0xa8193608666a8dd9b79a340671f633de919ecdd28c64aefa11e29cccb7ec9978\",\"license\":\"MIT\"},\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.0;\\n\\n// from Uniswap TransferHelper library\\nlibrary TransferHelper {\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeApprove: approve failed\\\");\\n    }\\n\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeTransfer: transfer failed\\\");\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::transferFrom: transferFrom failed\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"TransferHelper::safeTransferETH: ETH transfer failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xb7650ccd26cfa42968350d9c477f55f98059d74e0f173a1da45b06c2607e705d\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x6101206040523480156200001257600080fd5b50604051620024e9380380620024e98339810160408190526200003591620002c1565b60016000556200004e62000048620001c2565b620001c6565b6001600160a01b038616620000805760405162461bcd60e51b815260040162000077906200048f565b60405180910390fd5b6001600160a01b038416620000a95760405162461bcd60e51b81526004016200007790620003be565b6001600160a01b038316620000d25760405162461bcd60e51b815260040162000077906200040c565b6001600160a01b038216620000fb5760405162461bcd60e51b81526004016200007790620004fb565b6001600160a01b038516620001245760405162461bcd60e51b8152600401620000779062000341565b6001600160a01b0381166200014d5760405162461bcd60e51b815260040162000077906200044d565b6001600160601b0319606087811b821660805283811b821660a05285811b821660c05284811b821660e05286901b1661010052336000908152600360205260409020805460ff19166001179055620001a8606460056200053d565b600255620001b68162000218565b50505050505062000569565b3390565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b62000222620001c2565b6001600160a01b03166200023562000295565b6001600160a01b0316146200025e5760405162461bcd60e51b81526004016200007790620004c6565b6001600160a01b038116620002875760405162461bcd60e51b8152600401620000779062000378565b6200029281620001c6565b50565b6001546001600160a01b031690565b80516001600160a01b0381168114620002bc57600080fd5b919050565b60008060008060008060c08789031215620002da578182fd5b620002e587620002a4565b9550620002f560208801620002a4565b94506200030560408801620002a4565b93506200031560608801620002a4565b92506200032560808801620002a4565b91506200033560a08801620002a4565b90509295509295509295565b60208082526018908201527f556e6f52653a207a65726f205745544820616464726573730000000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252602e908201527f556e6f52653a207a65726f20747761704f7261636c655072696365466565644660408201526d6163746f7279206164647265737360901b606082015260800190565b60208082526021908201527f556e6f52653a207a65726f20756e6973776170526f75746572206164647265736040820152607360f81b606082015260800190565b60208082526022908201527f556e6f52653a207a65726f206d756c746973696777616c6c6574206164647265604082015261737360f01b606082015260800190565b60208082526018908201527f556e6f52653a207a65726f205553444320616464726573730000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526022908201527f556e6f52653a207a65726f20756e6973776170466163746f7279206164647265604082015261737360f01b606082015260800190565b60008160001904831182151516156200056457634e487b7160e01b81526011600452602481fd5b500290565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c611ed862000611600039600081816103960152818161050a015281816106da015281816108b6015281816109a80152818161150501526115f00152600081816107690152818161094301526109f00152600081816105910152610d3f0152600081816109cc0152610c610152600081816104e9015281816109800152610c3a0152611ed86000f3fe6080604052600436106101485760003560e01c806393badc41116100c0578063d826492011610074578063f0fa55a911610059578063f0fa55a914610339578063f2fde38b14610359578063fa569274146103795761014f565b8063d826492014610304578063e7cd4a04146103195761014f565b8063a9a12d43116100a5578063a9a12d43146102ba578063ad5c4648146102da578063c74c0fac146102ef5761014f565b806393badc411461027a5780639a5539681461029a5761014f565b80633e032a3b11610117578063715018a6116100fc578063715018a61461022e5780638da5cb5b1461024357806390600a31146102655761014f565b80633e032a3b146101f9578063531a22111461020e5761014f565b8063102e3259146101545780632042e5c21461018a57806334899be6146101ac578063372c12b1146101cc5761014f565b3661014f57005b600080fd5b34801561016057600080fd5b5061017461016f36600461188c565b61038e565b6040516101819190611d91565b60405180910390f35b34801561019657600080fd5b506101aa6101a5366004611814565b6103c2565b005b3480156101b857600080fd5b506101746101c736600461184c565b6104b2565b3480156101d857600080fd5b506101ec6101e7366004611814565b6104c7565b60405161018191906119ee565b34801561020557600080fd5b506101746104dc565b34801561021a57600080fd5b506101746102293660046118d7565b6104e2565b34801561023a57600080fd5b506101aa610535565b34801561024f57600080fd5b50610258610580565b6040516101819190611983565b34801561027157600080fd5b5061025861058f565b34801561028657600080fd5b5061017461029536600461184c565b6105b3565b3480156102a657600080fd5b506101746102b536600461188c565b6107a1565b3480156102c657600080fd5b506101746102d536600461188c565b610979565b3480156102e657600080fd5b506102586109a6565b3480156102fb57600080fd5b506102586109ca565b34801561031057600080fd5b506102586109ee565b34801561032557600080fd5b506101aa610334366004611814565b610a12565b34801561034557600080fd5b506101aa6103543660046118d7565b610afd565b34801561036557600080fd5b506101aa610374366004611814565b610bc7565b34801561038557600080fd5b50610258610c38565b60006103bb837f000000000000000000000000000000000000000000000000000000000000000084610c5c565b9392505050565b6103ca610e53565b6001600160a01b03166103db610580565b6001600160a01b03161461040a5760405162461bcd60e51b815260040161040190611c23565b60405180910390fd5b6001600160a01b0381166104305760405162461bcd60e51b815260040161040190611a8d565b6001600160a01b03811660009081526003602052604090205460ff166104685760405162461bcd60e51b815260040161040190611ac4565b6001600160a01b038116600081815260036020526040808220805460ff191690555130917f2f467772ef0a5478314f3bc2b37d4b2ad29b65f052b2cedc8e2972dda033529291a350565b60006104bf848484610c5c565b949350505050565b60036020526000908152604090205460ff1681565b60025481565b600061052f7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084610c5c565b92915050565b61053d610e53565b6001600160a01b031661054e610580565b6001600160a01b0316146105745760405162461bcd60e51b815260040161040190611c23565b61057e6000610e57565b565b6001546001600160a01b031690565b7f000000000000000000000000000000000000000000000000000000000000000081565b3360009081526003602052604081205460ff166105e25760405162461bcd60e51b815260040161040190611cb5565b600260005414156106055760405162461bcd60e51b815260040161040190611d5a565b600260009081556001600160a01b038516156106d5576040516370a0823160e01b81526000906001600160a01b038716906370a082319061064a903390600401611983565b60206040518083038186803b15801561066257600080fd5b505afa158015610676573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069a91906118ef565b116106b75760405162461bcd60e51b8152600401610401906119f9565b6106c385333086610ec1565b6106ce858585610c5c565b9050610703565b6107007f00000000000000000000000000000000000000000000000000000000000000008585610c5c565b90505b600081116107235760405162461bcd60e51b815260040161040190611d23565b60006064806002546064806107389190611e41565b6107429190611e60565b61074c9085611e41565b6107569190611e21565b6107609190611e21565b905060006107917f000000000000000000000000000000000000000000000000000000000000000088888886610fc6565b6001600055979650505050505050565b3360009081526003602052604081205460ff166107d05760405162461bcd60e51b815260040161040190611cb5565b600260005414156107f35760405162461bcd60e51b815260040161040190611d5a565b600260009081556040516370a0823160e01b81526001600160a01b038516906370a0823190610826903390600401611983565b60206040518083038186803b15801561083e57600080fd5b505afa158015610852573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087691906118ef565b116108935760405162461bcd60e51b8152600401610401906119f9565b6001600160a01b038316156108ae576108ae83333085610ec1565b60006108db847f000000000000000000000000000000000000000000000000000000000000000085610c5c565b9050600081116108fd5760405162461bcd60e51b815260040161040190611d23565b60006064806002546064806109129190611e41565b61091c9190611e60565b6109269085611e41565b6109309190611e21565b61093a9190611e21565b9050600061096a7f0000000000000000000000000000000000000000000000000000000000000000878785611454565b60016000559695505050505050565b60006103bb7f00000000000000000000000000000000000000000000000000000000000000008484610c5c565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b610a1a610e53565b6001600160a01b0316610a2b610580565b6001600160a01b031614610a515760405162461bcd60e51b815260040161040190611c23565b6001600160a01b038116610a775760405162461bcd60e51b815260040161040190611a8d565b6001600160a01b03811660009081526003602052604090205460ff1615610ab05760405162461bcd60e51b815260040161040190611b7e565b6001600160a01b038116600081815260036020526040808220805460ff191660011790555130917f8cd7b0b1a7316eb3e5d781d629cb8bf4e2fd9a8903bdd0f6b894c087d61b21f291a350565b610b05610e53565b6001600160a01b0316610b16610580565b6001600160a01b031614610b3c5760405162461bcd60e51b815260040161040190611c23565b60008111610b5c5760405162461bcd60e51b815260040161040190611bb5565b60648110610b7c5760405162461bcd60e51b815260040161040190611cec565b610b87606482611e41565b60025560405130907f1b5c61e79b0735d33852817a0af9ed28b909c7c0a2a04abcc0c19bba6d6ba56490610bbc908490611d91565b60405180910390a250565b610bcf610e53565b6001600160a01b0316610be0610580565b6001600160a01b031614610c065760405162461bcd60e51b815260040161040190611c23565b6001600160a01b038116610c2c5760405162461bcd60e51b815260040161040190611a30565b610c3581610e57565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a4390586866040518363ffffffff1660e01b8152600401610cad929190611997565b60206040518083038186803b158015610cc557600080fd5b505afa158015610cd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfd9190611830565b90506001600160a01b038116610d255760405162461bcd60e51b815260040161040190611bec565b604051632de7797560e11b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635bcef2ea90610d769089908990600401611997565b60206040518083038186803b158015610d8e57600080fd5b505afa158015610da2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc69190611830565b90506000816001600160a01b0316633ddac95388876040518363ffffffff1660e01b8152600401610df89291906119d5565b60206040518083038186803b158015610e1057600080fd5b505afa158015610e24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4891906118ef565b979650505050505050565b3390565b600180546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080856001600160a01b03166323b872dd868686604051602401610ee8939291906119b1565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610f36919061194a565b6000604051808303816000865af19150503d8060008114610f73576040519150601f19603f3d011682016040523d82523d6000602084013e610f78565b606091505b5091509150818015610fa2575080511580610fa2575080806020019051810190610fa291906118b7565b610fbe5760405162461bcd60e51b815260040161040190611b21565b505050505050565b6000808690506000816001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561100757600080fd5b505afa15801561101b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103f9190611830565b90506000866001600160a01b03166370a08231336040518263ffffffff1660e01b815260040161106f9190611983565b60206040518083038186803b15801561108757600080fd5b505afa15801561109b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110bf91906118ef565b90506000836001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156110fc57600080fd5b505afa158015611110573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111349190611830565b90506001600160a01b03891615611152575087611152818589611712565b60405163e6a4390560e01b81526000906001600160a01b0385169063e6a43905906111839085908d90600401611997565b60206040518083038186803b15801561119b57600080fd5b505afa1580156111af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d39190611830565b6001600160a01b03161461135657604080516002808252606082018352600092602083019080368337019050509050818160008151811061122457634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050888160018151811061126657634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920101528a166112ed5760405163b6f9de9560e01b81526001600160a01b0386169063b6f9de95908a906112b6908b90869033904290600401611d9a565b6000604051808303818588803b1580156112cf57600080fd5b505af11580156112e3573d6000803e3d6000fd5b5050505050611354565b604051635c11d79560e01b81526001600160a01b03861690635c11d79590611321908b908b90869033904290600401611dcf565b600060405180830381600087803b15801561133b57600080fd5b505af115801561134f573d6000803e3d6000fd5b505050505b505b6040516370a0823160e01b81526000906001600160a01b038a16906370a0823190611385903390600401611983565b60206040518083038186803b15801561139d57600080fd5b505afa1580156113b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d591906118ef565b9050886001600160a01b03168a6001600160a01b03168c6001600160a01b03167fd30edfe8aafab67575a170d015da0337bcb39e5c9af1b2dfb9294fb75b344ac38b8b88876114249190611e60565b60405161143393929190611e0b565b60405180910390a46114458382611e60565b9b9a5050505050505050505050565b6000808590506000816001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561149557600080fd5b505afa1580156114a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114cd9190611830565b905033316114dc878488611712565b60405163e6a4390560e01b81526000906001600160a01b0384169063e6a439059061152d908b907f000000000000000000000000000000000000000000000000000000000000000090600401611997565b60206040518083038186803b15801561154557600080fd5b505afa158015611559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157d9190611830565b6001600160a01b0316146116a75760408051600280825260608201835260009260208301908036833701905050905087816000815181106115ce57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000008160018151811061163057634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260405163791ac94760e01b81529085169063791ac94790611673908a908a90869033904290600401611dcf565b600060405180830381600087803b15801561168d57600080fd5b505af11580156116a1573d6000803e3d6000fd5b50505050505b33316001600160a01b03888116908a167f1df84ee81df9963f5d40b2a3f717360c1f62daa6f21f69580398a8d570de644c89896116e48787611e60565b6040516116f393929190611e0b565b60405180910390a36117058282611e60565b9998505050505050505050565b600080846001600160a01b031663095ea7b385856040516024016117379291906119d5565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611785919061194a565b6000604051808303816000865af19150503d80600081146117c2576040519150601f19603f3d011682016040523d82523d6000602084013e6117c7565b606091505b50915091508180156117f15750805115806117f15750808060200190518101906117f191906118b7565b61180d5760405162461bcd60e51b815260040161040190611c58565b5050505050565b600060208284031215611825578081fd5b81356103bb81611e8d565b600060208284031215611841578081fd5b81516103bb81611e8d565b600080600060608486031215611860578182fd5b833561186b81611e8d565b9250602084013561187b81611e8d565b929592945050506040919091013590565b6000806040838503121561189e578182fd5b82356118a981611e8d565b946020939093013593505050565b6000602082840312156118c8578081fd5b815180151581146103bb578182fd5b6000602082840312156118e8578081fd5b5035919050565b600060208284031215611900578081fd5b5051919050565b6000815180845260208085019450808401835b8381101561193f5781516001600160a01b03168752958201959082019060010161191a565b509495945050505050565b60008251815b8181101561196a5760208186018101518583015201611950565b818111156119785782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526013908201527f556e6f52653a207a65726f2062616c616e636500000000000000000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526013908201527f556e6f52653a207a65726f206164647265737300000000000000000000000000604082015260600190565b6020808252602c908201527f556e6f52653a207768697465206c6973742072656d6f766564206f7220756e6160408201527f6464656420616c72656164790000000000000000000000000000000000000000606082015260800190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b60208082526019908201527f556e6f52653a207768697465206c69737420616c726561647900000000000000604082015260600190565b60208082526014908201527f556e6f52653a207a65726f20736c697070616765000000000000000000000000604082015260600190565b6020808252600f908201527f54686572652773206e6f20706169720000000000000000000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f5472616e7366657248656c7065723a3a73616665417070726f76653a2061707060408201527f726f7665206661696c6564000000000000000000000000000000000000000000606082015260800190565b6020808252601e908201527f556e6f52653a2045786368616e67654167656e7420466f7262696464656e0000604082015260600190565b6020808252601d908201527f556e6f52653a203130302520736c697070616765206f766572666c6f77000000604082015260600190565b6020808252600f908201527f556e6f52653a206e6f2070616972730000000000000000000000000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b90815260200190565b600085825260806020830152611db36080830186611907565b6001600160a01b03949094166040830152506060015292915050565b600086825285602083015260a06040830152611dee60a0830186611907565b6001600160a01b0394909416606083015250608001529392505050565b9283526020830191909152604082015260600190565b600082611e3c57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611e5b57611e5b611e77565b500290565b600082821015611e7257611e72611e77565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610c3557600080fdfea26469706673582212200a6a309c03151fe7c076643893fb5bc6882586104a3e7fa6ddc57492c9fb39ec64736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106101485760003560e01c806393badc41116100c0578063d826492011610074578063f0fa55a911610059578063f0fa55a914610339578063f2fde38b14610359578063fa569274146103795761014f565b8063d826492014610304578063e7cd4a04146103195761014f565b8063a9a12d43116100a5578063a9a12d43146102ba578063ad5c4648146102da578063c74c0fac146102ef5761014f565b806393badc411461027a5780639a5539681461029a5761014f565b80633e032a3b11610117578063715018a6116100fc578063715018a61461022e5780638da5cb5b1461024357806390600a31146102655761014f565b80633e032a3b146101f9578063531a22111461020e5761014f565b8063102e3259146101545780632042e5c21461018a57806334899be6146101ac578063372c12b1146101cc5761014f565b3661014f57005b600080fd5b34801561016057600080fd5b5061017461016f36600461188c565b61038e565b6040516101819190611d91565b60405180910390f35b34801561019657600080fd5b506101aa6101a5366004611814565b6103c2565b005b3480156101b857600080fd5b506101746101c736600461184c565b6104b2565b3480156101d857600080fd5b506101ec6101e7366004611814565b6104c7565b60405161018191906119ee565b34801561020557600080fd5b506101746104dc565b34801561021a57600080fd5b506101746102293660046118d7565b6104e2565b34801561023a57600080fd5b506101aa610535565b34801561024f57600080fd5b50610258610580565b6040516101819190611983565b34801561027157600080fd5b5061025861058f565b34801561028657600080fd5b5061017461029536600461184c565b6105b3565b3480156102a657600080fd5b506101746102b536600461188c565b6107a1565b3480156102c657600080fd5b506101746102d536600461188c565b610979565b3480156102e657600080fd5b506102586109a6565b3480156102fb57600080fd5b506102586109ca565b34801561031057600080fd5b506102586109ee565b34801561032557600080fd5b506101aa610334366004611814565b610a12565b34801561034557600080fd5b506101aa6103543660046118d7565b610afd565b34801561036557600080fd5b506101aa610374366004611814565b610bc7565b34801561038557600080fd5b50610258610c38565b60006103bb837f000000000000000000000000000000000000000000000000000000000000000084610c5c565b9392505050565b6103ca610e53565b6001600160a01b03166103db610580565b6001600160a01b03161461040a5760405162461bcd60e51b815260040161040190611c23565b60405180910390fd5b6001600160a01b0381166104305760405162461bcd60e51b815260040161040190611a8d565b6001600160a01b03811660009081526003602052604090205460ff166104685760405162461bcd60e51b815260040161040190611ac4565b6001600160a01b038116600081815260036020526040808220805460ff191690555130917f2f467772ef0a5478314f3bc2b37d4b2ad29b65f052b2cedc8e2972dda033529291a350565b60006104bf848484610c5c565b949350505050565b60036020526000908152604090205460ff1681565b60025481565b600061052f7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084610c5c565b92915050565b61053d610e53565b6001600160a01b031661054e610580565b6001600160a01b0316146105745760405162461bcd60e51b815260040161040190611c23565b61057e6000610e57565b565b6001546001600160a01b031690565b7f000000000000000000000000000000000000000000000000000000000000000081565b3360009081526003602052604081205460ff166105e25760405162461bcd60e51b815260040161040190611cb5565b600260005414156106055760405162461bcd60e51b815260040161040190611d5a565b600260009081556001600160a01b038516156106d5576040516370a0823160e01b81526000906001600160a01b038716906370a082319061064a903390600401611983565b60206040518083038186803b15801561066257600080fd5b505afa158015610676573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069a91906118ef565b116106b75760405162461bcd60e51b8152600401610401906119f9565b6106c385333086610ec1565b6106ce858585610c5c565b9050610703565b6107007f00000000000000000000000000000000000000000000000000000000000000008585610c5c565b90505b600081116107235760405162461bcd60e51b815260040161040190611d23565b60006064806002546064806107389190611e41565b6107429190611e60565b61074c9085611e41565b6107569190611e21565b6107609190611e21565b905060006107917f000000000000000000000000000000000000000000000000000000000000000088888886610fc6565b6001600055979650505050505050565b3360009081526003602052604081205460ff166107d05760405162461bcd60e51b815260040161040190611cb5565b600260005414156107f35760405162461bcd60e51b815260040161040190611d5a565b600260009081556040516370a0823160e01b81526001600160a01b038516906370a0823190610826903390600401611983565b60206040518083038186803b15801561083e57600080fd5b505afa158015610852573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087691906118ef565b116108935760405162461bcd60e51b8152600401610401906119f9565b6001600160a01b038316156108ae576108ae83333085610ec1565b60006108db847f000000000000000000000000000000000000000000000000000000000000000085610c5c565b9050600081116108fd5760405162461bcd60e51b815260040161040190611d23565b60006064806002546064806109129190611e41565b61091c9190611e60565b6109269085611e41565b6109309190611e21565b61093a9190611e21565b9050600061096a7f0000000000000000000000000000000000000000000000000000000000000000878785611454565b60016000559695505050505050565b60006103bb7f00000000000000000000000000000000000000000000000000000000000000008484610c5c565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b610a1a610e53565b6001600160a01b0316610a2b610580565b6001600160a01b031614610a515760405162461bcd60e51b815260040161040190611c23565b6001600160a01b038116610a775760405162461bcd60e51b815260040161040190611a8d565b6001600160a01b03811660009081526003602052604090205460ff1615610ab05760405162461bcd60e51b815260040161040190611b7e565b6001600160a01b038116600081815260036020526040808220805460ff191660011790555130917f8cd7b0b1a7316eb3e5d781d629cb8bf4e2fd9a8903bdd0f6b894c087d61b21f291a350565b610b05610e53565b6001600160a01b0316610b16610580565b6001600160a01b031614610b3c5760405162461bcd60e51b815260040161040190611c23565b60008111610b5c5760405162461bcd60e51b815260040161040190611bb5565b60648110610b7c5760405162461bcd60e51b815260040161040190611cec565b610b87606482611e41565b60025560405130907f1b5c61e79b0735d33852817a0af9ed28b909c7c0a2a04abcc0c19bba6d6ba56490610bbc908490611d91565b60405180910390a250565b610bcf610e53565b6001600160a01b0316610be0610580565b6001600160a01b031614610c065760405162461bcd60e51b815260040161040190611c23565b6001600160a01b038116610c2c5760405162461bcd60e51b815260040161040190611a30565b610c3581610e57565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a4390586866040518363ffffffff1660e01b8152600401610cad929190611997565b60206040518083038186803b158015610cc557600080fd5b505afa158015610cd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfd9190611830565b90506001600160a01b038116610d255760405162461bcd60e51b815260040161040190611bec565b604051632de7797560e11b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635bcef2ea90610d769089908990600401611997565b60206040518083038186803b158015610d8e57600080fd5b505afa158015610da2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc69190611830565b90506000816001600160a01b0316633ddac95388876040518363ffffffff1660e01b8152600401610df89291906119d5565b60206040518083038186803b158015610e1057600080fd5b505afa158015610e24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4891906118ef565b979650505050505050565b3390565b600180546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080856001600160a01b03166323b872dd868686604051602401610ee8939291906119b1565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610f36919061194a565b6000604051808303816000865af19150503d8060008114610f73576040519150601f19603f3d011682016040523d82523d6000602084013e610f78565b606091505b5091509150818015610fa2575080511580610fa2575080806020019051810190610fa291906118b7565b610fbe5760405162461bcd60e51b815260040161040190611b21565b505050505050565b6000808690506000816001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561100757600080fd5b505afa15801561101b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103f9190611830565b90506000866001600160a01b03166370a08231336040518263ffffffff1660e01b815260040161106f9190611983565b60206040518083038186803b15801561108757600080fd5b505afa15801561109b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110bf91906118ef565b90506000836001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156110fc57600080fd5b505afa158015611110573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111349190611830565b90506001600160a01b03891615611152575087611152818589611712565b60405163e6a4390560e01b81526000906001600160a01b0385169063e6a43905906111839085908d90600401611997565b60206040518083038186803b15801561119b57600080fd5b505afa1580156111af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d39190611830565b6001600160a01b03161461135657604080516002808252606082018352600092602083019080368337019050509050818160008151811061122457634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050888160018151811061126657634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920101528a166112ed5760405163b6f9de9560e01b81526001600160a01b0386169063b6f9de95908a906112b6908b90869033904290600401611d9a565b6000604051808303818588803b1580156112cf57600080fd5b505af11580156112e3573d6000803e3d6000fd5b5050505050611354565b604051635c11d79560e01b81526001600160a01b03861690635c11d79590611321908b908b90869033904290600401611dcf565b600060405180830381600087803b15801561133b57600080fd5b505af115801561134f573d6000803e3d6000fd5b505050505b505b6040516370a0823160e01b81526000906001600160a01b038a16906370a0823190611385903390600401611983565b60206040518083038186803b15801561139d57600080fd5b505afa1580156113b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d591906118ef565b9050886001600160a01b03168a6001600160a01b03168c6001600160a01b03167fd30edfe8aafab67575a170d015da0337bcb39e5c9af1b2dfb9294fb75b344ac38b8b88876114249190611e60565b60405161143393929190611e0b565b60405180910390a46114458382611e60565b9b9a5050505050505050505050565b6000808590506000816001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561149557600080fd5b505afa1580156114a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114cd9190611830565b905033316114dc878488611712565b60405163e6a4390560e01b81526000906001600160a01b0384169063e6a439059061152d908b907f000000000000000000000000000000000000000000000000000000000000000090600401611997565b60206040518083038186803b15801561154557600080fd5b505afa158015611559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157d9190611830565b6001600160a01b0316146116a75760408051600280825260608201835260009260208301908036833701905050905087816000815181106115ce57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000008160018151811061163057634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260405163791ac94760e01b81529085169063791ac94790611673908a908a90869033904290600401611dcf565b600060405180830381600087803b15801561168d57600080fd5b505af11580156116a1573d6000803e3d6000fd5b50505050505b33316001600160a01b03888116908a167f1df84ee81df9963f5d40b2a3f717360c1f62daa6f21f69580398a8d570de644c89896116e48787611e60565b6040516116f393929190611e0b565b60405180910390a36117058282611e60565b9998505050505050505050565b600080846001600160a01b031663095ea7b385856040516024016117379291906119d5565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611785919061194a565b6000604051808303816000865af19150503d80600081146117c2576040519150601f19603f3d011682016040523d82523d6000602084013e6117c7565b606091505b50915091508180156117f15750805115806117f15750808060200190518101906117f191906118b7565b61180d5760405162461bcd60e51b815260040161040190611c58565b5050505050565b600060208284031215611825578081fd5b81356103bb81611e8d565b600060208284031215611841578081fd5b81516103bb81611e8d565b600080600060608486031215611860578182fd5b833561186b81611e8d565b9250602084013561187b81611e8d565b929592945050506040919091013590565b6000806040838503121561189e578182fd5b82356118a981611e8d565b946020939093013593505050565b6000602082840312156118c8578081fd5b815180151581146103bb578182fd5b6000602082840312156118e8578081fd5b5035919050565b600060208284031215611900578081fd5b5051919050565b6000815180845260208085019450808401835b8381101561193f5781516001600160a01b03168752958201959082019060010161191a565b509495945050505050565b60008251815b8181101561196a5760208186018101518583015201611950565b818111156119785782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526013908201527f556e6f52653a207a65726f2062616c616e636500000000000000000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526013908201527f556e6f52653a207a65726f206164647265737300000000000000000000000000604082015260600190565b6020808252602c908201527f556e6f52653a207768697465206c6973742072656d6f766564206f7220756e6160408201527f6464656420616c72656164790000000000000000000000000000000000000000606082015260800190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b60208082526019908201527f556e6f52653a207768697465206c69737420616c726561647900000000000000604082015260600190565b60208082526014908201527f556e6f52653a207a65726f20736c697070616765000000000000000000000000604082015260600190565b6020808252600f908201527f54686572652773206e6f20706169720000000000000000000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f5472616e7366657248656c7065723a3a73616665417070726f76653a2061707060408201527f726f7665206661696c6564000000000000000000000000000000000000000000606082015260800190565b6020808252601e908201527f556e6f52653a2045786368616e67654167656e7420466f7262696464656e0000604082015260600190565b6020808252601d908201527f556e6f52653a203130302520736c697070616765206f766572666c6f77000000604082015260600190565b6020808252600f908201527f556e6f52653a206e6f2070616972730000000000000000000000000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b90815260200190565b600085825260806020830152611db36080830186611907565b6001600160a01b03949094166040830152506060015292915050565b600086825285602083015260a06040830152611dee60a0830186611907565b6001600160a01b0394909416606083015250608001529392505050565b9283526020830191909152604082015260600190565b600082611e3c57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611e5b57611e5b611e77565b500290565b600082821015611e7257611e72611e77565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610c3557600080fdfea26469706673582212200a6a309c03151fe7c076643893fb5bc6882586104a3e7fa6ddc57492c9fb39ec64736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 114,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 7,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 3744,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "slippage",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 3751,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "whiteList",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}