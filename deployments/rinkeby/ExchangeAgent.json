{
  "address": "0xe3EB3D23824d7838d5B35020CC582675C5Cb2D32",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_usdcToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_twapOraclePriceFeedFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapFactory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_dexAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_convertToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_convertAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_convertedAmount",
          "type": "uint256"
        }
      ],
      "name": "ConvertedTokenToETH",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_dexAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_convertToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_convertedToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_convertAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_convertedAmount",
          "type": "uint256"
        }
      ],
      "name": "ConvertedTokenToToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_whiteListAddress",
          "type": "address"
        }
      ],
      "name": "LogAddWhiteList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_whiteListAddress",
          "type": "address"
        }
      ],
      "name": "LogRemoveWhiteList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_slippage",
          "type": "uint256"
        }
      ],
      "name": "LogSetSlippage",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "TWAP_ORACLE_PRICE_FEED_FACTORY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNISWAP_FACTORY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNISWAP_ROUTER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC_TOKEN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_whiteListAddress",
          "type": "address"
        }
      ],
      "name": "addWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_convertAmount",
          "type": "uint256"
        }
      ],
      "name": "convertForETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_token0Amount",
          "type": "uint256"
        }
      ],
      "name": "convertForToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "getETHAmountForToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_usdtAmount",
          "type": "uint256"
        }
      ],
      "name": "getETHAmountForUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_token0Amount",
          "type": "uint256"
        }
      ],
      "name": "getNeededTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_usdtAmount",
          "type": "uint256"
        }
      ],
      "name": "getTokenAmountForUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_whiteListAddress",
          "type": "address"
        }
      ],
      "name": "removeWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_slippage",
          "type": "uint256"
        }
      ],
      "name": "setSlippage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slippage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x9521f6934085bdf7de771ab54e6403365136bdd52b67323aeeea66ff11eb13bc",
  "receipt": {
    "to": null,
    "from": "0x5569BDF4e02cec3fE459796e3d0e741616029fA4",
    "contractAddress": "0xe3EB3D23824d7838d5B35020CC582675C5Cb2D32",
    "transactionIndex": 2,
    "gasUsed": "1706179",
    "logsBloom": "0x
    "blockHash": "0x85b57652fabd0b59841d80e807fa939f95fa81830395d06c9db0a958510b6f94",
    "transactionHash": "0x9521f6934085bdf7de771ab54e6403365136bdd52b67323aeeea66ff11eb13bc",
    "logs": [],
    "blockNumber": 9984972,
    "cumulativeGasUsed": "2351213",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x40c035016AD732b6cFce34c3F881040B6C6cf71E",
    "0xc778417e063141139fce010982780140aa0cd5ab",
    "0x6fa8a7E5c13E4094fD4Fa288ba59544791E4c9d3",
    "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",
    "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f"
  ],
  "solcInputHash": "83a1e06e18c2c188d1ba5cc7d2484859",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdcToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_twapOraclePriceFeedFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_dexAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_convertToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_convertAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_convertedAmount\",\"type\":\"uint256\"}],\"name\":\"ConvertedTokenToETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_dexAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_convertToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_convertedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_convertAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_convertedAmount\",\"type\":\"uint256\"}],\"name\":\"ConvertedTokenToToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_whiteListAddress\",\"type\":\"address\"}],\"name\":\"LogAddWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_whiteListAddress\",\"type\":\"address\"}],\"name\":\"LogRemoveWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_slippage\",\"type\":\"uint256\"}],\"name\":\"LogSetSlippage\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TWAP_ORACLE_PRICE_FEED_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNISWAP_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNISWAP_ROUTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_whiteListAddress\",\"type\":\"address\"}],\"name\":\"addWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_convertAmount\",\"type\":\"uint256\"}],\"name\":\"convertForETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_token0Amount\",\"type\":\"uint256\"}],\"name\":\"convertForToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"getETHAmountForToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_usdtAmount\",\"type\":\"uint256\"}],\"name\":\"getETHAmountForUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_token0Amount\",\"type\":\"uint256\"}],\"name\":\"getNeededTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_usdtAmount\",\"type\":\"uint256\"}],\"name\":\"getTokenAmountForUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_whiteListAddress\",\"type\":\"address\"}],\"name\":\"removeWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slippage\",\"type\":\"uint256\"}],\"name\":\"setSlippage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ExchangeAgent.sol\":\"ExchangeAgent\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"contracts/ExchangeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./interfaces/IUniswapFactory.sol\\\";\\nimport \\\"./interfaces/IUniswapRouter02.sol\\\";\\nimport \\\"./interfaces/ITwapOraclePriceFeedFactory.sol\\\";\\nimport \\\"./interfaces/ITwapOraclePriceFeed.sol\\\";\\nimport \\\"./interfaces/IExchangeAgent.sol\\\";\\nimport \\\"./libraries/TransferHelper.sol\\\";\\n\\ncontract ExchangeAgent is IExchangeAgent, ReentrancyGuard {\\n    address public immutable override USDC_TOKEN;\\n    address public immutable UNISWAP_FACTORY;\\n    address public immutable TWAP_ORACLE_PRICE_FEED_FACTORY;\\n    address public immutable UNISWAP_ROUTER;\\n    address public immutable WETH;\\n    uint256 public slippage;\\n    uint256 private constant SLIPPAGE_PRECISION = 100;\\n\\n    mapping(address => bool) public whiteList;\\n    address public owner;\\n\\n    event ConvertedTokenToToken(\\n        address indexed _dexAddress,\\n        address indexed _convertToken,\\n        address indexed _convertedToken,\\n        uint256 _convertAmount,\\n        uint256 _desiredAmount,\\n        uint256 _convertedAmount\\n    );\\n\\n    event ConvertedTokenToETH(\\n        address indexed _dexAddress,\\n        address indexed _convertToken,\\n        uint256 _convertAmount,\\n        uint256 _desiredAmount,\\n        uint256 _convertedAmount\\n    );\\n\\n    event LogAddWhiteList(address indexed _exchangeAgent, address indexed _whiteListAddress);\\n    event LogRemoveWhiteList(address indexed _exchangeAgent, address indexed _whiteListAddress);\\n    event LogSetSlippage(address indexed _exchangeAgent, uint256 _slippage);\\n\\n    constructor(\\n        address _usdcToken,\\n        address _WETH,\\n        address _twapOraclePriceFeedFactory,\\n        address _uniswapRouter,\\n        address _uniswapFactory\\n    ) {\\n        require(_usdcToken != address(0), \\\"UnoRe: zero USDC address\\\");\\n        require(_twapOraclePriceFeedFactory != address(0), \\\"UnoRe: zero twapOraclePriceFeedFactory address\\\");\\n        require(_uniswapRouter != address(0), \\\"UnoRe: zero uniswapRouter address\\\");\\n        require(_uniswapFactory != address(0), \\\"UnoRe: zero uniswapFactory address\\\");\\n        require(_WETH != address(0), \\\"UnoRe: zero WETH address\\\");\\n        USDC_TOKEN = _usdcToken;\\n        UNISWAP_FACTORY = _uniswapFactory;\\n        TWAP_ORACLE_PRICE_FEED_FACTORY = _twapOraclePriceFeedFactory;\\n        UNISWAP_ROUTER = _uniswapRouter;\\n        WETH = _WETH;\\n        owner = msg.sender;\\n        whiteList[msg.sender] = true;\\n        slippage = 5 * SLIPPAGE_PRECISION;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"UnoRe: ExchangeAgent Forbidden\\\");\\n        _;\\n    }\\n\\n    modifier onlyWhiteList() {\\n        require(whiteList[msg.sender], \\\"UnoRe: ExchangeAgent Forbidden\\\");\\n        _;\\n    }\\n\\n    receive() external payable {}\\n\\n    function addWhiteList(address _whiteListAddress) external onlyOwner {\\n        require(_whiteListAddress != address(0), \\\"UnoRe: zero address\\\");\\n        require(!whiteList[_whiteListAddress], \\\"UnoRe: white list already\\\");\\n        whiteList[_whiteListAddress] = true;\\n        emit LogAddWhiteList(address(this), _whiteListAddress);\\n    }\\n\\n    function removeWhiteList(address _whiteListAddress) external onlyOwner {\\n        require(_whiteListAddress != address(0), \\\"UnoRe: zero address\\\");\\n        require(whiteList[_whiteListAddress], \\\"UnoRe: white list removed or unadded already\\\");\\n        whiteList[_whiteListAddress] = false;\\n        emit LogRemoveWhiteList(address(this), _whiteListAddress);\\n    }\\n\\n    function setSlippage(uint256 _slippage) external onlyOwner {\\n        require(_slippage > 0, \\\"UnoRe: zero slippage\\\");\\n        require(_slippage < 100, \\\"UnoRe: 100% slippage overflow\\\");\\n        slippage = _slippage * SLIPPAGE_PRECISION;\\n        emit LogSetSlippage(address(this), _slippage);\\n    }\\n\\n    // estimate token amount for amount in USDC\\n    function getTokenAmountForUSDC(address _token, uint256 _usdtAmount) external view override returns (uint256) {\\n        return _getNeededTokenAmount(USDC_TOKEN, _token, _usdtAmount);\\n    }\\n\\n    // estimate ETH amount for amount in USDC\\n    function getETHAmountForUSDC(uint256 _usdtAmount) external view override returns (uint256) {\\n        return _getNeededTokenAmount(USDC_TOKEN, WETH, _usdtAmount);\\n    }\\n\\n    function getETHAmountForToken(address _token, uint256 _tokenAmount) external view override returns (uint256) {\\n        return _getNeededTokenAmount(_token, WETH, _tokenAmount);\\n    }\\n\\n    function getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external view override returns (uint256) {\\n        return _getNeededTokenAmount(_token0, _token1, _token0Amount);\\n    }\\n\\n    function convertForToken(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external override onlyWhiteList nonReentrant returns (uint256) {\\n        uint256 twapPrice = 0;\\n        if (_token0 != address(0)) {\\n            require(IERC20(_token0).balanceOf(msg.sender) > 0, \\\"UnoRe: zero balance\\\");\\n            TransferHelper.safeTransferFrom(_token0, msg.sender, address(this), _token0Amount);\\n            twapPrice = _getNeededTokenAmount(_token0, _token1, _token0Amount);\\n        } else {\\n            twapPrice = _getNeededTokenAmount(WETH, _token1, _token0Amount);\\n        }\\n        require(twapPrice > 0, \\\"UnoRe: no pairs\\\");\\n        uint256 desiredAmount = (twapPrice * (100 * SLIPPAGE_PRECISION - slippage)) / 100 / SLIPPAGE_PRECISION;\\n\\n        uint256 convertedAmount = _convertTokenForToken(UNISWAP_ROUTER, _token0, _token1, _token0Amount, desiredAmount);\\n        return convertedAmount;\\n    }\\n\\n    function convertForETH(address _token, uint256 _convertAmount)\\n        external\\n        override\\n        onlyWhiteList\\n        nonReentrant\\n        returns (uint256)\\n    {\\n        require(IERC20(_token).balanceOf(msg.sender) > 0, \\\"UnoRe: zero balance\\\");\\n        if (_token != address(0)) {\\n            TransferHelper.safeTransferFrom(_token, msg.sender, address(this), _convertAmount);\\n        }\\n        uint256 twapPriceInUSDC = _getNeededTokenAmount(_token, WETH, _convertAmount);\\n        require(twapPriceInUSDC > 0, \\\"UnoRe: no pairs\\\");\\n        uint256 desiredAmount = (twapPriceInUSDC * (100 * SLIPPAGE_PRECISION - slippage)) / 100 / SLIPPAGE_PRECISION;\\n\\n        uint256 convertedAmount = _convertTokenForETH(UNISWAP_ROUTER, _token, _convertAmount, desiredAmount);\\n        return convertedAmount;\\n    }\\n\\n    function _convertTokenForToken(\\n        address _dexAddress,\\n        address _token0,\\n        address _token1,\\n        uint256 _convertAmount,\\n        uint256 _desiredAmount\\n    ) private returns (uint256) {\\n        IUniswapRouter02 _dexRouter = IUniswapRouter02(_dexAddress);\\n        address _factory = _dexRouter.factory();\\n        uint256 usdtBalanceBeforeSwap = IERC20(_token1).balanceOf(msg.sender);\\n        address inpToken = _dexRouter.WETH();\\n        if (_token0 != address(0)) {\\n            inpToken = _token0;\\n            TransferHelper.safeApprove(_token0, address(_dexRouter), _convertAmount);\\n        }\\n        if (IUniswapFactory(_factory).getPair(inpToken, _token1) != address(0)) {\\n            address[] memory path = new address[](2);\\n            path[0] = inpToken;\\n            path[1] = _token1;\\n            if (_token0 == address(0)) {\\n                _dexRouter.swapExactETHForTokensSupportingFeeOnTransferTokens{value: _convertAmount}(\\n                    _desiredAmount,\\n                    path,\\n                    msg.sender,\\n                    block.timestamp\\n                );\\n            } else {\\n                _dexRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n                    _convertAmount,\\n                    _desiredAmount,\\n                    path,\\n                    msg.sender,\\n                    block.timestamp\\n                );\\n            }\\n        }\\n        uint256 usdtBalanceAfterSwap = IERC20(_token1).balanceOf(msg.sender);\\n        emit ConvertedTokenToToken(\\n            _dexAddress,\\n            _token0,\\n            _token1,\\n            _convertAmount,\\n            _desiredAmount,\\n            usdtBalanceAfterSwap - usdtBalanceBeforeSwap\\n        );\\n        return usdtBalanceAfterSwap - usdtBalanceBeforeSwap;\\n    }\\n\\n    function _convertTokenForETH(\\n        address _dexAddress,\\n        address _token,\\n        uint256 _convertAmount,\\n        uint256 _desiredAmount\\n    ) private returns (uint256) {\\n        IUniswapRouter02 _dexRouter = IUniswapRouter02(_dexAddress);\\n        address _factory = _dexRouter.factory();\\n        uint256 ethBalanceBeforeSwap = address(msg.sender).balance;\\n        TransferHelper.safeApprove(_token, address(_dexRouter), _convertAmount);\\n        if (IUniswapFactory(_factory).getPair(_token, WETH) != address(0)) {\\n            address[] memory path = new address[](2);\\n            path[0] = _token;\\n            path[1] = WETH;\\n            _dexRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(\\n                _convertAmount,\\n                _desiredAmount,\\n                path,\\n                msg.sender,\\n                block.timestamp\\n            );\\n        }\\n        uint256 ethBalanceAfterSwap = address(msg.sender).balance;\\n        emit ConvertedTokenToETH(_dexAddress, _token, _convertAmount, _desiredAmount, ethBalanceAfterSwap - ethBalanceBeforeSwap);\\n        return ethBalanceAfterSwap - ethBalanceBeforeSwap;\\n    }\\n\\n    /**\\n     * @dev Get expected _token1 amount for _inputAmount of _token0\\n     * _desiredAmount should consider decimals based on _token1\\n     */\\n    function _getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) private view returns (uint256) {\\n        address pair = IUniswapFactory(UNISWAP_FACTORY).getPair(_token0, _token1);\\n        require(pair != address(0), \\\"There's no pair\\\");\\n\\n        address twapOraclePriceFeed = ITwapOraclePriceFeedFactory(TWAP_ORACLE_PRICE_FEED_FACTORY).getTwapOraclePriceFeed(\\n            _token0,\\n            _token1\\n        );\\n\\n        uint256 expectedToken1Amount = ITwapOraclePriceFeed(twapOraclePriceFeed).consult(_token0, _token0Amount);\\n\\n        return expectedToken1Amount;\\n    }\\n}\\n\",\"keccak256\":\"0x6155d95a305f6dc210a894aa206ef16538c5dd9124ab3510c9c5e10c00e85c75\",\"license\":\"MIT\"},\"contracts/interfaces/IExchangeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\ninterface IExchangeAgent {\\n    function USDC_TOKEN() external view returns (address);\\n\\n    function getTokenAmountForUSDC(address _token, uint256 _usdtAmount) external view returns (uint256);\\n\\n    function getETHAmountForUSDC(uint256 _usdtAmount) external view returns (uint256);\\n\\n    function getETHAmountForToken(address _token, uint256 _tokenAmount) external view returns (uint256);\\n\\n    function getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external view returns (uint256);\\n\\n    function convertForToken(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external returns (uint256);\\n\\n    function convertForETH(address _token, uint256 _convertAmount) external returns (uint256);\\n}\\n\",\"keccak256\":\"0xac695d6d1b861eb9f84ac2009f97fd5b00d44500b6735fb9256f1c227323e07e\",\"license\":\"MIT\"},\"contracts/interfaces/ITwapOraclePriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface ITwapOraclePriceFeed {\\n    function update() external;\\n\\n    function consult(address token, uint256 amountIn) external view returns (uint256 amountOut);\\n}\\n\",\"keccak256\":\"0x93c07be9b8250abbe953aa68574a82e0e58e4a6330e190785d8a95e0762a8752\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ITwapOraclePriceFeedFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface ITwapOraclePriceFeedFactory {\\n    function twapOraclePriceFeedList(address _pair) external view returns (address);\\n\\n    function getTwapOraclePriceFeed(address _token0, address _token1) external view returns (address twapOraclePriceFeed);\\n}\\n\",\"keccak256\":\"0xa476375c4fb24d5ee56dfdd8a9059530e2678be1d5a0070c129919c9e9932898\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IUniswapFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface IUniswapFactory {\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint256);\\n\\n    function feeTo() external view returns (address);\\n\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n\\n    function allPairs(uint256) external view returns (address pair);\\n\\n    function allPairsLength() external view returns (uint256);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n\\n    function setFeeToSetter(address) external;\\n}\\n\",\"keccak256\":\"0xcc6c828391ba6e5ab0d338b965395129121abe68729901a2ffe861517ec3358a\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IUniswapRouter01.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\ninterface IUniswapRouter01 {\\n    function factory() external pure returns (address);\\n\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        returns (\\n            uint256 amountA,\\n            uint256 amountB,\\n            uint256 liquidity\\n        );\\n\\n    function addLiquidityETH(\\n        address token,\\n        uint256 amountTokenDesired,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        payable\\n        returns (\\n            uint256 amountToken,\\n            uint256 amountETH,\\n            uint256 liquidity\\n        );\\n\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETH(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactTokens(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactETH(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapETHForExactTokens(\\n        uint256 amountOut,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function quote(\\n        uint256 amountA,\\n        uint256 reserveA,\\n        uint256 reserveB\\n    ) external pure returns (uint256 amountB);\\n\\n    function getAmountOut(\\n        uint256 amountIn,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountOut);\\n\\n    function getAmountIn(\\n        uint256 amountOut,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountIn);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\\n\\n    function getAmountsIn(uint256 amountOut, address[] calldata path) external view returns (uint256[] memory amounts);\\n}\\n\",\"keccak256\":\"0xc6dcd143a19e9a62147f13fb8e1c874fd453a92f6d83ed4905d4d58f8e633295\",\"license\":\"MIT\"},\"contracts/interfaces/IUniswapRouter02.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\nimport \\\"./IUniswapRouter01.sol\\\";\\n\\ninterface IUniswapRouter02 is IUniswapRouter01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountETH);\\n\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable;\\n\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0xa8193608666a8dd9b79a340671f633de919ecdd28c64aefa11e29cccb7ec9978\",\"license\":\"MIT\"},\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.0;\\n\\n// from Uniswap TransferHelper library\\nlibrary TransferHelper {\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeApprove: approve failed\\\");\\n    }\\n\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeTransfer: transfer failed\\\");\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::transferFrom: transferFrom failed\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"TransferHelper::safeTransferETH: ETH transfer failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xb7650ccd26cfa42968350d9c477f55f98059d74e0f173a1da45b06c2607e705d\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x6101206040523480156200001257600080fd5b5060405162002045380380620020458339810160408190526200003591620001ab565b60016000556001600160a01b0385166200006c5760405162461bcd60e51b81526004016200006390620002e0565b60405180910390fd5b6001600160a01b038316620000955760405162461bcd60e51b8152600401620000639062000251565b6001600160a01b038216620000be5760405162461bcd60e51b815260040162000063906200029f565b6001600160a01b038116620000e75760405162461bcd60e51b8152600401620000639062000317565b6001600160a01b038416620001105760405162461bcd60e51b815260040162000063906200021a565b6001600160601b0319606086811b821660805282811b821660a05284811b821660c05283811b821660e05285901b1661010052600380546001600160a01b031916339081179091556000908152600260205260409020805460ff191660011790556200017f6064600562000359565b60015550620003859350505050565b80516001600160a01b0381168114620001a657600080fd5b919050565b600080600080600060a08688031215620001c3578081fd5b620001ce866200018e565b9450620001de602087016200018e565b9350620001ee604087016200018e565b9250620001fe606087016200018e565b91506200020e608087016200018e565b90509295509295909350565b60208082526018908201527f556e6f52653a207a65726f205745544820616464726573730000000000000000604082015260600190565b6020808252602e908201527f556e6f52653a207a65726f20747761704f7261636c655072696365466565644660408201526d6163746f7279206164647265737360901b606082015260800190565b60208082526021908201527f556e6f52653a207a65726f20756e6973776170526f75746572206164647265736040820152607360f81b606082015260800190565b60208082526018908201527f556e6f52653a207a65726f205553444320616464726573730000000000000000604082015260600190565b60208082526022908201527f556e6f52653a207a65726f20756e6973776170466163746f7279206164647265604082015261737360f01b606082015260800190565b60008160001904831182151516156200038057634e487b7160e01b81526011600452602481fd5b500290565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c611c186200042d6000396000818161031b0152818161047a015281816105ff015281816107db015281816108cd0152818161130c01526113f701526000818161068e0152818161086801526109150152600081816104b60152610bc90152600081816108f10152610aeb015260008181610459015281816108a50152610ac40152611c186000f3fe6080604052600436106101025760003560e01c806393badc4111610095578063c74c0fac11610064578063c74c0fac14610294578063d8264920146102a9578063e7cd4a04146102be578063f0fa55a9146102de578063fa569274146102fe57610109565b806393badc411461021f5780639a5539681461023f578063a9a12d431461025f578063ad5c46481461027f57610109565b80633e032a3b116100d15780633e032a3b146101b3578063531a2211146101c85780638da5cb5b146101e857806390600a311461020a57610109565b8063102e32591461010e5780632042e5c21461014457806334899be614610166578063372c12b11461018657610109565b3661010957005b600080fd5b34801561011a57600080fd5b5061012e61012936600461167e565b610313565b60405161013b9190611ace565b60405180910390f35b34801561015057600080fd5b5061016461015f366004611606565b610347565b005b34801561017257600080fd5b5061012e61018136600461163e565b610422565b34801561019257600080fd5b506101a66101a1366004611606565b610437565b60405161013b91906117e0565b3480156101bf57600080fd5b5061012e61044c565b3480156101d457600080fd5b5061012e6101e33660046116c9565b610452565b3480156101f457600080fd5b506101fd6104a5565b60405161013b9190611775565b34801561021657600080fd5b506101fd6104b4565b34801561022b57600080fd5b5061012e61023a36600461163e565b6104d8565b34801561024b57600080fd5b5061012e61025a36600461167e565b6106c6565b34801561026b57600080fd5b5061012e61027a36600461167e565b61089e565b34801561028b57600080fd5b506101fd6108cb565b3480156102a057600080fd5b506101fd6108ef565b3480156102b557600080fd5b506101fd610913565b3480156102ca57600080fd5b506101646102d9366004611606565b610937565b3480156102ea57600080fd5b506101646102f93660046116c9565b610a0d565b34801561030a57600080fd5b506101fd610ac2565b6000610340837f000000000000000000000000000000000000000000000000000000000000000084610ae6565b9392505050565b6003546001600160a01b0316331461037a5760405162461bcd60e51b8152600401610371906119f2565b60405180910390fd5b6001600160a01b0381166103a05760405162461bcd60e51b815260040161037190611822565b6001600160a01b03811660009081526002602052604090205460ff166103d85760405162461bcd60e51b815260040161037190611859565b6001600160a01b038116600081815260026020526040808220805460ff191690555130917f2f467772ef0a5478314f3bc2b37d4b2ad29b65f052b2cedc8e2972dda033529291a350565b600061042f848484610ae6565b949350505050565b60026020526000908152604090205460ff1681565b60015481565b600061049f7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084610ae6565b92915050565b6003546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b3360009081526002602052604081205460ff166105075760405162461bcd60e51b8152600401610371906119f2565b6002600054141561052a5760405162461bcd60e51b815260040161037190611a97565b600260009081556001600160a01b038516156105fa576040516370a0823160e01b81526000906001600160a01b038716906370a082319061056f903390600401611775565b60206040518083038186803b15801561058757600080fd5b505afa15801561059b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bf91906116e1565b116105dc5760405162461bcd60e51b8152600401610371906117eb565b6105e885333086610cdd565b6105f3858585610ae6565b9050610628565b6106257f00000000000000000000000000000000000000000000000000000000000000008585610ae6565b90505b600081116106485760405162461bcd60e51b815260040161037190611a60565b600060648060015460648061065d9190611b7e565b6106679190611b9d565b6106719085611b7e565b61067b9190611b5e565b6106859190611b5e565b905060006106b67f000000000000000000000000000000000000000000000000000000000000000088888886610dcd565b6001600055979650505050505050565b3360009081526002602052604081205460ff166106f55760405162461bcd60e51b8152600401610371906119f2565b600260005414156107185760405162461bcd60e51b815260040161037190611a97565b600260009081556040516370a0823160e01b81526001600160a01b038516906370a082319061074b903390600401611775565b60206040518083038186803b15801561076357600080fd5b505afa158015610777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079b91906116e1565b116107b85760405162461bcd60e51b8152600401610371906117eb565b6001600160a01b038316156107d3576107d383333085610cdd565b6000610800847f000000000000000000000000000000000000000000000000000000000000000085610ae6565b9050600081116108225760405162461bcd60e51b815260040161037190611a60565b60006064806001546064806108379190611b7e565b6108419190611b9d565b61084b9085611b7e565b6108559190611b5e565b61085f9190611b5e565b9050600061088f7f000000000000000000000000000000000000000000000000000000000000000087878561125b565b60016000559695505050505050565b60006103407f00000000000000000000000000000000000000000000000000000000000000008484610ae6565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6003546001600160a01b031633146109615760405162461bcd60e51b8152600401610371906119f2565b6001600160a01b0381166109875760405162461bcd60e51b815260040161037190611822565b6001600160a01b03811660009081526002602052604090205460ff16156109c05760405162461bcd60e51b815260040161037190611902565b6001600160a01b038116600081815260026020526040808220805460ff191660011790555130917f8cd7b0b1a7316eb3e5d781d629cb8bf4e2fd9a8903bdd0f6b894c087d61b21f291a350565b6003546001600160a01b03163314610a375760405162461bcd60e51b8152600401610371906119f2565b60008111610a575760405162461bcd60e51b815260040161037190611939565b60648110610a775760405162461bcd60e51b815260040161037190611a29565b610a82606482611b7e565b60015560405130907f1b5c61e79b0735d33852817a0af9ed28b909c7c0a2a04abcc0c19bba6d6ba56490610ab7908490611ace565b60405180910390a250565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a4390586866040518363ffffffff1660e01b8152600401610b37929190611789565b60206040518083038186803b158015610b4f57600080fd5b505afa158015610b63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b879190611622565b90506001600160a01b038116610baf5760405162461bcd60e51b815260040161037190611970565b604051632de7797560e11b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635bcef2ea90610c009089908990600401611789565b60206040518083038186803b158015610c1857600080fd5b505afa158015610c2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c509190611622565b90506000816001600160a01b0316633ddac95388876040518363ffffffff1660e01b8152600401610c829291906117c7565b60206040518083038186803b158015610c9a57600080fd5b505afa158015610cae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd291906116e1565b979650505050505050565b600080856001600160a01b03166323b872dd868686604051602401610d04939291906117a3565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051610d3d919061173c565b6000604051808303816000865af19150503d8060008114610d7a576040519150601f19603f3d011682016040523d82523d6000602084013e610d7f565b606091505b5091509150818015610da9575080511580610da9575080806020019051810190610da991906116a9565b610dc55760405162461bcd60e51b8152600401610371906118a5565b505050505050565b6000808690506000816001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b505afa158015610e22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e469190611622565b90506000866001600160a01b03166370a08231336040518263ffffffff1660e01b8152600401610e769190611775565b60206040518083038186803b158015610e8e57600080fd5b505afa158015610ea2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec691906116e1565b90506000836001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b158015610f0357600080fd5b505afa158015610f17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3b9190611622565b90506001600160a01b03891615610f59575087610f59818589611519565b60405163e6a4390560e01b81526000906001600160a01b0385169063e6a4390590610f8a9085908d90600401611789565b60206040518083038186803b158015610fa257600080fd5b505afa158015610fb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fda9190611622565b6001600160a01b03161461115d57604080516002808252606082018352600092602083019080368337019050509050818160008151811061102b57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050888160018151811061106d57634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920101528a166110f45760405163b6f9de9560e01b81526001600160a01b0386169063b6f9de95908a906110bd908b90869033904290600401611ad7565b6000604051808303818588803b1580156110d657600080fd5b505af11580156110ea573d6000803e3d6000fd5b505050505061115b565b604051635c11d79560e01b81526001600160a01b03861690635c11d79590611128908b908b90869033904290600401611b0c565b600060405180830381600087803b15801561114257600080fd5b505af1158015611156573d6000803e3d6000fd5b505050505b505b6040516370a0823160e01b81526000906001600160a01b038a16906370a082319061118c903390600401611775565b60206040518083038186803b1580156111a457600080fd5b505afa1580156111b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111dc91906116e1565b9050886001600160a01b03168a6001600160a01b03168c6001600160a01b03167fd30edfe8aafab67575a170d015da0337bcb39e5c9af1b2dfb9294fb75b344ac38b8b888761122b9190611b9d565b60405161123a93929190611b48565b60405180910390a461124c8382611b9d565b9b9a5050505050505050505050565b6000808590506000816001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561129c57600080fd5b505afa1580156112b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d49190611622565b905033316112e3878488611519565b60405163e6a4390560e01b81526000906001600160a01b0384169063e6a4390590611334908b907f000000000000000000000000000000000000000000000000000000000000000090600401611789565b60206040518083038186803b15801561134c57600080fd5b505afa158015611360573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113849190611622565b6001600160a01b0316146114ae5760408051600280825260608201835260009260208301908036833701905050905087816000815181106113d557634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000008160018151811061143757634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260405163791ac94760e01b81529085169063791ac9479061147a908a908a90869033904290600401611b0c565b600060405180830381600087803b15801561149457600080fd5b505af11580156114a8573d6000803e3d6000fd5b50505050505b33316001600160a01b03888116908a167f1df84ee81df9963f5d40b2a3f717360c1f62daa6f21f69580398a8d570de644c89896114eb8787611b9d565b6040516114fa93929190611b48565b60405180910390a361150c8282611b9d565b9998505050505050505050565b600080846001600160a01b031663095ea7b3858560405160240161153e9291906117c7565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051611577919061173c565b6000604051808303816000865af19150503d80600081146115b4576040519150601f19603f3d011682016040523d82523d6000602084013e6115b9565b606091505b50915091508180156115e35750805115806115e35750808060200190518101906115e391906116a9565b6115ff5760405162461bcd60e51b8152600401610371906119a7565b5050505050565b600060208284031215611617578081fd5b813561034081611bca565b600060208284031215611633578081fd5b815161034081611bca565b600080600060608486031215611652578182fd5b833561165d81611bca565b9250602084013561166d81611bca565b929592945050506040919091013590565b60008060408385031215611690578182fd5b823561169b81611bca565b946020939093013593505050565b6000602082840312156116ba578081fd5b81518015158114610340578182fd5b6000602082840312156116da578081fd5b5035919050565b6000602082840312156116f2578081fd5b5051919050565b6000815180845260208085019450808401835b838110156117315781516001600160a01b03168752958201959082019060010161170c565b509495945050505050565b60008251815b8181101561175c5760208186018101518583015201611742565b8181111561176a5782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526013908201527f556e6f52653a207a65726f2062616c616e636500000000000000000000000000604082015260600190565b60208082526013908201527f556e6f52653a207a65726f206164647265737300000000000000000000000000604082015260600190565b6020808252602c908201527f556e6f52653a207768697465206c6973742072656d6f766564206f7220756e6160408201526b6464656420616c726561647960a01b606082015260800190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b60208082526019908201527f556e6f52653a207768697465206c69737420616c726561647900000000000000604082015260600190565b60208082526014908201527f556e6f52653a207a65726f20736c697070616765000000000000000000000000604082015260600190565b6020808252600f908201527f54686572652773206e6f20706169720000000000000000000000000000000000604082015260600190565b6020808252602b908201527f5472616e7366657248656c7065723a3a73616665417070726f76653a2061707060408201526a1c9bdd994819985a5b195960aa1b606082015260800190565b6020808252601e908201527f556e6f52653a2045786368616e67654167656e7420466f7262696464656e0000604082015260600190565b6020808252601d908201527f556e6f52653a203130302520736c697070616765206f766572666c6f77000000604082015260600190565b6020808252600f908201527f556e6f52653a206e6f2070616972730000000000000000000000000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b90815260200190565b600085825260806020830152611af060808301866116f9565b6001600160a01b03949094166040830152506060015292915050565b600086825285602083015260a06040830152611b2b60a08301866116f9565b6001600160a01b0394909416606083015250608001529392505050565b9283526020830191909152604082015260600190565b600082611b7957634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611b9857611b98611bb4565b500290565b600082821015611baf57611baf611bb4565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114611bdf57600080fd5b5056fea264697066735822122097413c8fb74acbe9937954d827fd7bd11255ad969b1871a9d1465f13cd57a11464736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106101025760003560e01c806393badc4111610095578063c74c0fac11610064578063c74c0fac14610294578063d8264920146102a9578063e7cd4a04146102be578063f0fa55a9146102de578063fa569274146102fe57610109565b806393badc411461021f5780639a5539681461023f578063a9a12d431461025f578063ad5c46481461027f57610109565b80633e032a3b116100d15780633e032a3b146101b3578063531a2211146101c85780638da5cb5b146101e857806390600a311461020a57610109565b8063102e32591461010e5780632042e5c21461014457806334899be614610166578063372c12b11461018657610109565b3661010957005b600080fd5b34801561011a57600080fd5b5061012e61012936600461167e565b610313565b60405161013b9190611ace565b60405180910390f35b34801561015057600080fd5b5061016461015f366004611606565b610347565b005b34801561017257600080fd5b5061012e61018136600461163e565b610422565b34801561019257600080fd5b506101a66101a1366004611606565b610437565b60405161013b91906117e0565b3480156101bf57600080fd5b5061012e61044c565b3480156101d457600080fd5b5061012e6101e33660046116c9565b610452565b3480156101f457600080fd5b506101fd6104a5565b60405161013b9190611775565b34801561021657600080fd5b506101fd6104b4565b34801561022b57600080fd5b5061012e61023a36600461163e565b6104d8565b34801561024b57600080fd5b5061012e61025a36600461167e565b6106c6565b34801561026b57600080fd5b5061012e61027a36600461167e565b61089e565b34801561028b57600080fd5b506101fd6108cb565b3480156102a057600080fd5b506101fd6108ef565b3480156102b557600080fd5b506101fd610913565b3480156102ca57600080fd5b506101646102d9366004611606565b610937565b3480156102ea57600080fd5b506101646102f93660046116c9565b610a0d565b34801561030a57600080fd5b506101fd610ac2565b6000610340837f000000000000000000000000000000000000000000000000000000000000000084610ae6565b9392505050565b6003546001600160a01b0316331461037a5760405162461bcd60e51b8152600401610371906119f2565b60405180910390fd5b6001600160a01b0381166103a05760405162461bcd60e51b815260040161037190611822565b6001600160a01b03811660009081526002602052604090205460ff166103d85760405162461bcd60e51b815260040161037190611859565b6001600160a01b038116600081815260026020526040808220805460ff191690555130917f2f467772ef0a5478314f3bc2b37d4b2ad29b65f052b2cedc8e2972dda033529291a350565b600061042f848484610ae6565b949350505050565b60026020526000908152604090205460ff1681565b60015481565b600061049f7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084610ae6565b92915050565b6003546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b3360009081526002602052604081205460ff166105075760405162461bcd60e51b8152600401610371906119f2565b6002600054141561052a5760405162461bcd60e51b815260040161037190611a97565b600260009081556001600160a01b038516156105fa576040516370a0823160e01b81526000906001600160a01b038716906370a082319061056f903390600401611775565b60206040518083038186803b15801561058757600080fd5b505afa15801561059b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bf91906116e1565b116105dc5760405162461bcd60e51b8152600401610371906117eb565b6105e885333086610cdd565b6105f3858585610ae6565b9050610628565b6106257f00000000000000000000000000000000000000000000000000000000000000008585610ae6565b90505b600081116106485760405162461bcd60e51b815260040161037190611a60565b600060648060015460648061065d9190611b7e565b6106679190611b9d565b6106719085611b7e565b61067b9190611b5e565b6106859190611b5e565b905060006106b67f000000000000000000000000000000000000000000000000000000000000000088888886610dcd565b6001600055979650505050505050565b3360009081526002602052604081205460ff166106f55760405162461bcd60e51b8152600401610371906119f2565b600260005414156107185760405162461bcd60e51b815260040161037190611a97565b600260009081556040516370a0823160e01b81526001600160a01b038516906370a082319061074b903390600401611775565b60206040518083038186803b15801561076357600080fd5b505afa158015610777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079b91906116e1565b116107b85760405162461bcd60e51b8152600401610371906117eb565b6001600160a01b038316156107d3576107d383333085610cdd565b6000610800847f000000000000000000000000000000000000000000000000000000000000000085610ae6565b9050600081116108225760405162461bcd60e51b815260040161037190611a60565b60006064806001546064806108379190611b7e565b6108419190611b9d565b61084b9085611b7e565b6108559190611b5e565b61085f9190611b5e565b9050600061088f7f000000000000000000000000000000000000000000000000000000000000000087878561125b565b60016000559695505050505050565b60006103407f00000000000000000000000000000000000000000000000000000000000000008484610ae6565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6003546001600160a01b031633146109615760405162461bcd60e51b8152600401610371906119f2565b6001600160a01b0381166109875760405162461bcd60e51b815260040161037190611822565b6001600160a01b03811660009081526002602052604090205460ff16156109c05760405162461bcd60e51b815260040161037190611902565b6001600160a01b038116600081815260026020526040808220805460ff191660011790555130917f8cd7b0b1a7316eb3e5d781d629cb8bf4e2fd9a8903bdd0f6b894c087d61b21f291a350565b6003546001600160a01b03163314610a375760405162461bcd60e51b8152600401610371906119f2565b60008111610a575760405162461bcd60e51b815260040161037190611939565b60648110610a775760405162461bcd60e51b815260040161037190611a29565b610a82606482611b7e565b60015560405130907f1b5c61e79b0735d33852817a0af9ed28b909c7c0a2a04abcc0c19bba6d6ba56490610ab7908490611ace565b60405180910390a250565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a4390586866040518363ffffffff1660e01b8152600401610b37929190611789565b60206040518083038186803b158015610b4f57600080fd5b505afa158015610b63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b879190611622565b90506001600160a01b038116610baf5760405162461bcd60e51b815260040161037190611970565b604051632de7797560e11b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635bcef2ea90610c009089908990600401611789565b60206040518083038186803b158015610c1857600080fd5b505afa158015610c2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c509190611622565b90506000816001600160a01b0316633ddac95388876040518363ffffffff1660e01b8152600401610c829291906117c7565b60206040518083038186803b158015610c9a57600080fd5b505afa158015610cae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd291906116e1565b979650505050505050565b600080856001600160a01b03166323b872dd868686604051602401610d04939291906117a3565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051610d3d919061173c565b6000604051808303816000865af19150503d8060008114610d7a576040519150601f19603f3d011682016040523d82523d6000602084013e610d7f565b606091505b5091509150818015610da9575080511580610da9575080806020019051810190610da991906116a9565b610dc55760405162461bcd60e51b8152600401610371906118a5565b505050505050565b6000808690506000816001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b505afa158015610e22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e469190611622565b90506000866001600160a01b03166370a08231336040518263ffffffff1660e01b8152600401610e769190611775565b60206040518083038186803b158015610e8e57600080fd5b505afa158015610ea2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec691906116e1565b90506000836001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b158015610f0357600080fd5b505afa158015610f17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3b9190611622565b90506001600160a01b03891615610f59575087610f59818589611519565b60405163e6a4390560e01b81526000906001600160a01b0385169063e6a4390590610f8a9085908d90600401611789565b60206040518083038186803b158015610fa257600080fd5b505afa158015610fb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fda9190611622565b6001600160a01b03161461115d57604080516002808252606082018352600092602083019080368337019050509050818160008151811061102b57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050888160018151811061106d57634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920101528a166110f45760405163b6f9de9560e01b81526001600160a01b0386169063b6f9de95908a906110bd908b90869033904290600401611ad7565b6000604051808303818588803b1580156110d657600080fd5b505af11580156110ea573d6000803e3d6000fd5b505050505061115b565b604051635c11d79560e01b81526001600160a01b03861690635c11d79590611128908b908b90869033904290600401611b0c565b600060405180830381600087803b15801561114257600080fd5b505af1158015611156573d6000803e3d6000fd5b505050505b505b6040516370a0823160e01b81526000906001600160a01b038a16906370a082319061118c903390600401611775565b60206040518083038186803b1580156111a457600080fd5b505afa1580156111b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111dc91906116e1565b9050886001600160a01b03168a6001600160a01b03168c6001600160a01b03167fd30edfe8aafab67575a170d015da0337bcb39e5c9af1b2dfb9294fb75b344ac38b8b888761122b9190611b9d565b60405161123a93929190611b48565b60405180910390a461124c8382611b9d565b9b9a5050505050505050505050565b6000808590506000816001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561129c57600080fd5b505afa1580156112b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d49190611622565b905033316112e3878488611519565b60405163e6a4390560e01b81526000906001600160a01b0384169063e6a4390590611334908b907f000000000000000000000000000000000000000000000000000000000000000090600401611789565b60206040518083038186803b15801561134c57600080fd5b505afa158015611360573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113849190611622565b6001600160a01b0316146114ae5760408051600280825260608201835260009260208301908036833701905050905087816000815181106113d557634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000008160018151811061143757634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260405163791ac94760e01b81529085169063791ac9479061147a908a908a90869033904290600401611b0c565b600060405180830381600087803b15801561149457600080fd5b505af11580156114a8573d6000803e3d6000fd5b50505050505b33316001600160a01b03888116908a167f1df84ee81df9963f5d40b2a3f717360c1f62daa6f21f69580398a8d570de644c89896114eb8787611b9d565b6040516114fa93929190611b48565b60405180910390a361150c8282611b9d565b9998505050505050505050565b600080846001600160a01b031663095ea7b3858560405160240161153e9291906117c7565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051611577919061173c565b6000604051808303816000865af19150503d80600081146115b4576040519150601f19603f3d011682016040523d82523d6000602084013e6115b9565b606091505b50915091508180156115e35750805115806115e35750808060200190518101906115e391906116a9565b6115ff5760405162461bcd60e51b8152600401610371906119a7565b5050505050565b600060208284031215611617578081fd5b813561034081611bca565b600060208284031215611633578081fd5b815161034081611bca565b600080600060608486031215611652578182fd5b833561165d81611bca565b9250602084013561166d81611bca565b929592945050506040919091013590565b60008060408385031215611690578182fd5b823561169b81611bca565b946020939093013593505050565b6000602082840312156116ba578081fd5b81518015158114610340578182fd5b6000602082840312156116da578081fd5b5035919050565b6000602082840312156116f2578081fd5b5051919050565b6000815180845260208085019450808401835b838110156117315781516001600160a01b03168752958201959082019060010161170c565b509495945050505050565b60008251815b8181101561175c5760208186018101518583015201611742565b8181111561176a5782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526013908201527f556e6f52653a207a65726f2062616c616e636500000000000000000000000000604082015260600190565b60208082526013908201527f556e6f52653a207a65726f206164647265737300000000000000000000000000604082015260600190565b6020808252602c908201527f556e6f52653a207768697465206c6973742072656d6f766564206f7220756e6160408201526b6464656420616c726561647960a01b606082015260800190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b60208082526019908201527f556e6f52653a207768697465206c69737420616c726561647900000000000000604082015260600190565b60208082526014908201527f556e6f52653a207a65726f20736c697070616765000000000000000000000000604082015260600190565b6020808252600f908201527f54686572652773206e6f20706169720000000000000000000000000000000000604082015260600190565b6020808252602b908201527f5472616e7366657248656c7065723a3a73616665417070726f76653a2061707060408201526a1c9bdd994819985a5b195960aa1b606082015260800190565b6020808252601e908201527f556e6f52653a2045786368616e67654167656e7420466f7262696464656e0000604082015260600190565b6020808252601d908201527f556e6f52653a203130302520736c697070616765206f766572666c6f77000000604082015260600190565b6020808252600f908201527f556e6f52653a206e6f2070616972730000000000000000000000000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b90815260200190565b600085825260806020830152611af060808301866116f9565b6001600160a01b03949094166040830152506060015292915050565b600086825285602083015260a06040830152611b2b60a08301866116f9565b6001600160a01b0394909416606083015250608001529392505050565b9283526020830191909152604082015260600190565b600082611b7957634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611b9857611b98611bb4565b500290565b600082821015611baf57611baf611bb4565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114611bdf57600080fd5b5056fea264697066735822122097413c8fb74acbe9937954d827fd7bd11255ad969b1871a9d1465f13cd57a11464736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 114,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 3741,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "slippage",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 3748,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "whiteList",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 3750,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}