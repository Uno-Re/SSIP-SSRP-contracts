{
  "address": "0x9f897fa34cc25a0FFa6a3a7ABE28d90E339747D0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_claimAssessor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_capitalAgent",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Harvest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_requestAmount",
          "type": "uint256"
        }
      ],
      "name": "LeftPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_cancelAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_cancelAmountInUno",
          "type": "uint256"
        }
      ],
      "name": "LogCancelWithdrawRequest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_SSIP",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_rewarder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "LogCreateRewarder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_SSIP",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_syntheticSSIP",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_lpToken",
          "type": "address"
        }
      ],
      "name": "LogCreateSyntheticSSIP",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_riskPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_withdrawLpAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_withdrawUnoAmount",
          "type": "uint256"
        }
      ],
      "name": "LogLeaveFromPendingSSIP",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "LogLpTransferInSSIP",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_migrateTo",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_migratedAmount",
          "type": "uint256"
        }
      ],
      "name": "LogMigrate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        }
      ],
      "name": "LogSetExchangeAgent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "_lastRewardBlock",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lpSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_accUnoPerShare",
          "type": "uint256"
        }
      ],
      "name": "LogUpdatePool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_claimAmount",
          "type": "uint256"
        }
      ],
      "name": "PolicyClaim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_SSIP",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "RiskPoolCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "StakedInPool",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ACC_UNO_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LOCK_TIME",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKING_START_TIME",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelWithdrawRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "capitalAgent",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimAssessor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "createRewarder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rewardMultiplier",
          "type": "uint256"
        }
      ],
      "name": "createRiskPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "createSyntheticSSIP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "enterInPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "getStakedAmountPerUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "unoAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lpAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalWithdrawPendingAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getWithdrawRequestPerUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pendingAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pendingAmountInUno",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "originUnoAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "requestTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "harvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "leaveFromPending",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "leaveFromPoolInPending",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "lpTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "migrateTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "pendingUno",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pending",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "policyClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "lastRewardBlock",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "accUnoPerShare",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "unoMultiplierPerBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "riskPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_capitalAgent",
          "type": "address"
        }
      ],
      "name": "setCapitalAgent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimAssessor",
          "type": "address"
        }
      ],
      "name": "setClaimAssessor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        }
      ],
      "name": "setExchangeAgent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_lockTime",
          "type": "uint256"
        }
      ],
      "name": "setLockTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_migrateTo",
          "type": "address"
        }
      ],
      "name": "setMigrateTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minLPCapital",
          "type": "uint256"
        }
      ],
      "name": "setMinLPCapital",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardMultiplier",
          "type": "uint256"
        }
      ],
      "name": "setRewardMultiplier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        }
      ],
      "name": "setStakingStartTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "syntheticSSIP",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updatePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lastWithdrawTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x776f352c7101cf230060d87f158d2e741506e177f1200a139bbae0510c633362",
  "receipt": {
    "to": null,
    "from": "0x5569BDF4e02cec3fE459796e3d0e741616029fA4",
    "contractAddress": "0x9f897fa34cc25a0FFa6a3a7ABE28d90E339747D0",
    "transactionIndex": 2,
    "gasUsed": "3005001",
    "logsBloom": "0x
    "blockHash": "0x50e62d3336e3b9fa1032fe4e8d16ad9db9eb81688abf43a015d70fd51ab2aafc",
    "transactionHash": "0x776f352c7101cf230060d87f158d2e741506e177f1200a139bbae0510c633362",
    "logs": [],
    "blockNumber": 10002392,
    "cumulativeGasUsed": "3212669",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5569BDF4e02cec3fE459796e3d0e741616029fA4",
    "0x5569BDF4e02cec3fE459796e3d0e741616029fA4",
    "0x1E545CbA6E77CBfcBd0a7CAD9F2D8E0051F347D4",
    "0x254D75e01617455BC25258036e642Fb82bbfd0c9"
  ],
  "solcInputHash": "bf649fb54ad93792de572409f0dce774",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_claimAssessor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_capitalAgent\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_requestAmount\",\"type\":\"uint256\"}],\"name\":\"LeftPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_cancelAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_cancelAmountInUno\",\"type\":\"uint256\"}],\"name\":\"LogCancelWithdrawRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_SSIP\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_rewarder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"LogCreateRewarder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_SSIP\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_syntheticSSIP\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_lpToken\",\"type\":\"address\"}],\"name\":\"LogCreateSyntheticSSIP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_riskPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_withdrawLpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_withdrawUnoAmount\",\"type\":\"uint256\"}],\"name\":\"LogLeaveFromPendingSSIP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"LogLpTransferInSSIP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_migrateTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_migratedAmount\",\"type\":\"uint256\"}],\"name\":\"LogMigrate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"}],\"name\":\"LogSetExchangeAgent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"_lastRewardBlock\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lpSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_accUnoPerShare\",\"type\":\"uint256\"}],\"name\":\"LogUpdatePool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_claimAmount\",\"type\":\"uint256\"}],\"name\":\"PolicyClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_SSIP\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"RiskPoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"StakedInPool\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACC_UNO_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOCK_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_START_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelWithdrawRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"capitalAgent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAssessor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"createRewarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardMultiplier\",\"type\":\"uint256\"}],\"name\":\"createRiskPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"createSyntheticSSIP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterInPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"getStakedAmountPerUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"unoAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalWithdrawPendingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getWithdrawRequestPerUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pendingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingAmountInUno\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originUnoAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"leaveFromPending\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveFromPoolInPending\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"lpTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrateTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"pendingUno\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pending\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"policyClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"lastRewardBlock\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"accUnoPerShare\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"unoMultiplierPerBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"riskPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_capitalAgent\",\"type\":\"address\"}],\"name\":\"setCapitalAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimAssessor\",\"type\":\"address\"}],\"name\":\"setClaimAssessor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"}],\"name\":\"setExchangeAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lockTime\",\"type\":\"uint256\"}],\"name\":\"setLockTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_migrateTo\",\"type\":\"address\"}],\"name\":\"setMigrateTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minLPCapital\",\"type\":\"uint256\"}],\"name\":\"setMinLPCapital\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardMultiplier\",\"type\":\"uint256\"}],\"name\":\"setRewardMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"}],\"name\":\"setStakingStartTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syntheticSSIP\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastWithdrawTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createRiskPool(string,string,address,address,uint256)\":{\"details\":\"create Risk pool with UNO from SSIP owner\"},\"getTotalWithdrawPendingAmount()\":{\"details\":\"get total withdraw request amount in pending for the risk pool in UNO\"},\"getWithdrawRequestPerUser(address)\":{\"details\":\"get withdraw request amount in pending per user in UNO\"},\"leaveFromPending()\":{\"details\":\"user can submit claim again and receive his funds into his wallet after 10 days since last WR.\"},\"leaveFromPoolInPending(uint256)\":{\"details\":\"WR will be in pending for 10 days at least\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SingleSidedInsurancePool.sol\":\"SingleSidedInsurancePool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"contracts/SingleSidedInsurancePool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"./interfaces/ICapitalAgent.sol\\\";\\nimport \\\"./interfaces/IExchangeAgent.sol\\\";\\nimport \\\"./interfaces/IMigration.sol\\\";\\nimport \\\"./interfaces/IRewarderFactory.sol\\\";\\nimport \\\"./interfaces/IRiskPoolFactory.sol\\\";\\nimport \\\"./interfaces/ISingleSidedInsurancePool.sol\\\";\\nimport \\\"./interfaces/IRewarder.sol\\\";\\nimport \\\"./interfaces/IRiskPool.sol\\\";\\nimport \\\"./interfaces/ISyntheticSSIPFactory.sol\\\";\\nimport \\\"./libraries/TransferHelper.sol\\\";\\n\\ncontract SingleSidedInsurancePool is ISingleSidedInsurancePool, ReentrancyGuard {\\n    address public owner;\\n    address public claimAssessor;\\n    address private exchangeAgent;\\n    address public migrateTo;\\n    address public capitalAgent;\\n    address public syntheticSSIP;\\n\\n    uint256 public LOCK_TIME = 10 days;\\n    uint256 public constant ACC_UNO_PRECISION = 1e18;\\n    uint256 public STAKING_START_TIME;\\n\\n    address public rewarder;\\n    address public override riskPool;\\n    struct PoolInfo {\\n        uint128 lastRewardBlock;\\n        uint128 accUnoPerShare;\\n        uint256 unoMultiplierPerBlock;\\n    }\\n\\n    struct UserInfo {\\n        uint256 lastWithdrawTime;\\n        uint256 rewardDebt;\\n        uint256 amount;\\n    }\\n\\n    mapping(address => UserInfo) public userInfo;\\n\\n    PoolInfo public poolInfo;\\n\\n    event RiskPoolCreated(address indexed _SSIP, address indexed _pool);\\n    event StakedInPool(address indexed _staker, address indexed _pool, uint256 _amount);\\n    event LeftPool(address indexed _staker, address indexed _pool, uint256 _requestAmount);\\n    event LogUpdatePool(uint128 _lastRewardBlock, uint256 _lpSupply, uint256 _accUnoPerShare);\\n    event Harvest(address indexed _user, address indexed _receiver, uint256 _amount);\\n    event LogSetExchangeAgent(address indexed _exchangeAgent);\\n    event LogLeaveFromPendingSSIP(\\n        address indexed _user,\\n        address indexed _riskPool,\\n        uint256 _withdrawLpAmount,\\n        uint256 _withdrawUnoAmount\\n    );\\n    event PolicyClaim(address indexed _user, uint256 _claimAmount);\\n    event LogLpTransferInSSIP(address indexed _from, address indexed _to, uint256 _amount);\\n    event LogCreateRewarder(address indexed _SSIP, address indexed _rewarder, address _currency);\\n    event LogCreateSyntheticSSIP(address indexed _SSIP, address indexed _syntheticSSIP, address indexed _lpToken);\\n    event LogCancelWithdrawRequest(address indexed _user, uint256 _cancelAmount, uint256 _cancelAmountInUno);\\n    event LogMigrate(address indexed _user, address indexed _migrateTo, uint256 _migratedAmount);\\n\\n    constructor(\\n        address _owner,\\n        address _claimAssessor,\\n        address _exchangeAgent,\\n        address _capitalAgent\\n    ) {\\n        require(_owner != address(0), \\\"UnoRe: zero owner address\\\");\\n        require(_claimAssessor != address(0), \\\"UnoRe: zero claimAssessor address\\\");\\n        require(_exchangeAgent != address(0), \\\"UnoRe: zero exchangeAgent address\\\");\\n        require(_capitalAgent != address(0), \\\"UnoRe: zero capitalAgent address\\\");\\n        owner = _owner;\\n        exchangeAgent = _exchangeAgent;\\n        claimAssessor = _claimAssessor;\\n        capitalAgent = _capitalAgent;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"UnoRe: Forbidden\\\");\\n        _;\\n    }\\n\\n    modifier onlyClaimAssessor() {\\n        require(msg.sender == claimAssessor, \\\"UnoRe: Forbidden\\\");\\n        _;\\n    }\\n\\n    modifier isStartTime() {\\n        require(block.timestamp >= STAKING_START_TIME, \\\"UnoRe: not available time\\\");\\n        _;\\n    }\\n\\n    function setExchangeAgent(address _exchangeAgent) external onlyOwner {\\n        require(_exchangeAgent != address(0), \\\"UnoRe: zero address\\\");\\n        exchangeAgent = _exchangeAgent;\\n        emit LogSetExchangeAgent(_exchangeAgent);\\n    }\\n\\n    function setCapitalAgent(address _capitalAgent) external onlyOwner {\\n        require(_capitalAgent != address(0), \\\"UnoRe: zero address\\\");\\n        capitalAgent = _capitalAgent;\\n    }\\n\\n    function setRewardMultiplier(uint256 _rewardMultiplier) external onlyOwner {\\n        require(_rewardMultiplier > 0, \\\"UnoRe: zero value\\\");\\n        poolInfo.unoMultiplierPerBlock = _rewardMultiplier;\\n    }\\n\\n    function setClaimAssessor(address _claimAssessor) external onlyOwner {\\n        require(_claimAssessor != address(0), \\\"UnoRe: zero address\\\");\\n        claimAssessor = _claimAssessor;\\n    }\\n\\n    function setMigrateTo(address _migrateTo) external onlyOwner {\\n        require(_migrateTo != address(0), \\\"UnoRe: zero address\\\");\\n        migrateTo = _migrateTo;\\n    }\\n\\n    function setMinLPCapital(uint256 _minLPCapital) external onlyOwner {\\n        require(_minLPCapital > 0, \\\"UnoRe: not allow zero value\\\");\\n        IRiskPool(riskPool).setMinLPCapital(_minLPCapital);\\n    }\\n\\n    function setLockTime(uint256 _lockTime) external onlyOwner {\\n        require(_lockTime > 0, \\\"UnoRe: not allow zero lock time\\\");\\n        LOCK_TIME = _lockTime;\\n    }\\n\\n    function setStakingStartTime(uint256 _startTime) external onlyOwner {\\n        STAKING_START_TIME = _startTime + block.timestamp;\\n    }\\n\\n    /**\\n     * @dev create Risk pool with UNO from SSIP owner\\n     */\\n    function createRiskPool(\\n        string calldata _name,\\n        string calldata _symbol,\\n        address _factory,\\n        address _currency,\\n        uint256 _rewardMultiplier\\n    ) external onlyOwner nonReentrant {\\n        require(riskPool == address(0), \\\"UnoRe: risk pool created already\\\");\\n        riskPool = IRiskPoolFactory(_factory).newRiskPool(_name, _symbol, address(this), _currency);\\n        poolInfo.lastRewardBlock = uint128(block.number);\\n        poolInfo.accUnoPerShare = 0;\\n        poolInfo.unoMultiplierPerBlock = _rewardMultiplier;\\n        ICapitalAgent(capitalAgent).addPool(address(this));\\n        emit RiskPoolCreated(address(this), riskPool);\\n    }\\n\\n    function createRewarder(\\n        address _operator,\\n        address _factory,\\n        address _currency\\n    ) external onlyOwner nonReentrant {\\n        require(_factory != address(0), \\\"UnoRe: rewarder factory no exist\\\");\\n        rewarder = IRewarderFactory(_factory).newRewarder(_operator, _currency, address(this));\\n        emit LogCreateRewarder(address(this), rewarder, _currency);\\n    }\\n\\n    function createSyntheticSSIP(address _owner, address _factory) external onlyOwner nonReentrant {\\n        require(_owner != address(0), \\\"UnoRe: zero owner address\\\");\\n        require(_factory != address(0), \\\"UnoRe:zero factory address\\\");\\n        require(riskPool != address(0), \\\"UnoRe:zero LP token address\\\");\\n        syntheticSSIP = ISyntheticSSIPFactory(_factory).newSyntheticSSIP(_owner, riskPool);\\n        emit LogCreateSyntheticSSIP(address(this), syntheticSSIP, riskPool);\\n    }\\n\\n    function migrate() external nonReentrant {\\n        require(migrateTo != address(0), \\\"UnoRe: zero address\\\");\\n        _harvest(msg.sender);\\n        uint256 lpPrice = IRiskPool(riskPool).lpPriceUno();\\n        uint256 amount = userInfo[msg.sender].amount;\\n        bool isUnLocked = block.timestamp - userInfo[msg.sender].lastWithdrawTime > LOCK_TIME;\\n        uint256 migratedAmount = IRiskPool(riskPool).migrateLP(msg.sender, migrateTo, isUnLocked);\\n        ICapitalAgent(capitalAgent).SSIPPolicyCaim((amount * lpPrice) / 1e18);\\n        IMigration(migrateTo).onMigration(msg.sender, amount, \\\"\\\");\\n        userInfo[msg.sender].amount = 0;\\n        userInfo[msg.sender].rewardDebt = 0;\\n        emit LogMigrate(msg.sender, migrateTo, migratedAmount);\\n    }\\n\\n    function pendingUno(address _to) external view returns (uint256 pending) {\\n        uint256 tokenSupply = IERC20(riskPool).totalSupply();\\n        uint128 accUnoPerShare = poolInfo.accUnoPerShare;\\n        if (block.number > poolInfo.lastRewardBlock && tokenSupply != 0) {\\n            uint256 blocks = block.number - uint256(poolInfo.lastRewardBlock);\\n            uint256 unoReward = blocks * poolInfo.unoMultiplierPerBlock;\\n            accUnoPerShare = accUnoPerShare + uint128((unoReward * ACC_UNO_PRECISION) / tokenSupply);\\n        }\\n        uint256 userBalance = userInfo[_to].amount;\\n        pending = (userBalance * uint256(accUnoPerShare)) / ACC_UNO_PRECISION - userInfo[_to].rewardDebt;\\n    }\\n\\n    function updatePool() public override {\\n        if (block.number > poolInfo.lastRewardBlock) {\\n            uint256 tokenSupply = IERC20(riskPool).totalSupply();\\n            if (tokenSupply > 0) {\\n                uint256 blocks = block.number - uint256(poolInfo.lastRewardBlock);\\n                uint256 unoReward = blocks * poolInfo.unoMultiplierPerBlock;\\n                poolInfo.accUnoPerShare = poolInfo.accUnoPerShare + uint128(((unoReward * ACC_UNO_PRECISION) / tokenSupply));\\n            }\\n            poolInfo.lastRewardBlock = uint128(block.number);\\n            emit LogUpdatePool(poolInfo.lastRewardBlock, tokenSupply, poolInfo.accUnoPerShare);\\n        }\\n    }\\n\\n    function enterInPool(uint256 _amount) external override isStartTime nonReentrant {\\n        require(_amount != 0, \\\"UnoRe: ZERO Value\\\");\\n        updatePool();\\n        address token = IRiskPool(riskPool).currency();\\n        uint256 lpPriceUno = IRiskPool(riskPool).lpPriceUno();\\n        TransferHelper.safeTransferFrom(token, msg.sender, riskPool, _amount);\\n        IRiskPool(riskPool).enter(msg.sender, _amount);\\n        userInfo[msg.sender].rewardDebt =\\n            userInfo[msg.sender].rewardDebt +\\n            ((_amount * 1e18 * uint256(poolInfo.accUnoPerShare)) / lpPriceUno) /\\n            ACC_UNO_PRECISION;\\n        userInfo[msg.sender].amount = userInfo[msg.sender].amount + ((_amount * 1e18) / lpPriceUno);\\n        ICapitalAgent(capitalAgent).SSIPStaking(_amount);\\n        emit StakedInPool(msg.sender, riskPool, _amount);\\n    }\\n\\n    /**\\n     * @dev WR will be in pending for 10 days at least\\n     */\\n    function leaveFromPoolInPending(uint256 _amount) external override isStartTime nonReentrant {\\n        _harvest(msg.sender);\\n        require(ICapitalAgent(capitalAgent).checkCapitalByMCR(_amount), \\\"UnoRe: minimum capital underflow\\\");\\n        // Withdraw desired amount from pool\\n        uint256 amount = userInfo[msg.sender].amount;\\n        uint256 lpPriceUno = IRiskPool(riskPool).lpPriceUno();\\n        (uint256 pendingAmount, , ) = IRiskPool(riskPool).getWithdrawRequest(msg.sender);\\n        require(((amount - pendingAmount) * lpPriceUno) / 1e18 >= _amount, \\\"UnoRe: withdraw amount overflow\\\");\\n        IRiskPool(riskPool).leaveFromPoolInPending(msg.sender, _amount);\\n\\n        userInfo[msg.sender].lastWithdrawTime = block.timestamp;\\n        emit LeftPool(msg.sender, riskPool, _amount);\\n    }\\n\\n    /**\\n     * @dev user can submit claim again and receive his funds into his wallet after 10 days since last WR.\\n     */\\n    function leaveFromPending() external override isStartTime nonReentrant {\\n        require(block.timestamp - userInfo[msg.sender].lastWithdrawTime >= LOCK_TIME, \\\"UnoRe: Locked time\\\");\\n        _harvest(msg.sender);\\n        uint256 amount = userInfo[msg.sender].amount;\\n        (uint256 pendingAmount, , uint256 pendingAmountInUNO) = IRiskPool(riskPool).getWithdrawRequest(msg.sender);\\n        ICapitalAgent(capitalAgent).SSIPWithdraw(pendingAmountInUNO);\\n\\n        uint256 accumulatedUno = (amount * uint256(poolInfo.accUnoPerShare)) / ACC_UNO_PRECISION;\\n        userInfo[msg.sender].rewardDebt =\\n            accumulatedUno -\\n            ((pendingAmount * uint256(poolInfo.accUnoPerShare)) / ACC_UNO_PRECISION);\\n        (uint256 withdrawAmount, uint256 withdrawAmountInUNO) = IRiskPool(riskPool).leaveFromPending(msg.sender);\\n        userInfo[msg.sender].amount = amount - withdrawAmount;\\n        emit LogLeaveFromPendingSSIP(msg.sender, riskPool, withdrawAmount, withdrawAmountInUNO);\\n    }\\n\\n    function lpTransfer(\\n        address _from,\\n        address _to,\\n        uint256 _amount\\n    ) external override nonReentrant {\\n        require(msg.sender == address(riskPool), \\\"UnoRe: not allow others transfer\\\");\\n        if (_from != syntheticSSIP && _to != syntheticSSIP) {\\n            _harvest(_from);\\n            uint256 amount = userInfo[_from].amount;\\n            (uint256 pendingAmount, , ) = IRiskPool(riskPool).getWithdrawRequest(_from);\\n            require(amount - pendingAmount >= _amount, \\\"UnoRe: balance overflow\\\");\\n            uint256 accumulatedUno = (amount * uint256(poolInfo.accUnoPerShare)) / ACC_UNO_PRECISION;\\n            userInfo[_from].rewardDebt = accumulatedUno - ((_amount * uint256(poolInfo.accUnoPerShare)) / ACC_UNO_PRECISION);\\n            userInfo[_from].amount = amount - _amount;\\n\\n            userInfo[_to].rewardDebt =\\n                userInfo[_to].rewardDebt +\\n                ((_amount * uint256(poolInfo.accUnoPerShare)) / ACC_UNO_PRECISION);\\n            userInfo[_to].amount = userInfo[_to].amount + _amount;\\n\\n            emit LogLpTransferInSSIP(_from, _to, _amount);\\n        }\\n    }\\n\\n    function harvest(address _to) external override isStartTime nonReentrant {\\n        _harvest(_to);\\n    }\\n\\n    function _harvest(address _to) private {\\n        updatePool();\\n        uint256 amount = userInfo[_to].amount;\\n        uint256 accumulatedUno = (amount * uint256(poolInfo.accUnoPerShare)) / ACC_UNO_PRECISION;\\n        uint256 _pendingUno = accumulatedUno - userInfo[_to].rewardDebt;\\n\\n        // Effects\\n        userInfo[msg.sender].rewardDebt = accumulatedUno;\\n        uint256 rewardAmount = 0;\\n\\n        if (rewarder != address(0) && _pendingUno != 0) {\\n            rewardAmount = IRewarder(rewarder).onReward(_to, _pendingUno);\\n        }\\n\\n        emit Harvest(msg.sender, _to, rewardAmount);\\n    }\\n\\n    function cancelWithdrawRequest() external nonReentrant {\\n        (uint256 cancelAmount, uint256 cancelAmountInUno) = IRiskPool(riskPool).cancelWithrawRequest(msg.sender);\\n        emit LogCancelWithdrawRequest(msg.sender, cancelAmount, cancelAmountInUno);\\n    }\\n\\n    function policyClaim(address _to, uint256 _amount) external onlyClaimAssessor isStartTime nonReentrant {\\n        require(_to != address(0), \\\"UnoRe: zero address\\\");\\n        require(_amount > 0, \\\"UnoRe: zero amount\\\");\\n        uint256 realClaimAmount = IRiskPool(riskPool).policyClaim(_to, _amount);\\n        ICapitalAgent(capitalAgent).SSIPPolicyCaim(realClaimAmount);\\n        emit PolicyClaim(_to, realClaimAmount);\\n    }\\n\\n    function getStakedAmountPerUser(address _to) external view returns (uint256 unoAmount, uint256 lpAmount) {\\n        lpAmount = userInfo[_to].amount;\\n        uint256 lpPriceUno = IRiskPool(riskPool).lpPriceUno();\\n        unoAmount = (lpAmount * lpPriceUno) / 1e18;\\n    }\\n\\n    /**\\n     * @dev get withdraw request amount in pending per user in UNO\\n     */\\n    function getWithdrawRequestPerUser(address _user)\\n        external\\n        view\\n        returns (\\n            uint256 pendingAmount,\\n            uint256 pendingAmountInUno,\\n            uint256 originUnoAmount,\\n            uint256 requestTime\\n        )\\n    {\\n        uint256 lpPriceUno = IRiskPool(riskPool).lpPriceUno();\\n        (pendingAmount, requestTime, originUnoAmount) = IRiskPool(riskPool).getWithdrawRequest(_user);\\n        pendingAmountInUno = (pendingAmount * lpPriceUno) / 1e18;\\n    }\\n\\n    /**\\n     * @dev get total withdraw request amount in pending for the risk pool in UNO\\n     */\\n    function getTotalWithdrawPendingAmount() external view returns (uint256) {\\n        return IRiskPool(riskPool).getTotalWithdrawRequestAmount();\\n    }\\n}\\n\",\"keccak256\":\"0xbcbd6e0e78275e0d5985136d99add2768c030fe97005dfa756177bae7632bb79\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ICapitalAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\ninterface ICapitalAgent {\\n    function addPool(address _ssip) external;\\n\\n    function setPolicy(address _policy) external;\\n\\n    function SSIPWithdraw(uint256 _withdrawAmount) external;\\n\\n    function SSIPStaking(uint256 _stakingAmount) external;\\n\\n    function SSIPPolicyCaim(uint256 _withdrawAmount) external;\\n\\n    function checkCapitalByMCR(uint256 _withdrawAmount) external view returns (bool);\\n\\n    function checkCoverageByMLR(uint256 _coverageAmount) external view returns (bool);\\n\\n    function policySale(uint256 _coverageAmount) external;\\n\\n    function updatePolicyStatus(uint256 _policyId) external;\\n}\\n\",\"keccak256\":\"0xac51d31953a3ce50959e6ebdab4e121d4a00a7d1714862fd47dca5d5c2973eb5\",\"license\":\"MIT\"},\"contracts/interfaces/IExchangeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\ninterface IExchangeAgent {\\n    function USDC_TOKEN() external view returns (address);\\n\\n    function getTokenAmountForUSDC(address _token, uint256 _usdtAmount) external view returns (uint256);\\n\\n    function getETHAmountForUSDC(uint256 _usdtAmount) external view returns (uint256);\\n\\n    function getETHAmountForToken(address _token, uint256 _tokenAmount) external view returns (uint256);\\n\\n    function getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external view returns (uint256);\\n\\n    function convertForToken(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external returns (uint256);\\n\\n    function convertForETH(address _token, uint256 _convertAmount) external returns (uint256);\\n}\\n\",\"keccak256\":\"0xac695d6d1b861eb9f84ac2009f97fd5b00d44500b6735fb9256f1c227323e07e\",\"license\":\"MIT\"},\"contracts/interfaces/IMigration.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\ninterface IMigration {\\n    function onMigration(\\n        address who_,\\n        uint256 amount_,\\n        bytes memory data_\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6b25ec77b6df9db73050a67b9ce4147154c5be596b6637d47484fd6236965069\",\"license\":\"MIT\"},\"contracts/interfaces/IRewarder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.0;\\n\\ninterface IRewarder {\\n    function currency() external view returns (address);\\n\\n    function onReward(address to, uint256 unoAmount) external payable returns (uint256);\\n}\\n\",\"keccak256\":\"0x6e37fd84127d6039965b097e57e45f79630c1313d9d841176ce8a8e2ec16b83b\",\"license\":\"MIT\"},\"contracts/interfaces/IRewarderFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface IRewarderFactory {\\n    function newRewarder(\\n        address _operator,\\n        address _currency,\\n        address _pool\\n    ) external returns (address);\\n}\\n\",\"keccak256\":\"0x14d54228edcd08203983b293cfa44cc13cf1fb450019172ef57a1ebccf89f4a2\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IRiskPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface IRiskPool {\\n    function enter(address _from, uint256 _amount) external;\\n\\n    function leaveFromPoolInPending(address _to, uint256 _amount) external;\\n\\n    function leaveFromPending(address _to) external returns (uint256, uint256);\\n\\n    function cancelWithrawRequest(address _to) external returns (uint256, uint256);\\n\\n    function policyClaim(address _to, uint256 _amount) external returns (uint256 realClaimAmount);\\n\\n    function migrateLP(\\n        address _to,\\n        address _migrateTo,\\n        bool _isUnLocked\\n    ) external returns (uint256);\\n\\n    function setMinLPCapital(uint256 _minLPCapital) external;\\n\\n    function currency() external view returns (address);\\n\\n    function getTotalWithdrawRequestAmount() external view returns (uint256);\\n\\n    function getWithdrawRequest(address _to)\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256\\n        );\\n\\n    function lpPriceUno() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xf70acb54582191fcc1287662ea59e713bd4f5b504fc54a1de9278322cc900b67\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IRiskPoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface IRiskPoolFactory {\\n    function newRiskPool(\\n        string calldata _name,\\n        string calldata _symbol,\\n        address _pool,\\n        address _currency\\n    ) external returns (address);\\n}\\n\",\"keccak256\":\"0x2822333ced0a43d8bf0c0a4a4a0ed6718e2b5cfd55792fd89e5d06211f57898e\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ISingleSidedInsurancePool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface ISingleSidedInsurancePool {\\n    function updatePool() external;\\n\\n    function enterInPool(uint256 _amount) external;\\n\\n    function leaveFromPoolInPending(uint256 _amount) external;\\n\\n    function leaveFromPending() external;\\n\\n    function harvest(address _to) external;\\n\\n    function lpTransfer(\\n        address _from,\\n        address _to,\\n        uint256 _amount\\n    ) external;\\n\\n    function riskPool() external view returns (address);\\n}\\n\",\"keccak256\":\"0x8f34cb3f24d9ab3a8272c3bb9ea752afe5c6f9fe84ff65a9c1a22cee27165052\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ISyntheticSSIPFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface ISyntheticSSIPFactory {\\n    function newSyntheticSSIP(address _owner, address _lpToken) external returns (address);\\n}\\n\",\"keccak256\":\"0xfea09577a47f75aee3718d3f0173853ecfc3768fa86bc97da50e3f736c49725d\",\"license\":\"GPL-3.0\"},\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.0;\\n\\n// from Uniswap TransferHelper library\\nlibrary TransferHelper {\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeApprove: approve failed\\\");\\n    }\\n\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeTransfer: transfer failed\\\");\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::transferFrom: transferFrom failed\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"TransferHelper::safeTransferETH: ETH transfer failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xb7650ccd26cfa42968350d9c477f55f98059d74e0f173a1da45b06c2607e705d\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x6080604052620d2f006007553480156200001857600080fd5b5060405162003584380380620035848339810160408190526200003b916200015d565b60016000556001600160a01b038416620000725760405162461bcd60e51b81526004016200006990620001ee565b60405180910390fd5b6001600160a01b0383166200009b5760405162461bcd60e51b8152600401620000699062000266565b6001600160a01b038216620000c45760405162461bcd60e51b8152600401620000699062000225565b6001600160a01b038116620000ed5760405162461bcd60e51b81526004016200006990620001b9565b600180546001600160a01b03199081166001600160a01b039687161790915560038054821693861693909317909255600280548316938516939093179092556005805490911691909216179055620002a7565b80516001600160a01b03811681146200015857600080fd5b919050565b6000806000806080858703121562000173578384fd5b6200017e8562000140565b93506200018e6020860162000140565b92506200019e6040860162000140565b9150620001ae6060860162000140565b905092959194509250565b6020808252818101527f556e6f52653a207a65726f206361706974616c4167656e742061646472657373604082015260600190565b60208082526019908201527f556e6f52653a207a65726f206f776e6572206164647265737300000000000000604082015260600190565b60208082526021908201527f556e6f52653a207a65726f2065786368616e67654167656e74206164647265736040820152607360f81b606082015260800190565b60208082526021908201527f556e6f52653a207a65726f20636c61696d4173736573736f72206164647265736040820152607360f81b606082015260800190565b6132cd80620002b76000396000f3fe608060405234801561001057600080fd5b506004361061025c5760003560e01c80639336f40611610145578063c4e5dacf116100bd578063dcc3e06e1161008c578063e19e716811610071578063e19e71681461049b578063e3161ddd146104a3578063e3824a38146104ab5761025c565b8063dcc3e06e14610480578063e08c5de1146104885761025c565b8063c4e5dacf14610460578063c6e8991514610468578063cd87c83c14610470578063dba6f962146104785761025c565b8063ae04d45d11610114578063ba619457116100f9578063ba61945714610424578063bc8f882814610445578063c2eb8eb91461044d5761025c565b8063ae04d45d146103fe578063af16d6e0146104115761025c565b80639336f406146103b857806393b6b86c146103db57806398c6e760146103ee578063a3bdd632146103f65761025c565b806342198160116101d85780638395206c116101a75780638ba04b171161018c5780638ba04b17146103955780638da5cb5b146103a85780638fd3ab80146103b05761025c565b80638395206c1461037a57806389919b711461038d5761025c565b806342198160146103285780635a2f3d091461033d5780635d90bad914610354578063736ec05c146103675761025c565b806318a00d8e1161022f5780631b600ca2116102145780631b600ca2146102ed5780632e4a014214610300578063413d9c3a146103135761025c565b806318a00d8e146102af5780631959a002146102c25761025c565b80630bd075a1146102615780630e5c011e146102765780630e9ae42014610289578063157f71ed1461029c575b600080fd5b61027461026f366004612acc565b6104be565b005b6102746102843660046128e3565b610516565b6102746102973660046129a4565b610571565b6102746102aa3660046128e3565b610869565b6102746102bd3660046128e3565b6108db565b6102d56102d03660046128e3565b610975565b6040516102e49392919061319f565b60405180910390f35b6102746102fb366004612922565b610996565b61027461030e3660046129e4565b610b3d565b61031b610d2a565b6040516102e49190613188565b610330610d30565b6040516102e49190612baf565b610345610d3f565b6040516102e493929190613141565b610274610362366004612acc565b610d5d565b6102746103753660046128e3565b610d97565b610274610388366004612acc565b610e09565b61031b611124565b6102746103a3366004612a2f565b611130565b61033061131f565b61027461132e565b6103cb6103c63660046128e3565b6115fe565b6040516102e494939291906131b5565b6102746103e9366004612acc565b61173c565b6103306117eb565b61031b6117fa565b61027461040c366004612acc565b61187c565b61027461041f36600461295a565b6118cb565b6104376104323660046128e3565b611a2a565b6040516102e4929190613191565b610274611ae5565b61027461045b3660046128e3565b611df4565b610330611e66565b610330611e75565b610330611e84565b61031b611e93565b610330611e99565b61031b6104963660046128e3565b611ea8565b610274612012565b61027461210d565b6102746104b9366004612acc565b6122a3565b6001546001600160a01b031633146104f15760405162461bcd60e51b81526004016104e890612ffb565b60405180910390fd5b600081116105115760405162461bcd60e51b81526004016104e890612e7c565b600d55565b6008544210156105385760405162461bcd60e51b81526004016104e890613067565b6002600054141561055b5760405162461bcd60e51b81526004016104e89061309e565b600260005561056981612605565b506001600055565b600260005414156105945760405162461bcd60e51b81526004016104e89061309e565b6002600055600a546001600160a01b031633146105c35760405162461bcd60e51b81526004016104e89061310c565b6006546001600160a01b038481169116148015906105ef57506006546001600160a01b03838116911614155b1561085f576105fd83612605565b6001600160a01b038084166000908152600b602052604080822060020154600a549151631665744b60e11b815290939190911690632ccae89690610645908890600401612baf565b60606040518083038186803b15801561065d57600080fd5b505afa158015610671573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106959190612b1f565b505090508281836106a69190613252565b10156106c45760405162461bcd60e51b81526004016104e890612dd9565b600c54600090670de0b6b3a7640000906106ee90600160801b90046001600160801b031685613233565b6106f89190613213565b600c54909150670de0b6b3a76400009061072290600160801b90046001600160801b031686613233565b61072c9190613213565b6107369082613252565b6001600160a01b0387166000908152600b602052604090206001015561075c8484613252565b6001600160a01b0387166000908152600b6020526040902060020155600c54670de0b6b3a76400009061079f90600160801b90046001600160801b031686613233565b6107a99190613213565b6001600160a01b0386166000908152600b60205260409020600101546107cf91906131fb565b6001600160a01b0386166000908152600b602052604090206001810191909155600201546107fe9085906131fb565b6001600160a01b038087166000818152600b602052604090819020600201939093559151908816907fabc254a3e8b16a8605ce22e693a6e493e375434011c1a7ff082d09e2a84ad12190610853908890613188565b60405180910390a35050505b5050600160005550565b6001546001600160a01b031633146108935760405162461bcd60e51b81526004016104e890612ffb565b6001600160a01b0381166108b95760405162461bcd60e51b81526004016104e890612cd7565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146109055760405162461bcd60e51b81526004016104e890612ffb565b6001600160a01b03811661092b5760405162461bcd60e51b81526004016104e890612cd7565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fbdca3ec80f8567aeaf30c6168374c798baf11902e9b21c2b8ba3186ffd13012290600090a250565b600b6020526000908152604090208054600182015460029092015490919083565b6001546001600160a01b031633146109c05760405162461bcd60e51b81526004016104e890612ffb565b600260005414156109e35760405162461bcd60e51b81526004016104e89061309e565b60026000556001600160a01b038216610a0e5760405162461bcd60e51b81526004016104e890612f21565b6001600160a01b038116610a345760405162461bcd60e51b81526004016104e890612d0e565b600a546001600160a01b0316610a5c5760405162461bcd60e51b81526004016104e890612eea565b600a54604051631a8a8b3b60e11b81526001600160a01b0380841692633515167692610a8e9287921690600401612bc3565b602060405180830381600087803b158015610aa857600080fd5b505af1158015610abc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae09190612906565b600680546001600160a01b0319166001600160a01b039283161790819055600a5460405190831692919091169030907e1129b9865226cebad4acf884618ae0607fff06758062b050509602db7065f090600090a450506001600055565b6002546001600160a01b03163314610b675760405162461bcd60e51b81526004016104e890612ffb565b600854421015610b895760405162461bcd60e51b81526004016104e890613067565b60026000541415610bac5760405162461bcd60e51b81526004016104e89061309e565b60026000556001600160a01b038216610bd75760405162461bcd60e51b81526004016104e890612cd7565b60008111610bf75760405162461bcd60e51b81526004016104e890612eb3565b600a5460405163172500a160e11b81526000916001600160a01b031690632e4a014290610c2a9086908690600401612c48565b602060405180830381600087803b158015610c4457600080fd5b505af1158015610c58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7c9190612ae4565b60055460405163167afee560e31b81529192506001600160a01b03169063b3d7f72890610cad908490600401613188565b600060405180830381600087803b158015610cc757600080fd5b505af1158015610cdb573d6000803e3d6000fd5b50505050826001600160a01b03167f6420c9536b9a539410a930b1fd8d115dc296d8b71426dcc0ab64f2f736b7d59f82604051610d189190613188565b60405180910390a25050600160005550565b60075481565b6005546001600160a01b031681565b600c54600d546001600160801b0380831692600160801b9004169083565b6001546001600160a01b03163314610d875760405162461bcd60e51b81526004016104e890612ffb565b610d9142826131fb565b60085550565b6001546001600160a01b03163314610dc15760405162461bcd60e51b81526004016104e890612ffb565b6001600160a01b038116610de75760405162461bcd60e51b81526004016104e890612cd7565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600854421015610e2b5760405162461bcd60e51b81526004016104e890613067565b60026000541415610e4e5760405162461bcd60e51b81526004016104e89061309e565b6002600055610e5c33612605565b600554604051630be304cf60e41b81526001600160a01b039091169063be304cf090610e8c908490600401613188565b60206040518083038186803b158015610ea457600080fd5b505afa158015610eb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edc9190612a0f565b610ef85760405162461bcd60e51b81526004016104e890612f58565b336000908152600b6020908152604080832060020154600a548251627a9fd960e91b815292519194936001600160a01b039091169263f53fb2009260048083019392829003018186803b158015610f4e57600080fd5b505afa158015610f62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f869190612ae4565b600a54604051631665744b60e11b81529192506000916001600160a01b0390911690632ccae89690610fbc903390600401612baf565b60606040518083038186803b158015610fd457600080fd5b505afa158015610fe8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100c9190612b1f565b5050905083670de0b6b3a76400008383866110279190613252565b6110319190613233565b61103b9190613213565b10156110595760405162461bcd60e51b81526004016104e890612d45565b600a546040516323de6d9560e11b81526001600160a01b03909116906347bcdb2a9061108b9033908890600401612c48565b600060405180830381600087803b1580156110a557600080fd5b505af11580156110b9573d6000803e3d6000fd5b5050336000818152600b602052604090819020429055600a5490516001600160a01b0390911693509091507f940a14c75c418e7230a2e65567722d2dda5a6713cf71b369bd0fa219fdc1ac5e90611111908890613188565b60405180910390a3505060016000555050565b670de0b6b3a764000081565b6001546001600160a01b0316331461115a5760405162461bcd60e51b81526004016104e890612ffb565b6002600054141561117d5760405162461bcd60e51b81526004016104e89061309e565b6002600055600a546001600160a01b0316156111ab5760405162461bcd60e51b81526004016104e890612e10565b604051630d98e31f60e01b81526001600160a01b03841690630d98e31f906111e1908a908a908a908a9030908a90600401612c89565b602060405180830381600087803b1580156111fb57600080fd5b505af115801561120f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112339190612906565b600a80546001600160a01b0319166001600160a01b03928316179055600c80546fffffffffffffffffffffffffffffffff1916436001600160801b0390811691909117169055600d82905560055460405163d914cd4b60e01b815291169063d914cd4b906112a5903090600401612baf565b600060405180830381600087803b1580156112bf57600080fd5b505af11580156112d3573d6000803e3d6000fd5b5050600a546040516001600160a01b0390911692503091507f184d7691bf4a73930a21086fa1bdf0ee3075421531a60730288325fd5838021790600090a3505060016000555050505050565b6001546001600160a01b031681565b600260005414156113515760405162461bcd60e51b81526004016104e89061309e565b60026000556004546001600160a01b031661137e5760405162461bcd60e51b81526004016104e890612cd7565b61138733612605565b600a5460408051627a9fd960e91b815290516000926001600160a01b03169163f53fb200916004808301926020929190829003018186803b1580156113cb57600080fd5b505afa1580156113df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114039190612ae4565b336000908152600b60205260408120600281015460075491549394509261142a9042613252565b600a5460048054604051633613302f60e01b81529490931194506000936001600160a01b0392831693633613302f9361146c9333939290911691889101612c00565b602060405180830381600087803b15801561148657600080fd5b505af115801561149a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114be9190612ae4565b6005549091506001600160a01b031663b3d7f728670de0b6b3a76400006114e58787613233565b6114ef9190613213565b6040518263ffffffff1660e01b815260040161150b9190613188565b600060405180830381600087803b15801561152557600080fd5b505af1158015611539573d6000803e3d6000fd5b50506004805460405163ed59344b60e01b81526001600160a01b03909116935063ed59344b925061156e913391889101612c61565b600060405180830381600087803b15801561158857600080fd5b505af115801561159c573d6000803e3d6000fd5b5050336000818152600b6020526040808220600281018390556001019190915560045490516001600160a01b0390911693509091507ff0fee1f70845d356d6a3e0baa0944ce846437b6469ea89416dad2cd7067919a490611111908590613188565b6000806000806000600a60009054906101000a90046001600160a01b03166001600160a01b031663f53fb2006040518163ffffffff1660e01b815260040160206040518083038186803b15801561165457600080fd5b505afa158015611668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168c9190612ae4565b600a54604051631665744b60e11b81529192506001600160a01b031690632ccae896906116bd908990600401612baf565b60606040518083038186803b1580156116d557600080fd5b505afa1580156116e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170d9190612b1f565b9196509093509150670de0b6b3a76400006117288287613233565b6117329190613213565b9350509193509193565b6001546001600160a01b031633146117665760405162461bcd60e51b81526004016104e890612ffb565b600081116117865760405162461bcd60e51b81526004016104e8906130d5565b600a546040516324edae1b60e21b81526001600160a01b03909116906393b6b86c906117b6908490600401613188565b600060405180830381600087803b1580156117d057600080fd5b505af11580156117e4573d6000803e3d6000fd5b5050505050565b6004546001600160a01b031681565b600a546040805163e95aa8d360e01b815290516000926001600160a01b03169163e95aa8d3916004808301926020929190829003018186803b15801561183f57600080fd5b505afa158015611853573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118779190612ae4565b905090565b6001546001600160a01b031633146118a65760405162461bcd60e51b81526004016104e890612ffb565b600081116118c65760405162461bcd60e51b81526004016104e890612f8d565b600755565b6001546001600160a01b031633146118f55760405162461bcd60e51b81526004016104e890612ffb565b600260005414156119185760405162461bcd60e51b81526004016104e89061309e565b60026000556001600160a01b0382166119435760405162461bcd60e51b81526004016104e890613032565b6040516369ee745160e01b81526001600160a01b038316906369ee74519061197390869085903090600401612bdd565b602060405180830381600087803b15801561198d57600080fd5b505af11580156119a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c59190612906565b600980546001600160a01b0319166001600160a01b03928316179081905560405191169030907f6c409a36847a0a3870deae25f656f4300d45957d2643fc27faab145e19cfcf1b90611a18908590612baf565b60405180910390a35050600160005550565b6001600160a01b038082166000908152600b6020908152604080832060020154600a548251627a9fd960e91b81529251949591948694919092169263f53fb2009260048083019392829003018186803b158015611a8657600080fd5b505afa158015611a9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611abe9190612ae4565b9050670de0b6b3a7640000611ad38284613233565b611add9190613213565b925050915091565b600854421015611b075760405162461bcd60e51b81526004016104e890613067565b60026000541415611b2a5760405162461bcd60e51b81526004016104e89061309e565b60026000908155600754338252600b602052604090912054611b4c9042613252565b1015611b6a5760405162461bcd60e51b81526004016104e890612e45565b611b7333612605565b336000818152600b602052604080822060020154600a549151631665744b60e11b8152909383926001600160a01b031691632ccae89691611bb691600401612baf565b60606040518083038186803b158015611bce57600080fd5b505afa158015611be2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c069190612b1f565b600554604051632da26abb60e11b81529395509093506001600160a01b031691635b44d5769150611c3b908490600401613188565b600060405180830381600087803b158015611c5557600080fd5b505af1158015611c69573d6000803e3d6000fd5b5050600c5460009250670de0b6b3a76400009150611c9790600160801b90046001600160801b031686613233565b611ca19190613213565b600c54909150670de0b6b3a764000090611ccb90600160801b90046001600160801b031685613233565b611cd59190613213565b611cdf9082613252565b336000818152600b602052604080822060010193909355600a54925163b20ecd1560e01b8152909283926001600160a01b039091169163b20ecd1591611d2791600401612baf565b6040805180830381600087803b158015611d4057600080fd5b505af1158015611d54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d789190612afc565b9092509050611d878287613252565b336000818152600b60205260409081902060020192909255600a5491516001600160a01b03909216917fced2424eb51507abd1611ac0d9893e5bc6b6d0a0596b53f86d24d31fc75a5d6090611ddf9086908690613191565b60405180910390a35050600160005550505050565b6001546001600160a01b03163314611e1e5760405162461bcd60e51b81526004016104e890612ffb565b6001600160a01b038116611e445760405162461bcd60e51b81526004016104e890612cd7565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b600a546001600160a01b031681565b6002546001600160a01b031681565b6006546001600160a01b031681565b60085481565b6009546001600160a01b031681565b600080600a60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611ef957600080fd5b505afa158015611f0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f319190612ae4565b600c549091506001600160801b03600160801b82048116911643118015611f5757508115155b15611fb657600c54600090611f75906001600160801b031643613252565b600d54909150600090611f889083613233565b905083611f9d670de0b6b3a764000083613233565b611fa79190613213565b611fb190846131d0565b925050505b6001600160a01b0384166000908152600b602052604090206002810154600190910154670de0b6b3a7640000611ff56001600160801b03851684613233565b611fff9190613213565b6120099190613252565b95945050505050565b600260005414156120355760405162461bcd60e51b81526004016104e89061309e565b60026000908155600a546040516306e6829960e51b815282916001600160a01b03169063dcd053209061206c903390600401612baf565b6040805180830381600087803b15801561208557600080fd5b505af1158015612099573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120bd9190612afc565b91509150336001600160a01b03167f09c6481cb228ea7f61ceb67c8e708038eb74bbb68cfcc54a9cfca199087ecfb783836040516120fc929190613191565b60405180910390a250506001600055565b600c546001600160801b03164311156122a157600a54604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561216557600080fd5b505afa158015612179573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061219d9190612ae4565b9050801561222d57600c546000906121be906001600160801b031643613252565b600d549091506000906121d19083613233565b9050826121e6670de0b6b3a764000083613233565b6121f09190613213565b600c5461220d9190600160801b90046001600160801b03166131d0565b600c80546001600160801b03928316600160801b02921691909117905550505b600c80546fffffffffffffffffffffffffffffffff1916436001600160801b0390811691909117918290556040517f982b813c7d00a9ffce9441ba40f429b2e4a35068d75532f496d0c63585c2fa689261229792818116928692600160801b900490911690613165565b60405180910390a1505b565b6008544210156122c55760405162461bcd60e51b81526004016104e890613067565b600260005414156122e85760405162461bcd60e51b81526004016104e89061309e565b60026000558061230a5760405162461bcd60e51b81526004016104e890612fc4565b61231261210d565b600a546040805163e5a6b10f60e01b815290516000926001600160a01b03169163e5a6b10f916004808301926020929190829003018186803b15801561235757600080fd5b505afa15801561236b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061238f9190612906565b90506000600a60009054906101000a90046001600160a01b03166001600160a01b031663f53fb2006040518163ffffffff1660e01b815260040160206040518083038186803b1580156123e157600080fd5b505afa1580156123f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124199190612ae4565b600a5490915061243690839033906001600160a01b031686612797565b600a54604051637e348b7d60e01b81526001600160a01b0390911690637e348b7d906124689033908790600401612c48565b600060405180830381600087803b15801561248257600080fd5b505af1158015612496573d6000803e3d6000fd5b5050600c54670de0b6b3a76400009250839150600160801b90046001600160801b03166124c38684613233565b6124cd9190613233565b6124d79190613213565b6124e19190613213565b336000908152600b60205260409020600101546124fe91906131fb565b336000908152600b60205260409020600101558061252484670de0b6b3a7640000613233565b61252e9190613213565b336000908152600b602052604090206002015461254b91906131fb565b336000908152600b602052604090819020600201919091556005549051638be5a39f60e01b81526001600160a01b0390911690638be5a39f90612592908690600401613188565b600060405180830381600087803b1580156125ac57600080fd5b505af11580156125c0573d6000803e3d6000fd5b5050600a546040516001600160a01b0390911692503391507fd3dba7b5565b16b7749db7d1938410a636e3c7a6ea46ed8ce7e259e19f2f3b9f90611a18908790613188565b61260d61210d565b6001600160a01b0381166000908152600b6020526040812060020154600c54909190670de0b6b3a76400009061265390600160801b90046001600160801b031684613233565b61265d9190613213565b6001600160a01b0384166000908152600b6020526040812060010154919250906126879083613252565b336000908152600b60205260408120600101849055600954919250906001600160a01b0316158015906126b957508115155b156127455760095460405163186e465160e31b81526001600160a01b039091169063c3723288906126f09088908690600401612c48565b602060405180830381600087803b15801561270a57600080fd5b505af115801561271e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127429190612ae4565b90505b846001600160a01b0316336001600160a01b03167fa0306f61d3fafe13787b78e276cb6b644382854a66cb46daae14227d3ec26797836040516127889190613188565b60405180910390a35050505050565b600080856001600160a01b03166323b872dd8686866040516024016127be93929190612c24565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161280c9190612b76565b6000604051808303816000865af19150503d8060008114612849576040519150601f19603f3d011682016040523d82523d6000602084013e61284e565b606091505b50915091508180156128785750805115806128785750808060200190518101906128789190612a0f565b6128945760405162461bcd60e51b81526004016104e890612d7c565b505050505050565b60008083601f8401126128ad578182fd5b50813567ffffffffffffffff8111156128c4578182fd5b6020830191508360208285010111156128dc57600080fd5b9250929050565b6000602082840312156128f4578081fd5b81356128ff8161327f565b9392505050565b600060208284031215612917578081fd5b81516128ff8161327f565b60008060408385031215612934578081fd5b823561293f8161327f565b9150602083013561294f8161327f565b809150509250929050565b60008060006060848603121561296e578081fd5b83356129798161327f565b925060208401356129898161327f565b915060408401356129998161327f565b809150509250925092565b6000806000606084860312156129b8578283fd5b83356129c38161327f565b925060208401356129d38161327f565b929592945050506040919091013590565b600080604083850312156129f6578182fd5b8235612a018161327f565b946020939093013593505050565b600060208284031215612a20578081fd5b815180151581146128ff578182fd5b600080600080600080600060a0888a031215612a49578283fd5b873567ffffffffffffffff80821115612a60578485fd5b612a6c8b838c0161289c565b909950975060208a0135915080821115612a84578485fd5b50612a918a828b0161289c565b9096509450506040880135612aa58161327f565b92506060880135612ab58161327f565b809250506080880135905092959891949750929550565b600060208284031215612add578081fd5b5035919050565b600060208284031215612af5578081fd5b5051919050565b60008060408385031215612b0e578182fd5b505080516020909101519092909150565b600080600060608486031215612b33578283fd5b8351925060208401519150604084015190509250925092565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60008251815b81811015612b965760208186018101518583015201612b7c565b81811115612ba45782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0393841681529183166020830152909116604082015260600190565b6001600160a01b039384168152919092166020820152901515604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03929092168252602082015260606040820181905260009082015260800190565b600060808252612c9d60808301888a612b4c565b8281036020840152612cb0818789612b4c565b9150506001600160a01b038085166040840152808416606084015250979650505050505050565b60208082526013908201527f556e6f52653a207a65726f206164647265737300000000000000000000000000604082015260600190565b6020808252601a908201527f556e6f52653a7a65726f20666163746f72792061646472657373000000000000604082015260600190565b6020808252601f908201527f556e6f52653a20776974686472617720616d6f756e74206f766572666c6f7700604082015260600190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b60208082526017908201527f556e6f52653a2062616c616e6365206f766572666c6f77000000000000000000604082015260600190565b6020808252818101527f556e6f52653a207269736b20706f6f6c206372656174656420616c7265616479604082015260600190565b60208082526012908201527f556e6f52653a204c6f636b65642074696d650000000000000000000000000000604082015260600190565b60208082526011908201527f556e6f52653a207a65726f2076616c7565000000000000000000000000000000604082015260600190565b60208082526012908201527f556e6f52653a207a65726f20616d6f756e740000000000000000000000000000604082015260600190565b6020808252601b908201527f556e6f52653a7a65726f204c5020746f6b656e20616464726573730000000000604082015260600190565b60208082526019908201527f556e6f52653a207a65726f206f776e6572206164647265737300000000000000604082015260600190565b6020808252818101527f556e6f52653a206d696e696d756d206361706974616c20756e646572666c6f77604082015260600190565b6020808252601f908201527f556e6f52653a206e6f7420616c6c6f77207a65726f206c6f636b2074696d6500604082015260600190565b60208082526011908201527f556e6f52653a205a45524f2056616c7565000000000000000000000000000000604082015260600190565b60208082526010908201527f556e6f52653a20466f7262696464656e00000000000000000000000000000000604082015260600190565b6020808252818101527f556e6f52653a20726577617264657220666163746f7279206e6f206578697374604082015260600190565b60208082526019908201527f556e6f52653a206e6f7420617661696c61626c652074696d6500000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252601b908201527f556e6f52653a206e6f7420616c6c6f77207a65726f2076616c75650000000000604082015260600190565b6020808252818101527f556e6f52653a206e6f7420616c6c6f77206f7468657273207472616e73666572604082015260600190565b6001600160801b039384168152919092166020820152604081019190915260600190565b6001600160801b0393841681526020810192909252909116604082015260600190565b90815260200190565b918252602082015260400190565b9283526020830191909152604082015260600190565b93845260208401929092526040830152606082015260800190565b60006001600160801b038083168185168083038211156131f2576131f2613269565b01949350505050565b6000821982111561320e5761320e613269565b500190565b60008261322e57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561324d5761324d613269565b500290565b60008282101561326457613264613269565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461329457600080fd5b5056fea2646970667358221220fc018a3af5d4e1c81d8afe404851e900af68463fafadc6775eecfdbf5673eec864736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061025c5760003560e01c80639336f40611610145578063c4e5dacf116100bd578063dcc3e06e1161008c578063e19e716811610071578063e19e71681461049b578063e3161ddd146104a3578063e3824a38146104ab5761025c565b8063dcc3e06e14610480578063e08c5de1146104885761025c565b8063c4e5dacf14610460578063c6e8991514610468578063cd87c83c14610470578063dba6f962146104785761025c565b8063ae04d45d11610114578063ba619457116100f9578063ba61945714610424578063bc8f882814610445578063c2eb8eb91461044d5761025c565b8063ae04d45d146103fe578063af16d6e0146104115761025c565b80639336f406146103b857806393b6b86c146103db57806398c6e760146103ee578063a3bdd632146103f65761025c565b806342198160116101d85780638395206c116101a75780638ba04b171161018c5780638ba04b17146103955780638da5cb5b146103a85780638fd3ab80146103b05761025c565b80638395206c1461037a57806389919b711461038d5761025c565b806342198160146103285780635a2f3d091461033d5780635d90bad914610354578063736ec05c146103675761025c565b806318a00d8e1161022f5780631b600ca2116102145780631b600ca2146102ed5780632e4a014214610300578063413d9c3a146103135761025c565b806318a00d8e146102af5780631959a002146102c25761025c565b80630bd075a1146102615780630e5c011e146102765780630e9ae42014610289578063157f71ed1461029c575b600080fd5b61027461026f366004612acc565b6104be565b005b6102746102843660046128e3565b610516565b6102746102973660046129a4565b610571565b6102746102aa3660046128e3565b610869565b6102746102bd3660046128e3565b6108db565b6102d56102d03660046128e3565b610975565b6040516102e49392919061319f565b60405180910390f35b6102746102fb366004612922565b610996565b61027461030e3660046129e4565b610b3d565b61031b610d2a565b6040516102e49190613188565b610330610d30565b6040516102e49190612baf565b610345610d3f565b6040516102e493929190613141565b610274610362366004612acc565b610d5d565b6102746103753660046128e3565b610d97565b610274610388366004612acc565b610e09565b61031b611124565b6102746103a3366004612a2f565b611130565b61033061131f565b61027461132e565b6103cb6103c63660046128e3565b6115fe565b6040516102e494939291906131b5565b6102746103e9366004612acc565b61173c565b6103306117eb565b61031b6117fa565b61027461040c366004612acc565b61187c565b61027461041f36600461295a565b6118cb565b6104376104323660046128e3565b611a2a565b6040516102e4929190613191565b610274611ae5565b61027461045b3660046128e3565b611df4565b610330611e66565b610330611e75565b610330611e84565b61031b611e93565b610330611e99565b61031b6104963660046128e3565b611ea8565b610274612012565b61027461210d565b6102746104b9366004612acc565b6122a3565b6001546001600160a01b031633146104f15760405162461bcd60e51b81526004016104e890612ffb565b60405180910390fd5b600081116105115760405162461bcd60e51b81526004016104e890612e7c565b600d55565b6008544210156105385760405162461bcd60e51b81526004016104e890613067565b6002600054141561055b5760405162461bcd60e51b81526004016104e89061309e565b600260005561056981612605565b506001600055565b600260005414156105945760405162461bcd60e51b81526004016104e89061309e565b6002600055600a546001600160a01b031633146105c35760405162461bcd60e51b81526004016104e89061310c565b6006546001600160a01b038481169116148015906105ef57506006546001600160a01b03838116911614155b1561085f576105fd83612605565b6001600160a01b038084166000908152600b602052604080822060020154600a549151631665744b60e11b815290939190911690632ccae89690610645908890600401612baf565b60606040518083038186803b15801561065d57600080fd5b505afa158015610671573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106959190612b1f565b505090508281836106a69190613252565b10156106c45760405162461bcd60e51b81526004016104e890612dd9565b600c54600090670de0b6b3a7640000906106ee90600160801b90046001600160801b031685613233565b6106f89190613213565b600c54909150670de0b6b3a76400009061072290600160801b90046001600160801b031686613233565b61072c9190613213565b6107369082613252565b6001600160a01b0387166000908152600b602052604090206001015561075c8484613252565b6001600160a01b0387166000908152600b6020526040902060020155600c54670de0b6b3a76400009061079f90600160801b90046001600160801b031686613233565b6107a99190613213565b6001600160a01b0386166000908152600b60205260409020600101546107cf91906131fb565b6001600160a01b0386166000908152600b602052604090206001810191909155600201546107fe9085906131fb565b6001600160a01b038087166000818152600b602052604090819020600201939093559151908816907fabc254a3e8b16a8605ce22e693a6e493e375434011c1a7ff082d09e2a84ad12190610853908890613188565b60405180910390a35050505b5050600160005550565b6001546001600160a01b031633146108935760405162461bcd60e51b81526004016104e890612ffb565b6001600160a01b0381166108b95760405162461bcd60e51b81526004016104e890612cd7565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146109055760405162461bcd60e51b81526004016104e890612ffb565b6001600160a01b03811661092b5760405162461bcd60e51b81526004016104e890612cd7565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fbdca3ec80f8567aeaf30c6168374c798baf11902e9b21c2b8ba3186ffd13012290600090a250565b600b6020526000908152604090208054600182015460029092015490919083565b6001546001600160a01b031633146109c05760405162461bcd60e51b81526004016104e890612ffb565b600260005414156109e35760405162461bcd60e51b81526004016104e89061309e565b60026000556001600160a01b038216610a0e5760405162461bcd60e51b81526004016104e890612f21565b6001600160a01b038116610a345760405162461bcd60e51b81526004016104e890612d0e565b600a546001600160a01b0316610a5c5760405162461bcd60e51b81526004016104e890612eea565b600a54604051631a8a8b3b60e11b81526001600160a01b0380841692633515167692610a8e9287921690600401612bc3565b602060405180830381600087803b158015610aa857600080fd5b505af1158015610abc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae09190612906565b600680546001600160a01b0319166001600160a01b039283161790819055600a5460405190831692919091169030907e1129b9865226cebad4acf884618ae0607fff06758062b050509602db7065f090600090a450506001600055565b6002546001600160a01b03163314610b675760405162461bcd60e51b81526004016104e890612ffb565b600854421015610b895760405162461bcd60e51b81526004016104e890613067565b60026000541415610bac5760405162461bcd60e51b81526004016104e89061309e565b60026000556001600160a01b038216610bd75760405162461bcd60e51b81526004016104e890612cd7565b60008111610bf75760405162461bcd60e51b81526004016104e890612eb3565b600a5460405163172500a160e11b81526000916001600160a01b031690632e4a014290610c2a9086908690600401612c48565b602060405180830381600087803b158015610c4457600080fd5b505af1158015610c58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7c9190612ae4565b60055460405163167afee560e31b81529192506001600160a01b03169063b3d7f72890610cad908490600401613188565b600060405180830381600087803b158015610cc757600080fd5b505af1158015610cdb573d6000803e3d6000fd5b50505050826001600160a01b03167f6420c9536b9a539410a930b1fd8d115dc296d8b71426dcc0ab64f2f736b7d59f82604051610d189190613188565b60405180910390a25050600160005550565b60075481565b6005546001600160a01b031681565b600c54600d546001600160801b0380831692600160801b9004169083565b6001546001600160a01b03163314610d875760405162461bcd60e51b81526004016104e890612ffb565b610d9142826131fb565b60085550565b6001546001600160a01b03163314610dc15760405162461bcd60e51b81526004016104e890612ffb565b6001600160a01b038116610de75760405162461bcd60e51b81526004016104e890612cd7565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600854421015610e2b5760405162461bcd60e51b81526004016104e890613067565b60026000541415610e4e5760405162461bcd60e51b81526004016104e89061309e565b6002600055610e5c33612605565b600554604051630be304cf60e41b81526001600160a01b039091169063be304cf090610e8c908490600401613188565b60206040518083038186803b158015610ea457600080fd5b505afa158015610eb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edc9190612a0f565b610ef85760405162461bcd60e51b81526004016104e890612f58565b336000908152600b6020908152604080832060020154600a548251627a9fd960e91b815292519194936001600160a01b039091169263f53fb2009260048083019392829003018186803b158015610f4e57600080fd5b505afa158015610f62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f869190612ae4565b600a54604051631665744b60e11b81529192506000916001600160a01b0390911690632ccae89690610fbc903390600401612baf565b60606040518083038186803b158015610fd457600080fd5b505afa158015610fe8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100c9190612b1f565b5050905083670de0b6b3a76400008383866110279190613252565b6110319190613233565b61103b9190613213565b10156110595760405162461bcd60e51b81526004016104e890612d45565b600a546040516323de6d9560e11b81526001600160a01b03909116906347bcdb2a9061108b9033908890600401612c48565b600060405180830381600087803b1580156110a557600080fd5b505af11580156110b9573d6000803e3d6000fd5b5050336000818152600b602052604090819020429055600a5490516001600160a01b0390911693509091507f940a14c75c418e7230a2e65567722d2dda5a6713cf71b369bd0fa219fdc1ac5e90611111908890613188565b60405180910390a3505060016000555050565b670de0b6b3a764000081565b6001546001600160a01b0316331461115a5760405162461bcd60e51b81526004016104e890612ffb565b6002600054141561117d5760405162461bcd60e51b81526004016104e89061309e565b6002600055600a546001600160a01b0316156111ab5760405162461bcd60e51b81526004016104e890612e10565b604051630d98e31f60e01b81526001600160a01b03841690630d98e31f906111e1908a908a908a908a9030908a90600401612c89565b602060405180830381600087803b1580156111fb57600080fd5b505af115801561120f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112339190612906565b600a80546001600160a01b0319166001600160a01b03928316179055600c80546fffffffffffffffffffffffffffffffff1916436001600160801b0390811691909117169055600d82905560055460405163d914cd4b60e01b815291169063d914cd4b906112a5903090600401612baf565b600060405180830381600087803b1580156112bf57600080fd5b505af11580156112d3573d6000803e3d6000fd5b5050600a546040516001600160a01b0390911692503091507f184d7691bf4a73930a21086fa1bdf0ee3075421531a60730288325fd5838021790600090a3505060016000555050505050565b6001546001600160a01b031681565b600260005414156113515760405162461bcd60e51b81526004016104e89061309e565b60026000556004546001600160a01b031661137e5760405162461bcd60e51b81526004016104e890612cd7565b61138733612605565b600a5460408051627a9fd960e91b815290516000926001600160a01b03169163f53fb200916004808301926020929190829003018186803b1580156113cb57600080fd5b505afa1580156113df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114039190612ae4565b336000908152600b60205260408120600281015460075491549394509261142a9042613252565b600a5460048054604051633613302f60e01b81529490931194506000936001600160a01b0392831693633613302f9361146c9333939290911691889101612c00565b602060405180830381600087803b15801561148657600080fd5b505af115801561149a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114be9190612ae4565b6005549091506001600160a01b031663b3d7f728670de0b6b3a76400006114e58787613233565b6114ef9190613213565b6040518263ffffffff1660e01b815260040161150b9190613188565b600060405180830381600087803b15801561152557600080fd5b505af1158015611539573d6000803e3d6000fd5b50506004805460405163ed59344b60e01b81526001600160a01b03909116935063ed59344b925061156e913391889101612c61565b600060405180830381600087803b15801561158857600080fd5b505af115801561159c573d6000803e3d6000fd5b5050336000818152600b6020526040808220600281018390556001019190915560045490516001600160a01b0390911693509091507ff0fee1f70845d356d6a3e0baa0944ce846437b6469ea89416dad2cd7067919a490611111908590613188565b6000806000806000600a60009054906101000a90046001600160a01b03166001600160a01b031663f53fb2006040518163ffffffff1660e01b815260040160206040518083038186803b15801561165457600080fd5b505afa158015611668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168c9190612ae4565b600a54604051631665744b60e11b81529192506001600160a01b031690632ccae896906116bd908990600401612baf565b60606040518083038186803b1580156116d557600080fd5b505afa1580156116e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170d9190612b1f565b9196509093509150670de0b6b3a76400006117288287613233565b6117329190613213565b9350509193509193565b6001546001600160a01b031633146117665760405162461bcd60e51b81526004016104e890612ffb565b600081116117865760405162461bcd60e51b81526004016104e8906130d5565b600a546040516324edae1b60e21b81526001600160a01b03909116906393b6b86c906117b6908490600401613188565b600060405180830381600087803b1580156117d057600080fd5b505af11580156117e4573d6000803e3d6000fd5b5050505050565b6004546001600160a01b031681565b600a546040805163e95aa8d360e01b815290516000926001600160a01b03169163e95aa8d3916004808301926020929190829003018186803b15801561183f57600080fd5b505afa158015611853573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118779190612ae4565b905090565b6001546001600160a01b031633146118a65760405162461bcd60e51b81526004016104e890612ffb565b600081116118c65760405162461bcd60e51b81526004016104e890612f8d565b600755565b6001546001600160a01b031633146118f55760405162461bcd60e51b81526004016104e890612ffb565b600260005414156119185760405162461bcd60e51b81526004016104e89061309e565b60026000556001600160a01b0382166119435760405162461bcd60e51b81526004016104e890613032565b6040516369ee745160e01b81526001600160a01b038316906369ee74519061197390869085903090600401612bdd565b602060405180830381600087803b15801561198d57600080fd5b505af11580156119a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c59190612906565b600980546001600160a01b0319166001600160a01b03928316179081905560405191169030907f6c409a36847a0a3870deae25f656f4300d45957d2643fc27faab145e19cfcf1b90611a18908590612baf565b60405180910390a35050600160005550565b6001600160a01b038082166000908152600b6020908152604080832060020154600a548251627a9fd960e91b81529251949591948694919092169263f53fb2009260048083019392829003018186803b158015611a8657600080fd5b505afa158015611a9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611abe9190612ae4565b9050670de0b6b3a7640000611ad38284613233565b611add9190613213565b925050915091565b600854421015611b075760405162461bcd60e51b81526004016104e890613067565b60026000541415611b2a5760405162461bcd60e51b81526004016104e89061309e565b60026000908155600754338252600b602052604090912054611b4c9042613252565b1015611b6a5760405162461bcd60e51b81526004016104e890612e45565b611b7333612605565b336000818152600b602052604080822060020154600a549151631665744b60e11b8152909383926001600160a01b031691632ccae89691611bb691600401612baf565b60606040518083038186803b158015611bce57600080fd5b505afa158015611be2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c069190612b1f565b600554604051632da26abb60e11b81529395509093506001600160a01b031691635b44d5769150611c3b908490600401613188565b600060405180830381600087803b158015611c5557600080fd5b505af1158015611c69573d6000803e3d6000fd5b5050600c5460009250670de0b6b3a76400009150611c9790600160801b90046001600160801b031686613233565b611ca19190613213565b600c54909150670de0b6b3a764000090611ccb90600160801b90046001600160801b031685613233565b611cd59190613213565b611cdf9082613252565b336000818152600b602052604080822060010193909355600a54925163b20ecd1560e01b8152909283926001600160a01b039091169163b20ecd1591611d2791600401612baf565b6040805180830381600087803b158015611d4057600080fd5b505af1158015611d54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d789190612afc565b9092509050611d878287613252565b336000818152600b60205260409081902060020192909255600a5491516001600160a01b03909216917fced2424eb51507abd1611ac0d9893e5bc6b6d0a0596b53f86d24d31fc75a5d6090611ddf9086908690613191565b60405180910390a35050600160005550505050565b6001546001600160a01b03163314611e1e5760405162461bcd60e51b81526004016104e890612ffb565b6001600160a01b038116611e445760405162461bcd60e51b81526004016104e890612cd7565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b600a546001600160a01b031681565b6002546001600160a01b031681565b6006546001600160a01b031681565b60085481565b6009546001600160a01b031681565b600080600a60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611ef957600080fd5b505afa158015611f0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f319190612ae4565b600c549091506001600160801b03600160801b82048116911643118015611f5757508115155b15611fb657600c54600090611f75906001600160801b031643613252565b600d54909150600090611f889083613233565b905083611f9d670de0b6b3a764000083613233565b611fa79190613213565b611fb190846131d0565b925050505b6001600160a01b0384166000908152600b602052604090206002810154600190910154670de0b6b3a7640000611ff56001600160801b03851684613233565b611fff9190613213565b6120099190613252565b95945050505050565b600260005414156120355760405162461bcd60e51b81526004016104e89061309e565b60026000908155600a546040516306e6829960e51b815282916001600160a01b03169063dcd053209061206c903390600401612baf565b6040805180830381600087803b15801561208557600080fd5b505af1158015612099573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120bd9190612afc565b91509150336001600160a01b03167f09c6481cb228ea7f61ceb67c8e708038eb74bbb68cfcc54a9cfca199087ecfb783836040516120fc929190613191565b60405180910390a250506001600055565b600c546001600160801b03164311156122a157600a54604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561216557600080fd5b505afa158015612179573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061219d9190612ae4565b9050801561222d57600c546000906121be906001600160801b031643613252565b600d549091506000906121d19083613233565b9050826121e6670de0b6b3a764000083613233565b6121f09190613213565b600c5461220d9190600160801b90046001600160801b03166131d0565b600c80546001600160801b03928316600160801b02921691909117905550505b600c80546fffffffffffffffffffffffffffffffff1916436001600160801b0390811691909117918290556040517f982b813c7d00a9ffce9441ba40f429b2e4a35068d75532f496d0c63585c2fa689261229792818116928692600160801b900490911690613165565b60405180910390a1505b565b6008544210156122c55760405162461bcd60e51b81526004016104e890613067565b600260005414156122e85760405162461bcd60e51b81526004016104e89061309e565b60026000558061230a5760405162461bcd60e51b81526004016104e890612fc4565b61231261210d565b600a546040805163e5a6b10f60e01b815290516000926001600160a01b03169163e5a6b10f916004808301926020929190829003018186803b15801561235757600080fd5b505afa15801561236b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061238f9190612906565b90506000600a60009054906101000a90046001600160a01b03166001600160a01b031663f53fb2006040518163ffffffff1660e01b815260040160206040518083038186803b1580156123e157600080fd5b505afa1580156123f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124199190612ae4565b600a5490915061243690839033906001600160a01b031686612797565b600a54604051637e348b7d60e01b81526001600160a01b0390911690637e348b7d906124689033908790600401612c48565b600060405180830381600087803b15801561248257600080fd5b505af1158015612496573d6000803e3d6000fd5b5050600c54670de0b6b3a76400009250839150600160801b90046001600160801b03166124c38684613233565b6124cd9190613233565b6124d79190613213565b6124e19190613213565b336000908152600b60205260409020600101546124fe91906131fb565b336000908152600b60205260409020600101558061252484670de0b6b3a7640000613233565b61252e9190613213565b336000908152600b602052604090206002015461254b91906131fb565b336000908152600b602052604090819020600201919091556005549051638be5a39f60e01b81526001600160a01b0390911690638be5a39f90612592908690600401613188565b600060405180830381600087803b1580156125ac57600080fd5b505af11580156125c0573d6000803e3d6000fd5b5050600a546040516001600160a01b0390911692503391507fd3dba7b5565b16b7749db7d1938410a636e3c7a6ea46ed8ce7e259e19f2f3b9f90611a18908790613188565b61260d61210d565b6001600160a01b0381166000908152600b6020526040812060020154600c54909190670de0b6b3a76400009061265390600160801b90046001600160801b031684613233565b61265d9190613213565b6001600160a01b0384166000908152600b6020526040812060010154919250906126879083613252565b336000908152600b60205260408120600101849055600954919250906001600160a01b0316158015906126b957508115155b156127455760095460405163186e465160e31b81526001600160a01b039091169063c3723288906126f09088908690600401612c48565b602060405180830381600087803b15801561270a57600080fd5b505af115801561271e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127429190612ae4565b90505b846001600160a01b0316336001600160a01b03167fa0306f61d3fafe13787b78e276cb6b644382854a66cb46daae14227d3ec26797836040516127889190613188565b60405180910390a35050505050565b600080856001600160a01b03166323b872dd8686866040516024016127be93929190612c24565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161280c9190612b76565b6000604051808303816000865af19150503d8060008114612849576040519150601f19603f3d011682016040523d82523d6000602084013e61284e565b606091505b50915091508180156128785750805115806128785750808060200190518101906128789190612a0f565b6128945760405162461bcd60e51b81526004016104e890612d7c565b505050505050565b60008083601f8401126128ad578182fd5b50813567ffffffffffffffff8111156128c4578182fd5b6020830191508360208285010111156128dc57600080fd5b9250929050565b6000602082840312156128f4578081fd5b81356128ff8161327f565b9392505050565b600060208284031215612917578081fd5b81516128ff8161327f565b60008060408385031215612934578081fd5b823561293f8161327f565b9150602083013561294f8161327f565b809150509250929050565b60008060006060848603121561296e578081fd5b83356129798161327f565b925060208401356129898161327f565b915060408401356129998161327f565b809150509250925092565b6000806000606084860312156129b8578283fd5b83356129c38161327f565b925060208401356129d38161327f565b929592945050506040919091013590565b600080604083850312156129f6578182fd5b8235612a018161327f565b946020939093013593505050565b600060208284031215612a20578081fd5b815180151581146128ff578182fd5b600080600080600080600060a0888a031215612a49578283fd5b873567ffffffffffffffff80821115612a60578485fd5b612a6c8b838c0161289c565b909950975060208a0135915080821115612a84578485fd5b50612a918a828b0161289c565b9096509450506040880135612aa58161327f565b92506060880135612ab58161327f565b809250506080880135905092959891949750929550565b600060208284031215612add578081fd5b5035919050565b600060208284031215612af5578081fd5b5051919050565b60008060408385031215612b0e578182fd5b505080516020909101519092909150565b600080600060608486031215612b33578283fd5b8351925060208401519150604084015190509250925092565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60008251815b81811015612b965760208186018101518583015201612b7c565b81811115612ba45782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0393841681529183166020830152909116604082015260600190565b6001600160a01b039384168152919092166020820152901515604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03929092168252602082015260606040820181905260009082015260800190565b600060808252612c9d60808301888a612b4c565b8281036020840152612cb0818789612b4c565b9150506001600160a01b038085166040840152808416606084015250979650505050505050565b60208082526013908201527f556e6f52653a207a65726f206164647265737300000000000000000000000000604082015260600190565b6020808252601a908201527f556e6f52653a7a65726f20666163746f72792061646472657373000000000000604082015260600190565b6020808252601f908201527f556e6f52653a20776974686472617720616d6f756e74206f766572666c6f7700604082015260600190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b60208082526017908201527f556e6f52653a2062616c616e6365206f766572666c6f77000000000000000000604082015260600190565b6020808252818101527f556e6f52653a207269736b20706f6f6c206372656174656420616c7265616479604082015260600190565b60208082526012908201527f556e6f52653a204c6f636b65642074696d650000000000000000000000000000604082015260600190565b60208082526011908201527f556e6f52653a207a65726f2076616c7565000000000000000000000000000000604082015260600190565b60208082526012908201527f556e6f52653a207a65726f20616d6f756e740000000000000000000000000000604082015260600190565b6020808252601b908201527f556e6f52653a7a65726f204c5020746f6b656e20616464726573730000000000604082015260600190565b60208082526019908201527f556e6f52653a207a65726f206f776e6572206164647265737300000000000000604082015260600190565b6020808252818101527f556e6f52653a206d696e696d756d206361706974616c20756e646572666c6f77604082015260600190565b6020808252601f908201527f556e6f52653a206e6f7420616c6c6f77207a65726f206c6f636b2074696d6500604082015260600190565b60208082526011908201527f556e6f52653a205a45524f2056616c7565000000000000000000000000000000604082015260600190565b60208082526010908201527f556e6f52653a20466f7262696464656e00000000000000000000000000000000604082015260600190565b6020808252818101527f556e6f52653a20726577617264657220666163746f7279206e6f206578697374604082015260600190565b60208082526019908201527f556e6f52653a206e6f7420617661696c61626c652074696d6500000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252601b908201527f556e6f52653a206e6f7420616c6c6f77207a65726f2076616c75650000000000604082015260600190565b6020808252818101527f556e6f52653a206e6f7420616c6c6f77206f7468657273207472616e73666572604082015260600190565b6001600160801b039384168152919092166020820152604081019190915260600190565b6001600160801b0393841681526020810192909252909116604082015260600190565b90815260200190565b918252602082015260400190565b9283526020830191909152604082015260600190565b93845260208401929092526040830152606082015260800190565b60006001600160801b038083168185168083038211156131f2576131f2613269565b01949350505050565b6000821982111561320e5761320e613269565b500190565b60008261322e57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561324d5761324d613269565b500290565b60008282101561326457613264613269565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461329457600080fd5b5056fea2646970667358221220fc018a3af5d4e1c81d8afe404851e900af68463fafadc6775eecfdbf5673eec864736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "createRiskPool(string,string,address,address,uint256)": {
        "details": "create Risk pool with UNO from SSIP owner"
      },
      "getTotalWithdrawPendingAmount()": {
        "details": "get total withdraw request amount in pending for the risk pool in UNO"
      },
      "getWithdrawRequestPerUser(address)": {
        "details": "get withdraw request amount in pending per user in UNO"
      },
      "leaveFromPending()": {
        "details": "user can submit claim again and receive his funds into his wallet after 10 days since last WR."
      },
      "leaveFromPoolInPending(uint256)": {
        "details": "WR will be in pending for 10 days at least"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 114,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 9091,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 9093,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "claimAssessor",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 9095,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "exchangeAgent",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 9097,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "migrateTo",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 9099,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "capitalAgent",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 9101,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "syntheticSSIP",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 9104,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "LOCK_TIME",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 9109,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "STAKING_START_TIME",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 9111,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "rewarder",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 9114,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "riskPool",
        "offset": 0,
        "slot": "10",
        "type": "t_address"
      },
      {
        "astId": 9133,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "userInfo",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_struct(UserInfo)9128_storage)"
      },
      {
        "astId": 9136,
        "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
        "label": "poolInfo",
        "offset": 0,
        "slot": "12",
        "type": "t_struct(PoolInfo)9121_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(UserInfo)9128_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct SingleSidedInsurancePool.UserInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(UserInfo)9128_storage"
      },
      "t_struct(PoolInfo)9121_storage": {
        "encoding": "inplace",
        "label": "struct SingleSidedInsurancePool.PoolInfo",
        "members": [
          {
            "astId": 9116,
            "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
            "label": "lastRewardBlock",
            "offset": 0,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 9118,
            "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
            "label": "accUnoPerShare",
            "offset": 16,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 9120,
            "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
            "label": "unoMultiplierPerBlock",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(UserInfo)9128_storage": {
        "encoding": "inplace",
        "label": "struct SingleSidedInsurancePool.UserInfo",
        "members": [
          {
            "astId": 9123,
            "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
            "label": "lastWithdrawTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 9125,
            "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
            "label": "rewardDebt",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 9127,
            "contract": "contracts/SingleSidedInsurancePool.sol:SingleSidedInsurancePool",
            "label": "amount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}