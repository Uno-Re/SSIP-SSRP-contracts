{
  "address": "0xfadD5ddd92fa216C08C096958Efec97179F6fC58",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_signers",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_numConfirmationsRequired",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "txIndex",
          "type": "uint256"
        }
      ],
      "name": "ConfirmTransaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "txIndex",
          "type": "uint256"
        }
      ],
      "name": "ExecuteTransaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "txIndex",
          "type": "uint256"
        }
      ],
      "name": "RevokeConfirmation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "txIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "SubmitTransaction",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_execute",
          "type": "bool"
        }
      ],
      "name": "confirmTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        }
      ],
      "name": "executeTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSigners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        }
      ],
      "name": "getTransaction",
      "outputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "numConfirmations",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTransactionCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isConfirmed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isSigner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numConfirmationsRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        }
      ],
      "name": "revokeConfirmation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "signers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "submitTransaction",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0d23b80d2c0eade3ace3781c4566988e5a3a593f5b9c5ebab9d0da720f6e9857",
  "receipt": {
    "to": null,
    "from": "0x5569BDF4e02cec3fE459796e3d0e741616029fA4",
    "contractAddress": "0xfadD5ddd92fa216C08C096958Efec97179F6fC58",
    "transactionIndex": 1,
    "gasUsed": "1342632",
    "logsBloom": "0x
    "blockHash": "0x1b4c70326f9bf4aa5d05c7e70fbe70b2b0dcf306777424b58c861782e5a3a684",
    "transactionHash": "0x0d23b80d2c0eade3ace3781c4566988e5a3a593f5b9c5ebab9d0da720f6e9857",
    "logs": [],
    "blockNumber": 10028815,
    "cumulativeGasUsed": "1668098",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0x5569BDF4e02cec3fE459796e3d0e741616029fA4",
      "0x8CB75ae7a37f20cC73d74eb01b8D9BE81ebe4043",
      "0x378C4B07Ac325E7e19d19fAb10ef523e35d4dd18",
      "0xBeF2C0415CC95b57a6e96cEE05804c8259601a2f",
      "0x7EF5A63908aF1104151F0aE7Af59fA3D691e946c"
    ],
    2
  ],
  "solcInputHash": "9c34ee606f87ff608005a3853a8c7b58",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_numConfirmationsRequired\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"ConfirmTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"ExecuteTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"RevokeConfirmation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"SubmitTransaction\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_execute\",\"type\":\"bool\"}],\"name\":\"confirmTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"executeTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"getTransaction\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"numConfirmations\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransactionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isConfirmed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numConfirmationsRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"revokeConfirmation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"signers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"submitTransaction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executeTransaction(uint256)\":{\"details\":\"We did not add onlySigner modifier here, because we want to allow any community member to execute transaction which had got at least minimum number of confirmations\"},\"submitTransaction(address,uint256,bytes)\":{\"details\":\"when buying is failed, agent should send loan again to TribeOne.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/MultiSigWallet.sol\":\"MultiSigWallet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\"},\"contracts/libraries/MultiSigWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\ncontract MultiSigWallet is ReentrancyGuard {\\n    event Deposit(address indexed sender, uint256 amount, uint256 balance);\\n    event SubmitTransaction(address indexed signer, uint256 indexed txIndex, address indexed to, uint256 value, bytes data);\\n    event ConfirmTransaction(address indexed signer, uint256 indexed txIndex);\\n    event RevokeConfirmation(address indexed signer, uint256 indexed txIndex);\\n    event ExecuteTransaction(address indexed signer, uint256 indexed txIndex);\\n\\n    address[] public signers;\\n    mapping(address => bool) public isSigner;\\n    uint256 public numConfirmationsRequired;\\n\\n    struct Transaction {\\n        address to;\\n        uint256 value;\\n        bytes data;\\n        bool executed;\\n        uint256 numConfirmations;\\n    }\\n\\n    // mapping from tx index => signer => bool\\n    mapping(uint256 => mapping(address => bool)) public isConfirmed;\\n\\n    Transaction[] private transactions;\\n\\n    modifier onlySigner() {\\n        require(isSigner[msg.sender], \\\"not signer\\\");\\n        _;\\n    }\\n\\n    modifier txExists(uint256 _txIndex) {\\n        require(_txIndex < transactions.length, \\\"tx does not exist\\\");\\n        _;\\n    }\\n\\n    modifier notExecuted(uint256 _txIndex) {\\n        require(!transactions[_txIndex].executed, \\\"tx already executed\\\");\\n        _;\\n    }\\n\\n    modifier notConfirmed(uint256 _txIndex) {\\n        require(!isConfirmed[_txIndex][msg.sender], \\\"tx already confirmed\\\");\\n        _;\\n    }\\n\\n    constructor(address[] memory _signers, uint256 _numConfirmationsRequired) {\\n        require(_signers.length > 0, \\\"signers required\\\");\\n        require(\\n            _numConfirmationsRequired > 0 && _numConfirmationsRequired <= _signers.length,\\n            \\\"invalid number of required confirmations\\\"\\n        );\\n\\n        for (uint256 i = 0; i < _signers.length; i++) {\\n            address signer = _signers[i];\\n\\n            require(signer != address(0), \\\"invalid signer\\\");\\n            require(!isSigner[signer], \\\"signer not unique\\\");\\n\\n            isSigner[signer] = true;\\n            signers.push(signer);\\n        }\\n\\n        numConfirmationsRequired = _numConfirmationsRequired;\\n    }\\n\\n    receive() external payable {\\n        emit Deposit(msg.sender, msg.value, address(this).balance);\\n    }\\n\\n    /**\\n     * @dev when buying is failed, agent should send loan again to TribeOne.\\n     */\\n    function submitTransaction(\\n        address _to,\\n        uint256 _value,\\n        bytes memory _data\\n    ) public payable onlySigner nonReentrant {\\n        if (_value > 0) {\\n            require(msg.value == _value, \\\"Should send value\\\");\\n        }\\n        uint256 txIndex = transactions.length;\\n\\n        transactions.push(Transaction({to: _to, value: _value, data: _data, executed: false, numConfirmations: 0}));\\n\\n        emit SubmitTransaction(msg.sender, txIndex, _to, _value, _data);\\n    }\\n\\n    function confirmTransaction(uint256 _txIndex, bool _execute)\\n        public\\n        onlySigner\\n        txExists(_txIndex)\\n        notExecuted(_txIndex)\\n        notConfirmed(_txIndex)\\n    {\\n        Transaction storage transaction = transactions[_txIndex];\\n        isConfirmed[_txIndex][msg.sender] = true;\\n        transaction.numConfirmations += 1;\\n\\n        emit ConfirmTransaction(msg.sender, _txIndex);\\n\\n        if (transaction.numConfirmations >= numConfirmationsRequired && _execute) {\\n            _executeTransaction(_txIndex);\\n        }\\n    }\\n\\n    /**\\n     * @dev We did not add onlySigner modifier here, because we want to allow any community member to execute transaction\\n     * which had got at least minimum number of confirmations\\n     */\\n    function executeTransaction(uint256 _txIndex) external {\\n        _executeTransaction(_txIndex);\\n    }\\n\\n    function _executeTransaction(uint256 _txIndex) private txExists(_txIndex) notExecuted(_txIndex) {\\n        Transaction storage transaction = transactions[_txIndex];\\n\\n        require(transaction.numConfirmations >= numConfirmationsRequired, \\\"cannot execute tx\\\");\\n\\n        transaction.executed = true;\\n\\n        (bool success, ) = transaction.to.call{value: transaction.value}(transaction.data);\\n        require(success, \\\"tx failed\\\");\\n\\n        emit ExecuteTransaction(msg.sender, _txIndex);\\n    }\\n\\n    function revokeConfirmation(uint256 _txIndex) public onlySigner txExists(_txIndex) notExecuted(_txIndex) {\\n        Transaction storage transaction = transactions[_txIndex];\\n\\n        require(isConfirmed[_txIndex][msg.sender], \\\"tx not confirmed\\\");\\n\\n        transaction.numConfirmations -= 1;\\n        isConfirmed[_txIndex][msg.sender] = false;\\n\\n        emit RevokeConfirmation(msg.sender, _txIndex);\\n    }\\n\\n    function getSigners() public view returns (address[] memory) {\\n        return signers;\\n    }\\n\\n    function getTransactionCount() public view returns (uint256) {\\n        return transactions.length;\\n    }\\n\\n    function getTransaction(uint256 _txIndex)\\n        public\\n        view\\n        returns (\\n            address to,\\n            uint256 value,\\n            bytes memory data,\\n            bool executed,\\n            uint256 numConfirmations\\n        )\\n    {\\n        Transaction storage transaction = transactions[_txIndex];\\n\\n        return (transaction.to, transaction.value, transaction.data, transaction.executed, transaction.numConfirmations);\\n    }\\n}\\n\",\"keccak256\":\"0x8d7b7a1c402bb8640271d8faa5fb3015ba97d953d9d673e044edc2970c3ab66d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100c05760003560e01c806380f59a6511610074578063c6a725d81161004e578063c6a725d81461023c578063d0549b851461025c578063ee22610b146102715761010a565b806380f59a65146101e757806394cf795e14610207578063c6427474146102295761010a565b80632e7700f0116100a55780632e7700f01461016757806333ea3dc8146101895780637df73e27146101ba5761010a565b80632079fb9a1461010f57806320ea8d86146101455761010a565b3661010a57336001600160a01b03167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1534476040516101009291906110dd565b60405180910390a2005b600080fd5b34801561011b57600080fd5b5061012f61012a366004610cc0565b610291565b60405161013c9190610e1c565b60405180910390f35b34801561015157600080fd5b50610165610160366004610cc0565b6102bb565b005b34801561017357600080fd5b5061017c61043f565b60405161013c91906110b3565b34801561019557600080fd5b506101a96101a4366004610cc0565b610445565b60405161013c959493929190610e30565b3480156101c657600080fd5b506101da6101d5366004610be2565b61054e565b60405161013c9190610eb9565b3480156101f357600080fd5b506101da610202366004610cd8565b610563565b34801561021357600080fd5b5061021c610583565b60405161013c9190610e6c565b610165610237366004610c03565b6105e5565b34801561024857600080fd5b50610165610257366004610d03565b6107cf565b34801561026857600080fd5b5061017c61097b565b34801561027d57600080fd5b5061016561028c366004610cc0565b610981565b600181815481106102a157600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526002602052604090205460ff166102f35760405162461bcd60e51b81526004016102ea90610ec4565b60405180910390fd5b600554819081106103165760405162461bcd60e51b81526004016102ea90610f32565b816005818154811061033857634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600590920201015460ff161561036c5760405162461bcd60e51b81526004016102ea90610fd7565b60006005848154811061038f57634e487b7160e01b600052603260045260246000fd5b600091825260208083208784526004825260408085203386529092529220546005909102909101915060ff166103d75760405162461bcd60e51b81526004016102ea9061100e565b60018160040160008282546103ec919061110f565b90915550506000848152600460209081526040808320338085529252808320805460ff191690555186927ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd5591a350505050565b60055490565b600080606060008060006005878154811061047057634e487b7160e01b600052603260045260246000fd5b6000918252602090912060059091020180546001820154600383015460048401546002850180549596506001600160a01b039094169492939260ff9092169183906104ba90611126565b80601f01602080910402602001604051908101604052809291908181526020018280546104e690611126565b80156105335780601f1061050857610100808354040283529160200191610533565b820191906000526020600020905b81548152906001019060200180831161051657829003601f168201915b50505050509250955095509550955095505091939590929450565b60026020526000908152604090205460ff1681565b600460209081526000928352604080842090915290825290205460ff1681565b606060018054806020026020016040519081016040528092919081815260200182805480156105db57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105bd575b5050505050905090565b3360009081526002602052604090205460ff166106145760405162461bcd60e51b81526004016102ea90610ec4565b600260005414156106375760405162461bcd60e51b81526004016102ea90611045565b60026000558115610661578134146106615760405162461bcd60e51b81526004016102ea90610fa0565b600580546040805160a0810182526001600160a01b03878116825260208083018881529383018781526000606085018190526080850181905260018701885587905283517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db097870297880180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169190941617835593517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db187015592518051949592949193610756937f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db20192910190610b2d565b50606082015160038201805460ff19169115159190911790556080909101516004909101556040516001600160a01b03851690829033907fd5a05bf70715ad82a09a756320284a1b54c9ff74cd0f8cce6219e79b563fe59d906107bc90889088906110bc565b60405180910390a4505060016000555050565b3360009081526002602052604090205460ff166107fe5760405162461bcd60e51b81526004016102ea90610ec4565b600554829081106108215760405162461bcd60e51b81526004016102ea90610f32565b826005818154811061084357634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600590920201015460ff16156108775760405162461bcd60e51b81526004016102ea90610fd7565b6000848152600460209081526040808320338452909152902054849060ff16156108b35760405162461bcd60e51b81526004016102ea90610f69565b6000600586815481106108d657634e487b7160e01b600052603260045260246000fd5b6000918252602080832089845260048083526040808620338752909352918420805460ff1916600190811790915560059093020190810180549194509192906109209084906110f7565b9091555050604051869033907f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb6339004190600090a36003548160040154101580156109655750845b15610973576109738661098d565b505050505050565b60035481565b61098a8161098d565b50565b600554819081106109b05760405162461bcd60e51b81526004016102ea90610f32565b81600581815481106109d257634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600590920201015460ff1615610a065760405162461bcd60e51b81526004016102ea90610fd7565b600060058481548110610a2957634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201905060035481600401541015610a5f5760405162461bcd60e51b81526004016102ea9061107c565b60038101805460ff191660019081179091558154908201546040516000926001600160a01b03169190610a96906002860190610d81565b60006040518083038185875af1925050503d8060008114610ad3576040519150601f19603f3d011682016040523d82523d6000602084013e610ad8565b606091505b5050905080610af95760405162461bcd60e51b81526004016102ea90610efb565b604051859033907f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac90600090a35050505050565b828054610b3990611126565b90600052602060002090601f016020900481019282610b5b5760008555610ba1565b82601f10610b7457805160ff1916838001178555610ba1565b82800160010185558215610ba1579182015b82811115610ba1578251825591602001919060010190610b86565b50610bad929150610bb1565b5090565b5b80821115610bad5760008155600101610bb2565b80356001600160a01b0381168114610bdd57600080fd5b919050565b600060208284031215610bf3578081fd5b610bfc82610bc6565b9392505050565b600080600060608486031215610c17578182fd5b610c2084610bc6565b92506020808501359250604085013567ffffffffffffffff80821115610c44578384fd5b818701915087601f830112610c57578384fd5b813581811115610c6957610c69611177565b604051601f8201601f1916810185018381118282101715610c8c57610c8c611177565b60405281815283820185018a1015610ca2578586fd5b81858501868301378585838301015280955050505050509250925092565b600060208284031215610cd1578081fd5b5035919050565b60008060408385031215610cea578182fd5b82359150610cfa60208401610bc6565b90509250929050565b60008060408385031215610d15578182fd5b8235915060208301358015158114610d2b578182fd5b809150509250929050565b60008151808452815b81811015610d5b57602081850181015186830182015201610d3f565b81811115610d6c5782602083870101525b50601f01601f19169290920160200192915050565b8154600090819060028104600180831680610d9d57607f831692505b6020808410821415610dbd57634e487b7160e01b87526022600452602487fd5b818015610dd15760018114610de257610e0e565b60ff19861689528489019650610e0e565b610deb8a6110eb565b885b86811015610e065781548b820152908501908301610ded565b505084890196505b509498975050505050505050565b6001600160a01b0391909116815260200190565b60006001600160a01b038716825285602083015260a06040830152610e5860a0830186610d36565b931515606083015250608001529392505050565b6020808252825182820181905260009190848201906040850190845b81811015610ead5783516001600160a01b031683529284019291840191600101610e88565b50909695505050505050565b901515815260200190565b6020808252600a908201527f6e6f74207369676e657200000000000000000000000000000000000000000000604082015260600190565b60208082526009908201527f7478206661696c65640000000000000000000000000000000000000000000000604082015260600190565b60208082526011908201527f747820646f6573206e6f74206578697374000000000000000000000000000000604082015260600190565b60208082526014908201527f747820616c726561647920636f6e6669726d6564000000000000000000000000604082015260600190565b60208082526011908201527f53686f756c642073656e642076616c7565000000000000000000000000000000604082015260600190565b60208082526013908201527f747820616c726561647920657865637574656400000000000000000000000000604082015260600190565b60208082526010908201527f7478206e6f7420636f6e6669726d656400000000000000000000000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526011908201527f63616e6e6f742065786563757465207478000000000000000000000000000000604082015260600190565b90815260200190565b6000838252604060208301526110d56040830184610d36565b949350505050565b918252602082015260400190565b60009081526020902090565b6000821982111561110a5761110a611161565b500190565b60008282101561112157611121611161565b500390565b60028104600182168061113a57607f821691505b6020821081141561115b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212204f8949d414111b67f319905b0b8f0dd971599859f8340a5ad3dd59b7c2bfd1c364736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "executeTransaction(uint256)": {
        "details": "We did not add onlySigner modifier here, because we want to allow any community member to execute transaction which had got at least minimum number of confirmations"
      },
      "submitTransaction(address,uint256,bytes)": {
        "details": "when buying is failed, agent should send loan again to TribeOne."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 114,
        "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 16326,
        "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
        "label": "signers",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 16330,
        "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
        "label": "isSigner",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 16332,
        "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
        "label": "numConfirmationsRequired",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 16349,
        "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
        "label": "isConfirmed",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 16353,
        "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
        "label": "transactions",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_struct(Transaction)16343_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Transaction)16343_storage)dyn_storage": {
        "base": "t_struct(Transaction)16343_storage",
        "encoding": "dynamic_array",
        "label": "struct MultiSigWallet.Transaction[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_struct(Transaction)16343_storage": {
        "encoding": "inplace",
        "label": "struct MultiSigWallet.Transaction",
        "members": [
          {
            "astId": 16334,
            "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
            "label": "to",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 16336,
            "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
            "label": "value",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 16338,
            "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
            "label": "data",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes_storage"
          },
          {
            "astId": 16340,
            "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
            "label": "executed",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 16342,
            "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
            "label": "numConfirmations",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}