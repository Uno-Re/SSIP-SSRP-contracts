{
  "address": "0x6d55FAf5a7537b3771e8BdFcCE29AD8c0bAac364",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_signers",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_numConfirmationsRequired",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "txIndex",
          "type": "uint256"
        }
      ],
      "name": "ConfirmTransaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "txIndex",
          "type": "uint256"
        }
      ],
      "name": "ExecuteTransaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "txIndex",
          "type": "uint256"
        }
      ],
      "name": "RevokeConfirmation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "txIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "SubmitTransaction",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_execute",
          "type": "bool"
        }
      ],
      "name": "confirmTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        }
      ],
      "name": "executeTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSigners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        }
      ],
      "name": "getTransaction",
      "outputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "numConfirmations",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTransactionCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isConfirmed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isSigner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numConfirmationsRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        }
      ],
      "name": "revokeConfirmation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "signers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "submitTransaction",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x348082dd327673725ddaf6d55ac59501051c5582fa617f436a25ed9f4653246a",
  "receipt": {
    "to": null,
    "from": "0xedFFe0a06914c9D6083B4B099e5b935E9E84c9a5",
    "contractAddress": "0x6d55FAf5a7537b3771e8BdFcCE29AD8c0bAac364",
    "transactionIndex": 12,
    "gasUsed": "1285747",
    "logsBloom": "0x
    "blockHash": "0xeb5ff788c0ee4f8cb012f29af337f258acfd7c55a1bd2393b7277c19331dd89c",
    "transactionHash": "0x348082dd327673725ddaf6d55ac59501051c5582fa617f436a25ed9f4653246a",
    "logs": [],
    "blockNumber": 10577594,
    "cumulativeGasUsed": "4804036",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0x5569BDF4e02cec3fE459796e3d0e741616029fA4",
      "0x8CB75ae7a37f20cC73d74eb01b8D9BE81ebe4043",
      "0x378C4B07Ac325E7e19d19fAb10ef523e35d4dd18",
      "0xBeF2C0415CC95b57a6e96cEE05804c8259601a2f",
      "0x7EF5A63908aF1104151F0aE7Af59fA3D691e946c"
    ],
    2
  ],
  "numDeployments": 2,
  "solcInputHash": "573b26df0e2054e8a098179caf9dccc1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_numConfirmationsRequired\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"ConfirmTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"ExecuteTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"RevokeConfirmation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"SubmitTransaction\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_execute\",\"type\":\"bool\"}],\"name\":\"confirmTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"executeTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"getTransaction\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"numConfirmations\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransactionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isConfirmed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numConfirmationsRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"revokeConfirmation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"signers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"submitTransaction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"executeTransaction(uint256)\":{\"details\":\"We did not add onlySigner modifier here, because we want to allow any community member to execute transaction which had got at least minimum number of confirmations\"},\"submitTransaction(address,uint256,bytes)\":{\"details\":\"when buying is failed, agent should send loan again to TribeOne.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/MultiSigWallet.sol\":\"MultiSigWallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/libraries/MultiSigWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.23;\\n\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\n\\ncontract MultiSigWallet is ReentrancyGuard {\\n    event Deposit(address indexed sender, uint256 amount, uint256 balance);\\n    event SubmitTransaction(address indexed signer, uint256 indexed txIndex, address indexed to, uint256 value, bytes data);\\n    event ConfirmTransaction(address indexed signer, uint256 indexed txIndex);\\n    event RevokeConfirmation(address indexed signer, uint256 indexed txIndex);\\n    event ExecuteTransaction(address indexed signer, uint256 indexed txIndex);\\n\\n    address[] public signers;\\n    mapping(address => bool) public isSigner;\\n    uint256 public numConfirmationsRequired;\\n\\n    struct Transaction {\\n        address to;\\n        uint256 value;\\n        bytes data;\\n        bool executed;\\n        uint256 numConfirmations;\\n    }\\n\\n    // mapping from tx index => signer => bool\\n    mapping(uint256 => mapping(address => bool)) public isConfirmed;\\n\\n    Transaction[] private transactions;\\n\\n    modifier onlySigner() {\\n        require(isSigner[msg.sender], \\\"not signer\\\");\\n        _;\\n    }\\n\\n    modifier txExists(uint256 _txIndex) {\\n        require(_txIndex < transactions.length, \\\"tx does not exist\\\");\\n        _;\\n    }\\n\\n    modifier notExecuted(uint256 _txIndex) {\\n        require(!transactions[_txIndex].executed, \\\"tx already executed\\\");\\n        _;\\n    }\\n\\n    modifier notConfirmed(uint256 _txIndex) {\\n        require(!isConfirmed[_txIndex][msg.sender], \\\"tx already confirmed\\\");\\n        _;\\n    }\\n\\n    constructor(address[] memory _signers, uint256 _numConfirmationsRequired) {\\n        require(_signers.length > 0, \\\"signers required\\\");\\n        require(\\n            _numConfirmationsRequired > 0 && _numConfirmationsRequired <= _signers.length,\\n            \\\"invalid number of required confirmations\\\"\\n        );\\n\\n        for (uint256 i = 0; i < _signers.length; i++) {\\n            address signer = _signers[i];\\n\\n            require(signer != address(0), \\\"invalid signer\\\");\\n            require(!isSigner[signer], \\\"signer not unique\\\");\\n\\n            isSigner[signer] = true;\\n            signers.push(signer);\\n        }\\n\\n        numConfirmationsRequired = _numConfirmationsRequired;\\n    }\\n\\n    receive() external payable {\\n        emit Deposit(msg.sender, msg.value, address(this).balance);\\n    }\\n\\n    function getThreshold() external view returns (uint256) {\\n        return numConfirmationsRequired;\\n    }\\n\\n    function getOwners() external view returns (address[] memory) {\\n        return signers;\\n    }\\n\\n    /**\\n     * @dev when buying is failed, agent should send loan again to TribeOne.\\n     */\\n    function submitTransaction(address _to, uint256 _value, bytes memory _data) public payable onlySigner nonReentrant {\\n        if (_value > 0) {\\n            require(msg.value == _value, \\\"Should send value\\\");\\n        }\\n        uint256 txIndex = transactions.length;\\n\\n        transactions.push(Transaction({to: _to, value: _value, data: _data, executed: false, numConfirmations: 0}));\\n\\n        emit SubmitTransaction(msg.sender, txIndex, _to, _value, _data);\\n    }\\n\\n    function confirmTransaction(\\n        uint256 _txIndex,\\n        bool _execute\\n    ) public onlySigner txExists(_txIndex) notExecuted(_txIndex) notConfirmed(_txIndex) {\\n        Transaction storage transaction = transactions[_txIndex];\\n        isConfirmed[_txIndex][msg.sender] = true;\\n        transaction.numConfirmations += 1;\\n\\n        emit ConfirmTransaction(msg.sender, _txIndex);\\n\\n        if (transaction.numConfirmations >= numConfirmationsRequired && _execute) {\\n            _executeTransaction(_txIndex);\\n        }\\n    }\\n\\n    /**\\n     * @dev We did not add onlySigner modifier here, because we want to allow any community member to execute transaction\\n     * which had got at least minimum number of confirmations\\n     */\\n    function executeTransaction(uint256 _txIndex) external {\\n        _executeTransaction(_txIndex);\\n    }\\n\\n    function _executeTransaction(uint256 _txIndex) private txExists(_txIndex) notExecuted(_txIndex) {\\n        Transaction storage transaction = transactions[_txIndex];\\n\\n        require(transaction.numConfirmations >= numConfirmationsRequired, \\\"cannot execute tx\\\");\\n\\n        transaction.executed = true;\\n\\n        (bool success, ) = transaction.to.call{value: transaction.value}(transaction.data);\\n        require(success, \\\"tx failed\\\");\\n\\n        emit ExecuteTransaction(msg.sender, _txIndex);\\n    }\\n\\n    function revokeConfirmation(uint256 _txIndex) public onlySigner txExists(_txIndex) notExecuted(_txIndex) {\\n        Transaction storage transaction = transactions[_txIndex];\\n\\n        require(isConfirmed[_txIndex][msg.sender], \\\"tx not confirmed\\\");\\n\\n        transaction.numConfirmations -= 1;\\n        isConfirmed[_txIndex][msg.sender] = false;\\n\\n        emit RevokeConfirmation(msg.sender, _txIndex);\\n    }\\n\\n    function getSigners() public view returns (address[] memory) {\\n        return signers;\\n    }\\n\\n    function getTransactionCount() public view returns (uint256) {\\n        return transactions.length;\\n    }\\n\\n    function getTransaction(\\n        uint256 _txIndex\\n    ) public view returns (address to, uint256 value, bytes memory data, bool executed, uint256 numConfirmations) {\\n        Transaction storage transaction = transactions[_txIndex];\\n\\n        return (transaction.to, transaction.value, transaction.data, transaction.executed, transaction.numConfirmations);\\n    }\\n}\\n\",\"keccak256\":\"0xbc901b808122b19e1a28aa5722185e71c29449839dead0a114c17d0b9773e948\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620014373803806200143783398101604081905262000034916200027e565b60016000558151620000805760405162461bcd60e51b815260206004820152601060248201526f1cda59db995c9cc81c995c5d5a5c995960821b60448201526064015b60405180910390fd5b60008111801562000092575081518111155b620000f15760405162461bcd60e51b815260206004820152602860248201527f696e76616c6964206e756d626572206f6620726571756972656420636f6e6669604482015267726d6174696f6e7360c01b606482015260840162000077565b60005b82518110156200024057600083828151811062000115576200011562000358565b6020026020010151905060006001600160a01b0316816001600160a01b031603620001745760405162461bcd60e51b815260206004820152600e60248201526d34b73b30b634b21039b4b3b732b960911b604482015260640162000077565b6001600160a01b03811660009081526002602052604090205460ff1615620001d35760405162461bcd60e51b81526020600482015260116024820152707369676e6572206e6f7420756e6971756560781b604482015260640162000077565b6001600160a01b03166000818152600260205260408120805460ff1916600190811790915580548082018255918190527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690910180546001600160a01b03191690921790915501620000f4565b50600355506200036e565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200027957600080fd5b919050565b600080604083850312156200029257600080fd5b82516001600160401b0380821115620002aa57600080fd5b818501915085601f830112620002bf57600080fd5b8151602082821115620002d657620002d66200024b565b8160051b604051601f19603f83011681018181108682111715620002fe57620002fe6200024b565b6040529283528183019350848101820192898411156200031d57600080fd5b948201945b838610156200034657620003368662000261565b8552948201949382019362000322565b97909101519698969750505050505050565b634e487b7160e01b600052603260045260246000fd5b6110b9806200037e6000396000f3fe6080604052600436106100c65760003560e01c806394cf795e1161007f578063c6a725d811610059578063c6a725d81461026b578063d0549b851461028b578063e75235b8146102a1578063ee22610b146102b657600080fd5b806394cf795e14610236578063a0e67e2b14610236578063c64274741461025857600080fd5b80632079fb9a1461010c57806320ea8d86146101495780632e7700f01461016b57806333ea3dc81461018a5780637df73e27146101bb57806380f59a65146101fb57600080fd5b36610107576040805134815247602082015233917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a2005b600080fd5b34801561011857600080fd5b5061012c610127366004610b6f565b6102d6565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561015557600080fd5b50610169610164366004610b6f565b610300565b005b34801561017757600080fd5b506005545b604051908152602001610140565b34801561019657600080fd5b506101aa6101a5366004610b6f565b61048b565b604051610140959493929190610bce565b3480156101c757600080fd5b506101eb6101d6366004610c25565b60026020526000908152604090205460ff1681565b6040519015158152602001610140565b34801561020757600080fd5b506101eb610216366004610c47565b600460209081526000928352604080842090915290825290205460ff1681565b34801561024257600080fd5b5061024b610586565b6040516101409190610c73565b610169610266366004610cd6565b6105e8565b34801561027757600080fd5b50610169610286366004610da1565b6107be565b34801561029757600080fd5b5061017c60035481565b3480156102ad57600080fd5b5060035461017c565b3480156102c257600080fd5b506101696102d1366004610b6f565b610975565b600181815481106102e657600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526002602052604090205460ff166103385760405162461bcd60e51b815260040161032f90610dd6565b60405180910390fd5b6005548190811061035b5760405162461bcd60e51b815260040161032f90610dfa565b816005818154811061036f5761036f610e25565b600091825260209091206003600590920201015460ff16156103a35760405162461bcd60e51b815260040161032f90610e3b565b6000600584815481106103b8576103b8610e25565b600091825260208083208784526004825260408085203386529092529220546005909102909101915060ff166104235760405162461bcd60e51b815260206004820152601060248201526f1d1e081b9bdd0818dbdb999a5c9b595960821b604482015260640161032f565b60018160040160008282546104389190610e7e565b90915550506000848152600460209081526040808320338085529252808320805460ff191690555186927ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd5591a350505050565b60008060606000806000600587815481106104a8576104a8610e25565b6000918252602090912060059091020180546001820154600383015460048401546002850180549596506001600160a01b039094169492939260ff9092169183906104f290610e97565b80601f016020809104026020016040519081016040528092919081815260200182805461051e90610e97565b801561056b5780601f106105405761010080835404028352916020019161056b565b820191906000526020600020905b81548152906001019060200180831161054e57829003601f168201915b50505050509250955095509550955095505091939590929450565b606060018054806020026020016040519081016040528092919081815260200182805480156105de57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105c0575b5050505050905090565b3360009081526002602052604090205460ff166106175760405162461bcd60e51b815260040161032f90610dd6565b61061f610981565b8115610668578134146106685760405162461bcd60e51b815260206004820152601160248201527053686f756c642073656e642076616c756560781b604482015260640161032f565b600580546040805160a0810182526001600160a01b038781168252602082018781529282018681526000606084018190526080840181905260018601875586905282517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db096860296870180546001600160a01b0319169190931617825592517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db18601559151929390927f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db2909101906107409082610f19565b50606082015160038201805460ff19169115159190911790556080909101516004909101556040516001600160a01b03851690829033907fd5a05bf70715ad82a09a756320284a1b54c9ff74cd0f8cce6219e79b563fe59d906107a69088908890610fd9565b60405180910390a4506107b96001600055565b505050565b3360009081526002602052604090205460ff166107ed5760405162461bcd60e51b815260040161032f90610dd6565b600554829081106108105760405162461bcd60e51b815260040161032f90610dfa565b826005818154811061082457610824610e25565b600091825260209091206003600590920201015460ff16156108585760405162461bcd60e51b815260040161032f90610e3b565b6000848152600460209081526040808320338452909152902054849060ff16156108bb5760405162461bcd60e51b81526020600482015260146024820152731d1e08185b1c9958591e4818dbdb999a5c9b595960621b604482015260640161032f565b6000600586815481106108d0576108d0610e25565b6000918252602080832089845260048083526040808620338752909352918420805460ff19166001908117909155600590930201908101805491945091929061091a908490610ffa565b9091555050604051869033907f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb6339004190600090a360035481600401541015801561095f5750845b1561096d5761096d866109ab565b505050505050565b61097e816109ab565b50565b6002600054036109a457604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b600554819081106109ce5760405162461bcd60e51b815260040161032f90610dfa565b81600581815481106109e2576109e2610e25565b600091825260209091206003600590920201015460ff1615610a165760405162461bcd60e51b815260040161032f90610e3b565b600060058481548110610a2b57610a2b610e25565b9060005260206000209060050201905060035481600401541015610a855760405162461bcd60e51b81526020600482015260116024820152700c6c2dcdcdee840caf0cac6eae8ca40e8f607b1b604482015260640161032f565b60038101805460ff191660019081179091558154908201546040516000926001600160a01b03169190610abc90600286019061100d565b60006040518083038185875af1925050503d8060008114610af9576040519150601f19603f3d011682016040523d82523d6000602084013e610afe565b606091505b5050905080610b3b5760405162461bcd60e51b81526020600482015260096024820152681d1e0819985a5b195960ba1b604482015260640161032f565b604051859033907f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac90600090a35050505050565b600060208284031215610b8157600080fd5b5035919050565b6000815180845260005b81811015610bae57602081850181015186830182015201610b92565b506000602082860101526020601f19601f83011685010191505092915050565b60018060a01b038616815284602082015260a060408201526000610bf560a0830186610b88565b931515606083015250608001529392505050565b80356001600160a01b0381168114610c2057600080fd5b919050565b600060208284031215610c3757600080fd5b610c4082610c09565b9392505050565b60008060408385031215610c5a57600080fd5b82359150610c6a60208401610c09565b90509250929050565b6020808252825182820181905260009190848201906040850190845b81811015610cb45783516001600160a01b031683529284019291840191600101610c8f565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215610ceb57600080fd5b610cf484610c09565b925060208401359150604084013567ffffffffffffffff80821115610d1857600080fd5b818601915086601f830112610d2c57600080fd5b813581811115610d3e57610d3e610cc0565b604051601f8201601f19908116603f01168101908382118183101715610d6657610d66610cc0565b81604052828152896020848701011115610d7f57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60008060408385031215610db457600080fd5b8235915060208301358015158114610dcb57600080fd5b809150509250929050565b6020808252600a90820152693737ba1039b4b3b732b960b11b604082015260600190565b6020808252601190820152701d1e08191bd95cc81b9bdd08195e1a5cdd607a1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6020808252601390820152721d1e08185b1c9958591e48195e1958dd5d1959606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b81810381811115610e9157610e91610e68565b92915050565b600181811c90821680610eab57607f821691505b602082108103610ecb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156107b9576000816000526020600020601f850160051c81016020861015610efa5750805b601f850160051c820191505b8181101561096d57828155600101610f06565b815167ffffffffffffffff811115610f3357610f33610cc0565b610f4781610f418454610e97565b84610ed1565b602080601f831160018114610f7c5760008415610f645750858301515b600019600386901b1c1916600185901b17855561096d565b600085815260208120601f198616915b82811015610fab57888601518255948401946001909101908401610f8c565b5085821015610fc95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b828152604060208201526000610ff26040830184610b88565b949350505050565b80820180821115610e9157610e91610e68565b600080835461101b81610e97565b60018281168015611033576001811461104857611077565b60ff1984168752821515830287019450611077565b8760005260208060002060005b8581101561106e5781548a820152908401908201611055565b50505082870194505b5092969550505050505056fea264697066735822122094a581cb3b6ef1a19c03c150c4605f7f26c4fc7474c100222eb640379567c27064736f6c63430008170033",
  "deployedBytecode": "0x6080604052600436106100c65760003560e01c806394cf795e1161007f578063c6a725d811610059578063c6a725d81461026b578063d0549b851461028b578063e75235b8146102a1578063ee22610b146102b657600080fd5b806394cf795e14610236578063a0e67e2b14610236578063c64274741461025857600080fd5b80632079fb9a1461010c57806320ea8d86146101495780632e7700f01461016b57806333ea3dc81461018a5780637df73e27146101bb57806380f59a65146101fb57600080fd5b36610107576040805134815247602082015233917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a2005b600080fd5b34801561011857600080fd5b5061012c610127366004610b6f565b6102d6565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561015557600080fd5b50610169610164366004610b6f565b610300565b005b34801561017757600080fd5b506005545b604051908152602001610140565b34801561019657600080fd5b506101aa6101a5366004610b6f565b61048b565b604051610140959493929190610bce565b3480156101c757600080fd5b506101eb6101d6366004610c25565b60026020526000908152604090205460ff1681565b6040519015158152602001610140565b34801561020757600080fd5b506101eb610216366004610c47565b600460209081526000928352604080842090915290825290205460ff1681565b34801561024257600080fd5b5061024b610586565b6040516101409190610c73565b610169610266366004610cd6565b6105e8565b34801561027757600080fd5b50610169610286366004610da1565b6107be565b34801561029757600080fd5b5061017c60035481565b3480156102ad57600080fd5b5060035461017c565b3480156102c257600080fd5b506101696102d1366004610b6f565b610975565b600181815481106102e657600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526002602052604090205460ff166103385760405162461bcd60e51b815260040161032f90610dd6565b60405180910390fd5b6005548190811061035b5760405162461bcd60e51b815260040161032f90610dfa565b816005818154811061036f5761036f610e25565b600091825260209091206003600590920201015460ff16156103a35760405162461bcd60e51b815260040161032f90610e3b565b6000600584815481106103b8576103b8610e25565b600091825260208083208784526004825260408085203386529092529220546005909102909101915060ff166104235760405162461bcd60e51b815260206004820152601060248201526f1d1e081b9bdd0818dbdb999a5c9b595960821b604482015260640161032f565b60018160040160008282546104389190610e7e565b90915550506000848152600460209081526040808320338085529252808320805460ff191690555186927ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd5591a350505050565b60008060606000806000600587815481106104a8576104a8610e25565b6000918252602090912060059091020180546001820154600383015460048401546002850180549596506001600160a01b039094169492939260ff9092169183906104f290610e97565b80601f016020809104026020016040519081016040528092919081815260200182805461051e90610e97565b801561056b5780601f106105405761010080835404028352916020019161056b565b820191906000526020600020905b81548152906001019060200180831161054e57829003601f168201915b50505050509250955095509550955095505091939590929450565b606060018054806020026020016040519081016040528092919081815260200182805480156105de57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105c0575b5050505050905090565b3360009081526002602052604090205460ff166106175760405162461bcd60e51b815260040161032f90610dd6565b61061f610981565b8115610668578134146106685760405162461bcd60e51b815260206004820152601160248201527053686f756c642073656e642076616c756560781b604482015260640161032f565b600580546040805160a0810182526001600160a01b038781168252602082018781529282018681526000606084018190526080840181905260018601875586905282517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db096860296870180546001600160a01b0319169190931617825592517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db18601559151929390927f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db2909101906107409082610f19565b50606082015160038201805460ff19169115159190911790556080909101516004909101556040516001600160a01b03851690829033907fd5a05bf70715ad82a09a756320284a1b54c9ff74cd0f8cce6219e79b563fe59d906107a69088908890610fd9565b60405180910390a4506107b96001600055565b505050565b3360009081526002602052604090205460ff166107ed5760405162461bcd60e51b815260040161032f90610dd6565b600554829081106108105760405162461bcd60e51b815260040161032f90610dfa565b826005818154811061082457610824610e25565b600091825260209091206003600590920201015460ff16156108585760405162461bcd60e51b815260040161032f90610e3b565b6000848152600460209081526040808320338452909152902054849060ff16156108bb5760405162461bcd60e51b81526020600482015260146024820152731d1e08185b1c9958591e4818dbdb999a5c9b595960621b604482015260640161032f565b6000600586815481106108d0576108d0610e25565b6000918252602080832089845260048083526040808620338752909352918420805460ff19166001908117909155600590930201908101805491945091929061091a908490610ffa565b9091555050604051869033907f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb6339004190600090a360035481600401541015801561095f5750845b1561096d5761096d866109ab565b505050505050565b61097e816109ab565b50565b6002600054036109a457604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b600554819081106109ce5760405162461bcd60e51b815260040161032f90610dfa565b81600581815481106109e2576109e2610e25565b600091825260209091206003600590920201015460ff1615610a165760405162461bcd60e51b815260040161032f90610e3b565b600060058481548110610a2b57610a2b610e25565b9060005260206000209060050201905060035481600401541015610a855760405162461bcd60e51b81526020600482015260116024820152700c6c2dcdcdee840caf0cac6eae8ca40e8f607b1b604482015260640161032f565b60038101805460ff191660019081179091558154908201546040516000926001600160a01b03169190610abc90600286019061100d565b60006040518083038185875af1925050503d8060008114610af9576040519150601f19603f3d011682016040523d82523d6000602084013e610afe565b606091505b5050905080610b3b5760405162461bcd60e51b81526020600482015260096024820152681d1e0819985a5b195960ba1b604482015260640161032f565b604051859033907f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac90600090a35050505050565b600060208284031215610b8157600080fd5b5035919050565b6000815180845260005b81811015610bae57602081850181015186830182015201610b92565b506000602082860101526020601f19601f83011685010191505092915050565b60018060a01b038616815284602082015260a060408201526000610bf560a0830186610b88565b931515606083015250608001529392505050565b80356001600160a01b0381168114610c2057600080fd5b919050565b600060208284031215610c3757600080fd5b610c4082610c09565b9392505050565b60008060408385031215610c5a57600080fd5b82359150610c6a60208401610c09565b90509250929050565b6020808252825182820181905260009190848201906040850190845b81811015610cb45783516001600160a01b031683529284019291840191600101610c8f565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215610ceb57600080fd5b610cf484610c09565b925060208401359150604084013567ffffffffffffffff80821115610d1857600080fd5b818601915086601f830112610d2c57600080fd5b813581811115610d3e57610d3e610cc0565b604051601f8201601f19908116603f01168101908382118183101715610d6657610d66610cc0565b81604052828152896020848701011115610d7f57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60008060408385031215610db457600080fd5b8235915060208301358015158114610dcb57600080fd5b809150509250929050565b6020808252600a90820152693737ba1039b4b3b732b960b11b604082015260600190565b6020808252601190820152701d1e08191bd95cc81b9bdd08195e1a5cdd607a1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6020808252601390820152721d1e08185b1c9958591e48195e1958dd5d1959606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b81810381811115610e9157610e91610e68565b92915050565b600181811c90821680610eab57607f821691505b602082108103610ecb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156107b9576000816000526020600020601f850160051c81016020861015610efa5750805b601f850160051c820191505b8181101561096d57828155600101610f06565b815167ffffffffffffffff811115610f3357610f33610cc0565b610f4781610f418454610e97565b84610ed1565b602080601f831160018114610f7c5760008415610f645750858301515b600019600386901b1c1916600185901b17855561096d565b600085815260208120601f198616915b82811015610fab57888601518255948401946001909101908401610f8c565b5085821015610fc95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b828152604060208201526000610ff26040830184610b88565b949350505050565b80820180821115610e9157610e91610e68565b600080835461101b81610e97565b60018281168015611033576001811461104857611077565b60ff1984168752821515830287019450611077565b8760005260208060002060005b8581101561106e5781548a820152908401908201611055565b50505082870194505b5092969550505050505056fea264697066735822122094a581cb3b6ef1a19c03c150c4605f7f26c4fc7474c100222eb640379567c27064736f6c63430008170033",
  "devdoc": {
    "errors": {
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "executeTransaction(uint256)": {
        "details": "We did not add onlySigner modifier here, because we want to allow any community member to execute transaction which had got at least minimum number of confirmations"
      },
      "submitTransaction(address,uint256,bytes)": {
        "details": "when buying is failed, agent should send loan again to TribeOne."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4285,
        "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 28181,
        "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
        "label": "signers",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 28185,
        "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
        "label": "isSigner",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 28187,
        "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
        "label": "numConfirmationsRequired",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 28204,
        "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
        "label": "isConfirmed",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 28208,
        "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
        "label": "transactions",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_struct(Transaction)28198_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Transaction)28198_storage)dyn_storage": {
        "base": "t_struct(Transaction)28198_storage",
        "encoding": "dynamic_array",
        "label": "struct MultiSigWallet.Transaction[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_struct(Transaction)28198_storage": {
        "encoding": "inplace",
        "label": "struct MultiSigWallet.Transaction",
        "members": [
          {
            "astId": 28189,
            "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
            "label": "to",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 28191,
            "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
            "label": "value",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 28193,
            "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
            "label": "data",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes_storage"
          },
          {
            "astId": 28195,
            "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
            "label": "executed",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 28197,
            "contract": "contracts/libraries/MultiSigWallet.sol:MultiSigWallet",
            "label": "numConfirmations",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}