{
  "address": "0xE80158dDFE013de2BDEc8eAACFF4068173b6b37a",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "uno",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdt",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "assetEthPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "name": "consult",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethUsdtPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "getAssetEthPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEthUsdPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setAssetEthPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setEthUsdPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdt",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x0e4ced7070c59accaadc87a5a47a6f66351dce7c0718ca2062381925fcaf7619",
  "receipt": {
    "to": null,
    "from": "0xedFFe0a06914c9D6083B4B099e5b935E9E84c9a5",
    "contractAddress": "0xE80158dDFE013de2BDEc8eAACFF4068173b6b37a",
    "transactionIndex": 22,
    "gasUsed": "404913",
    "logsBloom": "0x
    "blockHash": "0xec8f71c463eec8f7976442e585fcb9f42f767ac5e12b8d37ef222fab9e7d5996",
    "transactionHash": "0x0e4ced7070c59accaadc87a5a47a6f66351dce7c0718ca2062381925fcaf7619",
    "logs": [
      {
        "transactionIndex": 22,
        "blockNumber": 10608751,
        "transactionHash": "0x0e4ced7070c59accaadc87a5a47a6f66351dce7c0718ca2062381925fcaf7619",
        "address": "0xE80158dDFE013de2BDEc8eAACFF4068173b6b37a",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000edffe0a06914c9d6083b4b099e5b935e9e84c9a5"
        ],
        "data": "0x",
        "logIndex": 22,
        "blockHash": "0xec8f71c463eec8f7976442e585fcb9f42f767ac5e12b8d37ef222fab9e7d5996"
      }
    ],
    "blockNumber": 10608751,
    "cumulativeGasUsed": "2963341",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf0E7F2c4DF6285878822F4F08B2f4c720835d2b6",
    "0xB6b67A0b6B3e627d9e9aD6232c1CEf3cBb719620"
  ],
  "numDeployments": 1,
  "solcInputHash": "573b26df0e2054e8a098179caf9dccc1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"uno\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"assetEthPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"consult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethUsdtPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"getAssetEthPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEthUsdPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setAssetEthPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setEthUsdPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This smart contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mocks/OraclePriceFeed.sol\":\"MockOraclePriceFeed\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/Mocks/OraclePriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity =0.8.23;\\n\\nimport \\\"../interfaces/IOraclePriceFeed.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * This smart contract\\n */\\n\\ncontract MockOraclePriceFeed is IOraclePriceFeed, Ownable {\\n\\n    uint256 public ethUsdtPrice;\\n    address public usdt;\\n\\n    mapping (address => uint256) public assetEthPrice;\\n\\n    constructor(address uno, address _usdt) Ownable(msg.sender) {\\n        usdt = _usdt;\\n        ethUsdtPrice = 459347726228755;\\n        assetEthPrice[uno] = 18934772622875;\\n        assetEthPrice[usdt] = 459347726228755;\\n    }\\n\\n    function getEthUsdPrice() external view returns (uint256) {\\n        return ethUsdtPrice;\\n    }\\n\\n    function getAssetEthPrice(address _currency) external view returns (uint256) {\\n        return assetEthPrice[_currency];\\n    }\\n\\n    function consult(address token0, address token1, uint256 amount1) external view returns (uint256) {\\n        uint256 ethprice1 = assetEthPrice[token0];\\n        uint256 ethprice2 = assetEthPrice[token1];\\n\\n        return (ethprice1 * amount1) / (ethprice2);\\n        // return \\n    }\\n\\n    function setEthUsdPrice(uint256 _amount) external onlyOwner {\\n        ethUsdtPrice = _amount;\\n    }\\n\\n    function setAssetEthPrice(address _asset, uint256 _amount) external onlyOwner {\\n        assetEthPrice[_asset] = _amount;\\n    }\\n}\\n\",\"keccak256\":\"0xb2922005bd3993e3a7a2f0849d8173039622c7110ce15a37c62b01bef1e9aaea\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IOraclePriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity =0.8.23;\\n\\ninterface IOraclePriceFeed {\\n    function getEthUsdPrice() external view returns (uint256);\\n\\n    function getAssetEthPrice(address _asset) external view returns (uint256);\\n\\n    function consult(address tokenA, address tokenB, uint256 amountIn) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x66aa1189dbb7db67b22b10aedc4fc62c378829abbac6f0d924cad167011a34d2\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161059738038061059783398101604081905261002f9161011e565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e816100b2565b50600280546001600160a01b0319166001600160a01b039283161781556601a1c63a0cdd1360018190559282166000908152600360205260408082206511389865661b905591549092168252902055610151565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461011957600080fd5b919050565b6000806040838503121561013157600080fd5b61013a83610102565b915061014860208401610102565b90509250929050565b610437806101606000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a6146101515780638da5cb5b1461015b578063a0a8045e1461016c578063b100d9af14610174578063b951883a14610187578063f2fde38b1461019a57600080fd5b80632f48ab7d146100ae578063355188ab146100de5780635384491514610115578063636cfa0c14610135578063661e265814610148575b600080fd5b6002546100c1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101076100ec366004610313565b6001600160a01b031660009081526003602052604090205490565b6040519081526020016100d5565b610107610123366004610313565b60036020526000908152604090205481565b610107610143366004610335565b6101ad565b61010760015481565b6101596101f2565b005b6000546001600160a01b03166100c1565b600154610107565b610159610182366004610371565b610206565b61015961019536600461039b565b61022a565b6101596101a8366004610313565b610237565b6001600160a01b03808416600090815260036020526040808220549285168252812054909190806101de85846103b4565b6101e891906103df565b9695505050505050565b6101fa61027a565b61020460006102a7565b565b61020e61027a565b6001600160a01b03909116600090815260036020526040902055565b61023261027a565b600155565b61023f61027a565b6001600160a01b03811661026e57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610277816102a7565b50565b6000546001600160a01b031633146102045760405163118cdaa760e01b8152336004820152602401610265565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461030e57600080fd5b919050565b60006020828403121561032557600080fd5b61032e826102f7565b9392505050565b60008060006060848603121561034a57600080fd5b610353846102f7565b9250610361602085016102f7565b9150604084013590509250925092565b6000806040838503121561038457600080fd5b61038d836102f7565b946020939093013593505050565b6000602082840312156103ad57600080fd5b5035919050565b80820281158282048414176103d957634e487b7160e01b600052601160045260246000fd5b92915050565b6000826103fc57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122042758c446c0621f7107d7d0c689adc31fb4b01a0f145349bea2c084081e9eb1964736f6c63430008170033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a6146101515780638da5cb5b1461015b578063a0a8045e1461016c578063b100d9af14610174578063b951883a14610187578063f2fde38b1461019a57600080fd5b80632f48ab7d146100ae578063355188ab146100de5780635384491514610115578063636cfa0c14610135578063661e265814610148575b600080fd5b6002546100c1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101076100ec366004610313565b6001600160a01b031660009081526003602052604090205490565b6040519081526020016100d5565b610107610123366004610313565b60036020526000908152604090205481565b610107610143366004610335565b6101ad565b61010760015481565b6101596101f2565b005b6000546001600160a01b03166100c1565b600154610107565b610159610182366004610371565b610206565b61015961019536600461039b565b61022a565b6101596101a8366004610313565b610237565b6001600160a01b03808416600090815260036020526040808220549285168252812054909190806101de85846103b4565b6101e891906103df565b9695505050505050565b6101fa61027a565b61020460006102a7565b565b61020e61027a565b6001600160a01b03909116600090815260036020526040902055565b61023261027a565b600155565b61023f61027a565b6001600160a01b03811661026e57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610277816102a7565b50565b6000546001600160a01b031633146102045760405163118cdaa760e01b8152336004820152602401610265565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461030e57600080fd5b919050565b60006020828403121561032557600080fd5b61032e826102f7565b9392505050565b60008060006060848603121561034a57600080fd5b610353846102f7565b9250610361602085016102f7565b9150604084013590509250925092565b6000806040838503121561038457600080fd5b61038d836102f7565b946020939093013593505050565b6000602082840312156103ad57600080fd5b5035919050565b80820281158282048414176103d957634e487b7160e01b600052601160045260246000fd5b92915050565b6000826103fc57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122042758c446c0621f7107d7d0c689adc31fb4b01a0f145349bea2c084081e9eb1964736f6c63430008170033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This smart contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1395,
        "contract": "contracts/Mocks/OraclePriceFeed.sol:MockOraclePriceFeed",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 12739,
        "contract": "contracts/Mocks/OraclePriceFeed.sol:MockOraclePriceFeed",
        "label": "ethUsdtPrice",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 12741,
        "contract": "contracts/Mocks/OraclePriceFeed.sol:MockOraclePriceFeed",
        "label": "usdt",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 12745,
        "contract": "contracts/Mocks/OraclePriceFeed.sol:MockOraclePriceFeed",
        "label": "assetEthPrice",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}