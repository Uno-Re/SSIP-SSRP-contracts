{
  "address": "0x91f9ad6aec2f140C54c6289510C3daFBC8736DBe",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_usdcToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oraclePriceFeed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_multiSigWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_swapDeadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "AddressEmptyCode",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddressInsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EnforcedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpectedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedInnerCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SafeERC20FailedOperation",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_dexAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_convertToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_convertAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_convertedAmount",
          "type": "uint256"
        }
      ],
      "name": "ConvertedTokenToETH",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_dexAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_convertToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_convertedToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_convertAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_convertedAmount",
          "type": "uint256"
        }
      ],
      "name": "ConvertedTokenToToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_whiteListAddress",
          "type": "address"
        }
      ],
      "name": "LogAddWhiteList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_whiteListAddress",
          "type": "address"
        }
      ],
      "name": "LogRemoveWhiteList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_oraclePriceFeed",
          "type": "address"
        }
      ],
      "name": "LogSetOraclePriceFeed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_exchangeAgent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_slippage",
          "type": "uint256"
        }
      ],
      "name": "LogSetSlippage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "UNISWAP_FACTORY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNISWAP_ROUTER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_whiteListAddress",
          "type": "address"
        }
      ],
      "name": "addWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_convertAmount",
          "type": "uint256"
        }
      ],
      "name": "convertForETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_token0Amount",
          "type": "uint256"
        }
      ],
      "name": "convertForToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "getETHAmountForToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_usdtAmount",
          "type": "uint256"
        }
      ],
      "name": "getETHAmountForUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_token0Amount",
          "type": "uint256"
        }
      ],
      "name": "getNeededTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_ethAmount",
          "type": "uint256"
        }
      ],
      "name": "getTokenAmountForETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_usdtAmount",
          "type": "uint256"
        }
      ],
      "name": "getTokenAmountForUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "killPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oraclePriceFeed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_whiteListAddress",
          "type": "address"
        }
      ],
      "name": "removeWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "revivePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oraclePriceFeed",
          "type": "address"
        }
      ],
      "name": "setOraclePriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_slippage",
          "type": "uint256"
        }
      ],
      "name": "setSlippage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_swapDeadline",
          "type": "uint256"
        }
      ],
      "name": "setSwapDeadline",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slippage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdcToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xa4d3a58254e8e26006bf0643ef3728c175bfbbd5e6b75d1dcab7daef4f776770",
  "receipt": {
    "to": null,
    "from": "0xedFFe0a06914c9D6083B4B099e5b935E9E84c9a5",
    "contractAddress": "0x91f9ad6aec2f140C54c6289510C3daFBC8736DBe",
    "transactionIndex": 7,
    "gasUsed": "2317231",
    "logsBloom": "0x
    "blockHash": "0xeb0891c7ffb7323125feedb5d40aaa7d09a6eaf66c222ba535b81221d140ba4d",
    "transactionHash": "0xa4d3a58254e8e26006bf0643ef3728c175bfbbd5e6b75d1dcab7daef4f776770",
    "logs": [
      {
        "transactionIndex": 7,
        "blockNumber": 10419673,
        "transactionHash": "0xa4d3a58254e8e26006bf0643ef3728c175bfbbd5e6b75d1dcab7daef4f776770",
        "address": "0x91f9ad6aec2f140C54c6289510C3daFBC8736DBe",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000bc13ca15b56beea075e39f6f6c09ca40c10ddba6"
        ],
        "data": "0x",
        "logIndex": 17,
        "blockHash": "0xeb0891c7ffb7323125feedb5d40aaa7d09a6eaf66c222ba535b81221d140ba4d"
      }
    ],
    "blockNumber": 10419673,
    "cumulativeGasUsed": "2917171",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xB6b67A0b6B3e627d9e9aD6232c1CEf3cBb719620",
    "0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6",
    "0x8e2D79d787A4C35F7d7443180F141894cd1Bbfb8",
    "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",
    "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
    "0xBC13Ca15b56BEEA075E39F6f6C09CA40c10Ddba6",
    "60000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "d2fc875e3afcbd9499ae3f5e7a33f9ef",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdcToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oraclePriceFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_multiSigWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_swapDeadline\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_dexAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_convertToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_convertAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_convertedAmount\",\"type\":\"uint256\"}],\"name\":\"ConvertedTokenToETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_dexAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_convertToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_convertedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_convertAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_convertedAmount\",\"type\":\"uint256\"}],\"name\":\"ConvertedTokenToToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_whiteListAddress\",\"type\":\"address\"}],\"name\":\"LogAddWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_whiteListAddress\",\"type\":\"address\"}],\"name\":\"LogRemoveWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_oraclePriceFeed\",\"type\":\"address\"}],\"name\":\"LogSetOraclePriceFeed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_exchangeAgent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_slippage\",\"type\":\"uint256\"}],\"name\":\"LogSetSlippage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UNISWAP_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNISWAP_ROUTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_whiteListAddress\",\"type\":\"address\"}],\"name\":\"addWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_convertAmount\",\"type\":\"uint256\"}],\"name\":\"convertForETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_token0Amount\",\"type\":\"uint256\"}],\"name\":\"convertForToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"getETHAmountForToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_usdtAmount\",\"type\":\"uint256\"}],\"name\":\"getETHAmountForUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_token0Amount\",\"type\":\"uint256\"}],\"name\":\"getNeededTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ethAmount\",\"type\":\"uint256\"}],\"name\":\"getTokenAmountForETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_usdtAmount\",\"type\":\"uint256\"}],\"name\":\"getTokenAmountForUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"killPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oraclePriceFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_whiteListAddress\",\"type\":\"address\"}],\"name\":\"removeWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revivePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oraclePriceFeed\",\"type\":\"address\"}],\"name\":\"setOraclePriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slippage\",\"type\":\"uint256\"}],\"name\":\"setSlippage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_swapDeadline\",\"type\":\"uint256\"}],\"name\":\"setSwapDeadline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ExchangeAgent.sol\":\"ExchangeAgent\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC20Permit} from \\\"../extensions/IERC20Permit.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev An operation with an ERC20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data);\\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/ExchangeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity =0.8.23;\\n\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/IUniswapFactory.sol\\\";\\nimport \\\"./interfaces/IUniswapRouter02.sol\\\";\\nimport \\\"./interfaces/IOraclePriceFeed.sol\\\";\\nimport \\\"./interfaces/IExchangeAgent.sol\\\";\\nimport \\\"./libraries/TransferHelper.sol\\\";\\nimport \\\"./interfaces/IGnosisSafe.sol\\\";\\n\\ncontract ExchangeAgent is IExchangeAgent, ReentrancyGuard, Ownable, Pausable {\\n    address public immutable override usdcToken;\\n    address public immutable UNISWAP_FACTORY;\\n    address public immutable UNISWAP_ROUTER;\\n    address public immutable WETH;\\n    address public oraclePriceFeed;\\n    uint256 public slippage;\\n    uint256 private constant SLIPPAGE_PRECISION = 100;\\n    uint256 public swapDeadline;\\n\\n    mapping(address => bool) public whiteList;\\n\\n    event ConvertedTokenToToken(\\n        address indexed _dexAddress,\\n        address indexed _convertToken,\\n        address indexed _convertedToken,\\n        uint256 _convertAmount,\\n        uint256 _desiredAmount,\\n        uint256 _convertedAmount\\n    );\\n\\n    event ConvertedTokenToETH(\\n        address indexed _dexAddress,\\n        address indexed _convertToken,\\n        uint256 _convertAmount,\\n        uint256 _desiredAmount,\\n        uint256 _convertedAmount\\n    );\\n\\n    event LogAddWhiteList(address indexed _exchangeAgent, address indexed _whiteListAddress);\\n    event LogRemoveWhiteList(address indexed _exchangeAgent, address indexed _whiteListAddress);\\n    event LogSetSlippage(address indexed _exchangeAgent, uint256 _slippage);\\n    event LogSetOraclePriceFeed(address indexed _exchangeAgent, address indexed _oraclePriceFeed);\\n\\n    constructor(\\n        address _usdcToken,\\n        address _WETH,\\n        address _oraclePriceFeed,\\n        address _uniswapRouter,\\n        address _uniswapFactory,\\n        address _multiSigWallet,\\n        uint256 _swapDeadline\\n    ) Ownable(_multiSigWallet) {\\n        require(_usdcToken != address(0), \\\"UnoRe: zero USDC address\\\");\\n        require(_uniswapRouter != address(0), \\\"UnoRe: zero uniswapRouter address\\\");\\n        require(_uniswapFactory != address(0), \\\"UnoRe: zero uniswapFactory address\\\");\\n        require(_WETH != address(0), \\\"UnoRe: zero WETH address\\\");\\n        require(_multiSigWallet != address(0), \\\"UnoRe: zero multisigwallet address\\\");\\n        require(IGnosisSafe(_multiSigWallet).getOwners().length > 3, \\\"UnoRe: more than three owners requied\\\");\\n        require(IGnosisSafe(_multiSigWallet).getThreshold() > 1, \\\"UnoRe: more than one owners requied to verify\\\");\\n        usdcToken = _usdcToken;\\n        UNISWAP_FACTORY = _uniswapFactory;\\n        UNISWAP_ROUTER = _uniswapRouter;\\n        WETH = _WETH;\\n        oraclePriceFeed = _oraclePriceFeed;\\n        whiteList[msg.sender] = true;\\n        slippage = 5 * SLIPPAGE_PRECISION;\\n        swapDeadline = _swapDeadline;\\n    }\\n\\n    modifier onlyWhiteList() {\\n        require(whiteList[msg.sender], \\\"UnoRe: ExchangeAgent Forbidden\\\");\\n        _;\\n    }\\n\\n    receive() external payable {}\\n\\n    function killPool() external onlyOwner {\\n        _pause();\\n    }\\n\\n    function revivePool() external onlyOwner {\\n        _unpause();\\n    }\\n\\n    function setSwapDeadline(uint256 _swapDeadline) external onlyOwner {\\n        swapDeadline = _swapDeadline;\\n    }\\n\\n    function addWhiteList(address _whiteListAddress) external onlyOwner {\\n        require(_whiteListAddress != address(0), \\\"UnoRe: zero address\\\");\\n        require(!whiteList[_whiteListAddress], \\\"UnoRe: white list already\\\");\\n        whiteList[_whiteListAddress] = true;\\n        emit LogAddWhiteList(address(this), _whiteListAddress);\\n    }\\n\\n    function removeWhiteList(address _whiteListAddress) external onlyOwner {\\n        require(_whiteListAddress != address(0), \\\"UnoRe: zero address\\\");\\n        require(whiteList[_whiteListAddress], \\\"UnoRe: white list removed or unadded already\\\");\\n        whiteList[_whiteListAddress] = false;\\n        emit LogRemoveWhiteList(address(this), _whiteListAddress);\\n    }\\n\\n    function setSlippage(uint256 _slippage) external onlyOwner {\\n        require(_slippage > 0, \\\"UnoRe: zero slippage\\\");\\n        require(_slippage < 100, \\\"UnoRe: 100% slippage overflow\\\");\\n        slippage = _slippage * SLIPPAGE_PRECISION;\\n        emit LogSetSlippage(address(this), _slippage);\\n    }\\n\\n    function setOraclePriceFeed(address _oraclePriceFeed) external onlyOwner {\\n        require(_oraclePriceFeed != address(0), \\\"UnoRe: zero address\\\");\\n        oraclePriceFeed = _oraclePriceFeed;\\n        emit LogSetOraclePriceFeed(address(this), oraclePriceFeed);\\n    }\\n\\n    // estimate token amount for amount in USDC\\n    function getTokenAmountForUSDC(address _token, uint256 _usdtAmount) external view override returns (uint256) {\\n        return _getNeededTokenAmount(usdcToken, _token, _usdtAmount);\\n    }\\n\\n    // estimate ETH amount for amount in USDC\\n    function getETHAmountForUSDC(uint256 _usdtAmount) external view override returns (uint256) {\\n        uint256 ethPrice = IOraclePriceFeed(oraclePriceFeed).getAssetEthPrice(usdcToken);\\n        uint256 tokenDecimal = IERC20Metadata(usdcToken).decimals();\\n        return (_usdtAmount * ethPrice) / (10 ** tokenDecimal);\\n    }\\n\\n    function getETHAmountForToken(address _token, uint256 _tokenAmount) public view override returns (uint256) {\\n        uint256 ethPrice = IOraclePriceFeed(oraclePriceFeed).getAssetEthPrice(_token);\\n        uint256 tokenDecimal = IERC20Metadata(_token).decimals();\\n        return (_tokenAmount * ethPrice) / (10 ** tokenDecimal);\\n    }\\n\\n    function getTokenAmountForETH(address _token, uint256 _ethAmount) public view override returns (uint256) {\\n        uint256 ethPrice = IOraclePriceFeed(oraclePriceFeed).getAssetEthPrice(_token);\\n        uint256 tokenDecimal = IERC20Metadata(_token).decimals();\\n        return (_ethAmount * (10 ** tokenDecimal)) / ethPrice;\\n    }\\n\\n    function getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external view override returns (uint256) {\\n        return _getNeededTokenAmount(_token0, _token1, _token0Amount);\\n    }\\n\\n    function convertForToken(\\n        address _token0,\\n        address _token1,\\n        uint256 _token0Amount\\n    ) external override onlyWhiteList whenNotPaused nonReentrant returns (uint256) {\\n        uint256 twapPrice = 0;\\n        if (_token0 != address(0)) {\\n            require(IERC20(_token0).balanceOf(msg.sender) > 0, \\\"UnoRe: zero balance\\\");\\n            TransferHelper.safeTransferFrom(_token0, msg.sender, address(this), _token0Amount);\\n            twapPrice = _getNeededTokenAmount(_token0, _token1, _token0Amount);\\n        } else {\\n            twapPrice = getTokenAmountForETH(_token1, _token0Amount);\\n        }\\n        require(twapPrice > 0, \\\"UnoRe: no pairs\\\");\\n        uint256 desiredAmount = (twapPrice * (100 * SLIPPAGE_PRECISION - slippage)) / 100 / SLIPPAGE_PRECISION;\\n\\n        uint256 convertedAmount = _convertTokenForToken(UNISWAP_ROUTER, _token0, _token1, _token0Amount, desiredAmount);\\n        return convertedAmount;\\n    }\\n\\n    function convertForETH(\\n        address _token,\\n        uint256 _convertAmount\\n    ) external override onlyWhiteList whenNotPaused nonReentrant returns (uint256) {\\n        require(IERC20(_token).balanceOf(msg.sender) > 0, \\\"UnoRe: zero balance\\\");\\n        if (_token != address(0)) {\\n            TransferHelper.safeTransferFrom(_token, msg.sender, address(this), _convertAmount);\\n        }\\n        uint256 twapPriceInUSDC = getETHAmountForToken(_token, _convertAmount);\\n        require(twapPriceInUSDC > 0, \\\"UnoRe: no pairs\\\");\\n        uint256 desiredAmount = (twapPriceInUSDC * (100 * SLIPPAGE_PRECISION - slippage)) / 100 / SLIPPAGE_PRECISION;\\n\\n        uint256 convertedAmount = _convertTokenForETH(UNISWAP_ROUTER, _token, _convertAmount, desiredAmount);\\n        return convertedAmount;\\n    }\\n\\n    function _convertTokenForToken(\\n        address _dexAddress,\\n        address _token0,\\n        address _token1,\\n        uint256 _convertAmount,\\n        uint256 _desiredAmount\\n    ) private returns (uint256) {\\n        IUniswapRouter02 _dexRouter = IUniswapRouter02(_dexAddress);\\n        address _factory = _dexRouter.factory();\\n        uint256 usdtBalanceBeforeSwap = IERC20(_token1).balanceOf(msg.sender);\\n        address inpToken = _dexRouter.WETH();\\n        if (_token0 != address(0)) {\\n            inpToken = _token0;\\n            TransferHelper.safeApprove(_token0, address(_dexRouter), _convertAmount);\\n        }\\n        if (IUniswapFactory(_factory).getPair(inpToken, _token1) != address(0)) {\\n            address[] memory path = new address[](2);\\n            path[0] = inpToken;\\n            path[1] = _token1;\\n            if (_token0 == address(0)) {\\n                _dexRouter.swapExactETHForTokensSupportingFeeOnTransferTokens{value: _convertAmount}(\\n                    _desiredAmount,\\n                    path,\\n                    msg.sender,\\n                    block.timestamp + swapDeadline\\n                );\\n            } else {\\n                _dexRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n                    _convertAmount,\\n                    _desiredAmount,\\n                    path,\\n                    msg.sender,\\n                    block.timestamp\\n                );\\n            }\\n        }\\n        uint256 usdtBalanceAfterSwap = IERC20(_token1).balanceOf(msg.sender);\\n        emit ConvertedTokenToToken(\\n            _dexAddress,\\n            _token0,\\n            _token1,\\n            _convertAmount,\\n            _desiredAmount,\\n            usdtBalanceAfterSwap - usdtBalanceBeforeSwap\\n        );\\n        return usdtBalanceAfterSwap - usdtBalanceBeforeSwap;\\n    }\\n\\n    function _convertTokenForETH(\\n        address _dexAddress,\\n        address _token,\\n        uint256 _convertAmount,\\n        uint256 _desiredAmount\\n    ) private returns (uint256) {\\n        IUniswapRouter02 _dexRouter = IUniswapRouter02(_dexAddress);\\n        address _factory = _dexRouter.factory();\\n        uint256 ethBalanceBeforeSwap = address(msg.sender).balance;\\n        SafeERC20.forceApprove(IERC20(_token), address(_dexRouter), _convertAmount);\\n        if (IUniswapFactory(_factory).getPair(_token, WETH) != address(0)) {\\n            address[] memory path = new address[](2);\\n            path[0] = _token;\\n            path[1] = WETH;\\n            _dexRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(\\n                _convertAmount,\\n                _desiredAmount,\\n                path,\\n                msg.sender,\\n                block.timestamp + swapDeadline\\n            );\\n        }\\n        uint256 ethBalanceAfterSwap = address(msg.sender).balance;\\n        emit ConvertedTokenToETH(_dexAddress, _token, _convertAmount, _desiredAmount, ethBalanceAfterSwap - ethBalanceBeforeSwap);\\n        return ethBalanceAfterSwap - ethBalanceBeforeSwap;\\n    }\\n\\n    /**\\n     * @dev Get expected _token1 amount for _inputAmount of _token0\\n     * _desiredAmount should consider decimals based on _token1\\n     */\\n    function _getNeededTokenAmount(address _token0, address _token1, uint256 _token0Amount) private view returns (uint256) {\\n        uint256 expectedToken1Amount = IOraclePriceFeed(oraclePriceFeed).consult(_token0, _token1, _token0Amount);\\n\\n        return expectedToken1Amount;\\n    }\\n}\\n\",\"keccak256\":\"0x8be3c3445d73a55448cd216a840aed92977ff7d12c6c6fa0ddc719d706b31a77\",\"license\":\"MIT\"},\"contracts/interfaces/IExchangeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity =0.8.23;\\n\\ninterface IExchangeAgent {\\n    function usdcToken() external view returns (address);\\n\\n    function getTokenAmountForUSDC(address _token, uint256 _usdtAmount) external view returns (uint256);\\n\\n    function getETHAmountForUSDC(uint256 _usdtAmount) external view returns (uint256);\\n\\n    function getETHAmountForToken(address _token, uint256 _tokenAmount) external view returns (uint256);\\n\\n    function getTokenAmountForETH(address _token, uint256 _ethAmount) external view returns (uint256);\\n\\n    function getNeededTokenAmount(address _token0, address _token1, uint256 _token0Amount) external view returns (uint256);\\n\\n    function convertForToken(address _token0, address _token1, uint256 _token0Amount) external returns (uint256);\\n\\n    function convertForETH(address _token, uint256 _convertAmount) external returns (uint256);\\n}\\n\",\"keccak256\":\"0xb3a0b6e72d0cac4ea4a6044538673f2cac3568a1bd9f2b3359979065b8486472\",\"license\":\"MIT\"},\"contracts/interfaces/IGnosisSafe.sol\":{\"content\":\"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.23;\\n\\ninterface IGnosisSafe {\\n    function getOwners() external view returns (address[] memory);\\n\\n    function getThreshold() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xa958d03be51c456e26205695b66fd76ea243c91c24ca549360074b4782575e4d\",\"license\":\"MIT\"},\"contracts/interfaces/IOraclePriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity =0.8.23;\\n\\ninterface IOraclePriceFeed {\\n    function getEthUsdPrice() external view returns (uint256);\\n\\n    function getAssetEthPrice(address _asset) external view returns (uint256);\\n\\n    function consult(address tokenA, address tokenB, uint256 amountIn) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x66aa1189dbb7db67b22b10aedc4fc62c378829abbac6f0d924cad167011a34d2\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IUniswapFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity =0.8.23;\\n\\ninterface IUniswapFactory {\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint256);\\n\\n    function feeTo() external view returns (address);\\n\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n\\n    function allPairs(uint256) external view returns (address pair);\\n\\n    function allPairsLength() external view returns (uint256);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n\\n    function setFeeToSetter(address) external;\\n}\\n\",\"keccak256\":\"0x890218fc52814fcf71bf8d2ba85c0acfb8a241ca0d1f86614cc89ee6f973efd4\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IUniswapRouter01.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity =0.8.23;\\n\\ninterface IUniswapRouter01 {\\n    function factory() external pure returns (address);\\n\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB, uint256 liquidity);\\n\\n    function addLiquidityETH(\\n        address token,\\n        uint256 amountTokenDesired,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256 amountToken, uint256 amountETH, uint256 liquidity);\\n\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETH(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactTokens(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactETH(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapETHForExactTokens(\\n        uint256 amountOut,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function quote(uint256 amountA, uint256 reserveA, uint256 reserveB) external pure returns (uint256 amountB);\\n\\n    function getAmountOut(uint256 amountIn, uint256 reserveIn, uint256 reserveOut) external pure returns (uint256 amountOut);\\n\\n    function getAmountIn(uint256 amountOut, uint256 reserveIn, uint256 reserveOut) external pure returns (uint256 amountIn);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\\n\\n    function getAmountsIn(uint256 amountOut, address[] calldata path) external view returns (uint256[] memory amounts);\\n}\\n\",\"keccak256\":\"0x36a05e9d3ad29003737db9a4e8bb706d97c19c5d314db1726db61db91e8ba490\",\"license\":\"MIT\"},\"contracts/interfaces/IUniswapRouter02.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity =0.8.23;\\n\\nimport \\\"./IUniswapRouter01.sol\\\";\\n\\ninterface IUniswapRouter02 is IUniswapRouter01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountETH);\\n\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable;\\n\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0xbd795098c93bc0f953fc07c0ee09d28fbeb527b63cfd03ed1d5211f8c5370f22\",\"license\":\"MIT\"},\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity =0.8.23;\\n\\n// from Uniswap TransferHelper library\\nlibrary TransferHelper {\\n    function safeApprove(address token, address to, uint256 value) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeApprove: approve failed\\\");\\n    }\\n\\n    function safeTransfer(address token, address to, uint256 value) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeTransfer: transfer failed\\\");\\n    }\\n\\n    function safeTransferFrom(address token, address from, address to, uint256 value) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::transferFrom: transferFrom failed\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"TransferHelper::safeTransferETH: ETH transfer failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x4082117a71b75d3953bcccdd159aad939678458f80b500ce48717a4e8813c0fb\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x6101006040523480156200001257600080fd5b5060405162002ca638038062002ca68339810160408190526200003591620004d5565b6001600055816001600160a01b0381166200006b57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000768162000466565b506001805460ff60a01b191690556001600160a01b038716620000dc5760405162461bcd60e51b815260206004820152601860248201527f556e6f52653a207a65726f205553444320616464726573730000000000000000604482015260640162000062565b6001600160a01b0384166200013e5760405162461bcd60e51b815260206004820152602160248201527f556e6f52653a207a65726f20756e6973776170526f75746572206164647265736044820152607360f81b606482015260840162000062565b6001600160a01b038316620001a15760405162461bcd60e51b815260206004820152602260248201527f556e6f52653a207a65726f20756e6973776170466163746f7279206164647265604482015261737360f01b606482015260840162000062565b6001600160a01b038616620001f95760405162461bcd60e51b815260206004820152601860248201527f556e6f52653a207a65726f205745544820616464726573730000000000000000604482015260640162000062565b6001600160a01b0382166200025c5760405162461bcd60e51b815260206004820152602260248201527f556e6f52653a207a65726f206d756c746973696777616c6c6574206164647265604482015261737360f01b606482015260840162000062565b6003826001600160a01b031663a0e67e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200029d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620002c7919081019062000577565b5111620003255760405162461bcd60e51b815260206004820152602560248201527f556e6f52653a206d6f7265207468616e207468726565206f776e6572732072656044820152641c5d5a595960da1b606482015260840162000062565b6001826001600160a01b031663e75235b86040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000366573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200038c919062000649565b11620003f15760405162461bcd60e51b815260206004820152602d60248201527f556e6f52653a206d6f7265207468616e206f6e65206f776e657273207265717560448201526c69656420746f2076657269667960981b606482015260840162000062565b6001600160a01b0387811660805283811660a05284811660c05286811660e052600280546001600160a01b031916918716919091179055336000908152600560208190526040909120805460ff19166001179055620004539060649062000663565b600355600455506200068f945050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620004d057600080fd5b919050565b600080600080600080600060e0888a031215620004f157600080fd5b620004fc88620004b8565b96506200050c60208901620004b8565b95506200051c60408901620004b8565b94506200052c60608901620004b8565b93506200053c60808901620004b8565b92506200054c60a08901620004b8565b915060c0880151905092959891949750929550565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200058b57600080fd5b82516001600160401b0380821115620005a357600080fd5b818501915085601f830112620005b857600080fd5b815181811115620005cd57620005cd62000561565b8060051b604051601f19603f83011681018181108582111715620005f557620005f562000561565b6040529182528482019250838101850191888311156200061457600080fd5b938501935b828510156200063d576200062d85620004b8565b8452938501939285019262000619565b98975050505050505050565b6000602082840312156200065c57600080fd5b5051919050565b80820281158282048414176200068957634e487b7160e01b600052601160045260246000fd5b92915050565b60805160a05160c05160e0516125ac620006fa6000396000818161044c01528181611af40152611bd00152600081816104d401528181610bef0152610e0c015260006104a00152600081816101f60152818161088b015281816109090152610e4901526125ac6000f3fe6080604052600436106101a55760003560e01c80638da5cb5b116100e1578063ad5c46481161008a578063d826492011610064578063d8264920146104c2578063e7cd4a04146104f6578063f0fa55a914610516578063f2fde38b1461053657600080fd5b8063ad5c46481461043a578063ba560ed91461046e578063c74c0fac1461048e57600080fd5b8063942dbff4116100bb578063942dbff4146103e45780639a553968146103fa578063a9a12d431461041a57600080fd5b80638da5cb5b1461038657806393ad9f17146103a457806393badc41146103c457600080fd5b80633e032a3b1161014e57806367755415116101285780636775541514610327578063715018a61461033c57806375d38071146103515780637a39b8d81461037157600080fd5b80633e032a3b146102d2578063531a2211146102e85780635c975abb1461030857600080fd5b80632042e5c21161017f5780632042e5c21461025257806334899be614610272578063372c12b11461029257600080fd5b8063102e3259146101b157806311eac855146101e45780631eb5b6991461023057600080fd5b366101ac57005b600080fd5b3480156101bd57600080fd5b506101d16101cc3660046121f8565b610556565b6040519081526020015b60405180910390f35b3480156101f057600080fd5b506102187f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101db565b34801561023c57600080fd5b5061025061024b366004612224565b61065d565b005b34801561025e57600080fd5b5061025061026d366004612224565b610724565b34801561027e57600080fd5b506101d161028d366004612241565b61085a565b34801561029e57600080fd5b506102c26102ad366004612224565b60056020526000908152604090205460ff1681565b60405190151581526020016101db565b3480156102de57600080fd5b506101d160035481565b3480156102f457600080fd5b506101d1610303366004612282565b610871565b34801561031457600080fd5b50600154600160a01b900460ff166102c2565b34801561033357600080fd5b506102506109b5565b34801561034857600080fd5b506102506109c7565b34801561035d57600080fd5b50600254610218906001600160a01b031681565b34801561037d57600080fd5b506102506109d9565b34801561039257600080fd5b506001546001600160a01b0316610218565b3480156103b057600080fd5b506102506103bf366004612282565b6109e9565b3480156103d057600080fd5b506101d16103df366004612241565b6109f6565b3480156103f057600080fd5b506101d160045481565b34801561040657600080fd5b506101d16104153660046121f8565b610c26565b34801561042657600080fd5b506101d16104353660046121f8565b610e42565b34801561044657600080fd5b506102187f000000000000000000000000000000000000000000000000000000000000000081565b34801561047a57600080fd5b506101d16104893660046121f8565b610e6f565b34801561049a57600080fd5b506102187f000000000000000000000000000000000000000000000000000000000000000081565b3480156104ce57600080fd5b506102187f000000000000000000000000000000000000000000000000000000000000000081565b34801561050257600080fd5b50610250610511366004612224565b610f62565b34801561052257600080fd5b50610250610531366004612282565b611076565b34801561054257600080fd5b50610250610551366004612224565b611164565b60025460405163355188ab60e01b81526001600160a01b038481166004830152600092839291169063355188ab90602401602060405180830381865afa1580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c8919061229b565b90506000846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e91906122b4565b60ff16905061063e81600a6123d1565b61064883866123dd565b61065291906123f4565b925050505b92915050565b6106656111bb565b6001600160a01b0381166106c05760405162461bcd60e51b815260206004820152601360248201527f556e6f52653a207a65726f20616464726573730000000000000000000000000060448201526064015b60405180910390fd5b600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831690811790915560405130907f76d908faefb2e5bb2e5551cce5530e7d157dd5ddafe26554d2320c5cc065009f90600090a350565b61072c6111bb565b6001600160a01b0381166107825760405162461bcd60e51b815260206004820152601360248201527f556e6f52653a207a65726f20616464726573730000000000000000000000000060448201526064016106b7565b6001600160a01b03811660009081526005602052604090205460ff166108105760405162461bcd60e51b815260206004820152602c60248201527f556e6f52653a207768697465206c6973742072656d6f766564206f7220756e6160448201527f6464656420616c7265616479000000000000000000000000000000000000000060648201526084016106b7565b6001600160a01b038116600081815260056020526040808220805460ff191690555130917f2f467772ef0a5478314f3bc2b37d4b2ad29b65f052b2cedc8e2972dda033529291a350565b6000610867848484611201565b90505b9392505050565b60025460405163355188ab60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600092839291169063355188ab90602401602060405180830381865afa1580156108df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610903919061229b565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610965573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098991906122b4565b60ff16905061099981600a6123d1565b6109a383866123dd565b6109ad91906123f4565b949350505050565b6109bd6111bb565b6109c56112a4565b565b6109cf6111bb565b6109c56000611314565b6109e16111bb565b6109c561137e565b6109f16111bb565b600455565b3360009081526005602052604081205460ff16610a555760405162461bcd60e51b815260206004820152601e60248201527f556e6f52653a2045786368616e67654167656e7420466f7262696464656e000060448201526064016106b7565b610a5d6113dc565b610a65611420565b60006001600160a01b03851615610b4c576040516370a0823160e01b81523360048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa158015610abd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae1919061229b565b11610b2e5760405162461bcd60e51b815260206004820152601360248201527f556e6f52653a207a65726f2062616c616e63650000000000000000000000000060448201526064016106b7565b610b3a85333086611463565b610b45858585611201565b9050610b59565b610b568484610e6f565b90505b60008111610ba95760405162461bcd60e51b815260206004820152600f60248201527f556e6f52653a206e6f207061697273000000000000000000000000000000000060448201526064016106b7565b6000606480600354606480610bbe91906123dd565b610bc89190612416565b610bd290856123dd565b610bdc91906123f4565b610be691906123f4565b90506000610c177f0000000000000000000000000000000000000000000000000000000000000000888888866115db565b935050505061086a6001600055565b3360009081526005602052604081205460ff16610c855760405162461bcd60e51b815260206004820152601e60248201527f556e6f52653a2045786368616e67654167656e7420466f7262696464656e000060448201526064016106b7565b610c8d6113dc565b610c95611420565b6040516370a0823160e01b81523360048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa158015610cdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d00919061229b565b11610d4d5760405162461bcd60e51b815260206004820152601360248201527f556e6f52653a207a65726f2062616c616e63650000000000000000000000000060448201526064016106b7565b6001600160a01b03831615610d6857610d6883333085611463565b6000610d748484610556565b905060008111610dc65760405162461bcd60e51b815260206004820152600f60248201527f556e6f52653a206e6f207061697273000000000000000000000000000000000060448201526064016106b7565b6000606480600354606480610ddb91906123dd565b610de59190612416565b610def90856123dd565b610df991906123f4565b610e0391906123f4565b90506000610e337f0000000000000000000000000000000000000000000000000000000000000000878785611a43565b93505050506106576001600055565b600061086a7f00000000000000000000000000000000000000000000000000000000000000008484611201565b60025460405163355188ab60e01b81526001600160a01b038481166004830152600092839291169063355188ab90602401602060405180830381865afa158015610ebd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee1919061229b565b90506000846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4791906122b4565b60ff16905081610f5882600a6123d1565b61064890866123dd565b610f6a6111bb565b6001600160a01b038116610fc05760405162461bcd60e51b815260206004820152601360248201527f556e6f52653a207a65726f20616464726573730000000000000000000000000060448201526064016106b7565b6001600160a01b03811660009081526005602052604090205460ff16156110295760405162461bcd60e51b815260206004820152601960248201527f556e6f52653a207768697465206c69737420616c72656164790000000000000060448201526064016106b7565b6001600160a01b038116600081815260056020526040808220805460ff191660011790555130917f8cd7b0b1a7316eb3e5d781d629cb8bf4e2fd9a8903bdd0f6b894c087d61b21f291a350565b61107e6111bb565b600081116110ce5760405162461bcd60e51b815260206004820152601460248201527f556e6f52653a207a65726f20736c69707061676500000000000000000000000060448201526064016106b7565b6064811061111e5760405162461bcd60e51b815260206004820152601d60248201527f556e6f52653a203130302520736c697070616765206f766572666c6f7700000060448201526064016106b7565b6111296064826123dd565b60035560405181815230907f1b5c61e79b0735d33852817a0af9ed28b909c7c0a2a04abcc0c19bba6d6ba5649060200160405180910390a250565b61116c6111bb565b6001600160a01b0381166111af576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016106b7565b6111b881611314565b50565b6001546001600160a01b031633146109c5576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016106b7565b6002546040517f636cfa0c0000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152848116602483015260448201849052600092839291169063636cfa0c90606401602060405180830381865afa158015611277573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129b919061229b565b95945050505050565b6112ac611d09565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600180546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6113866113dc565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586112f73390565b600154600160a01b900460ff16156109c5576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000540361145c576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600055565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905291516000928392908816916114f59190612429565b6000604051808303816000865af19150503d8060008114611532576040519150601f19603f3d011682016040523d82523d6000602084013e611537565b606091505b50915091508180156115615750805115806115615750808060200190518101906115619190612458565b6115d35760405162461bcd60e51b815260206004820152603160248201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260448201527f616e7366657246726f6d206661696c656400000000000000000000000000000060648201526084016106b7565b505050505050565b6000808690506000816001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015611621573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611645919061247a565b6040516370a0823160e01b81523360048201529091506000906001600160a01b038816906370a0823190602401602060405180830381865afa15801561168f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b3919061229b565b90506000836001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611719919061247a565b90506001600160a01b03891615611737575087611737818589611d4c565b6040517fe6a439050000000000000000000000000000000000000000000000000000000081526001600160a01b03828116600483015289811660248301526000919085169063e6a4390590604401602060405180830381865afa1580156117a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c6919061247a565b6001600160a01b03161461195257604080516002808252606082018352600092602083019080368337019050509050818160008151811061180957611809612497565b60200260200101906001600160a01b031690816001600160a01b031681525050888160018151811061183d5761183d612497565b6001600160a01b0392831660209182029290920101528a166118d057846001600160a01b031663b6f9de95898984336004544261187a91906124ad565b6040518663ffffffff1660e01b81526004016118999493929190612505565b6000604051808303818588803b1580156118b257600080fd5b505af11580156118c6573d6000803e3d6000fd5b5050505050611950565b6040517f5c11d7950000000000000000000000000000000000000000000000000000000081526001600160a01b03861690635c11d7959061191d908b908b9086903390429060040161253a565b600060405180830381600087803b15801561193757600080fd5b505af115801561194b573d6000803e3d6000fd5b505050505b505b6040516370a0823160e01b81523360048201526000906001600160a01b038a16906370a0823190602401602060405180830381865afa158015611999573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119bd919061229b565b9050886001600160a01b03168a6001600160a01b03168c6001600160a01b03167fd30edfe8aafab67575a170d015da0337bcb39e5c9af1b2dfb9294fb75b344ac38b8b8887611a0c9190612416565b6040805193845260208401929092529082015260600160405180910390a4611a348382612416565b9b9a5050505050505050505050565b6000808590506000816001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aad919061247a565b90503331611abc878488611ea2565b6040517fe6a439050000000000000000000000000000000000000000000000000000000081526001600160a01b0388811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301526000919084169063e6a4390590604401602060405180830381865afa158015611b47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b6b919061247a565b6001600160a01b031614611c97576040805160028082526060820183526000926020830190803683370190505090508781600081518110611bae57611bae612497565b60200260200101906001600160a01b031690816001600160a01b0316815250507f000000000000000000000000000000000000000000000000000000000000000081600181518110611c0257611c02612497565b60200260200101906001600160a01b031690816001600160a01b031681525050836001600160a01b031663791ac9478888843360045442611c4391906124ad565b6040518663ffffffff1660e01b8152600401611c6395949392919061253a565b600060405180830381600087803b158015611c7d57600080fd5b505af1158015611c91573d6000803e3d6000fd5b50505050505b33316001600160a01b03888116908a167f1df84ee81df9963f5d40b2a3f717360c1f62daa6f21f69580398a8d570de644c8989611cd48787612416565b6040805193845260208401929092529082015260600160405180910390a3611cfc8282612416565b9998505050505050505050565b600154600160a01b900460ff166109c5576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b1790529151600092839290871691611dbd9190612429565b6000604051808303816000865af19150503d8060008114611dfa576040519150601f19603f3d011682016040523d82523d6000602084013e611dff565b606091505b5091509150818015611e29575080511580611e29575080806020019051810190611e299190612458565b611e9b5760405162461bcd60e51b815260206004820152602b60248201527f5472616e7366657248656c7065723a3a73616665417070726f76653a2061707060448201527f726f7665206661696c656400000000000000000000000000000000000000000060648201526084016106b7565b5050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b179052611f088482611f86565b611f8057604080516001600160a01b038516602482015260006044808301919091528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b179052611f76908590612029565b611f808482612029565b50505050565b6000806000846001600160a01b031684604051611fa39190612429565b6000604051808303816000865af19150503d8060008114611fe0576040519150601f19603f3d011682016040523d82523d6000602084013e611fe5565b606091505b509150915081801561200f57508051158061200f57508080602001905181019061200f9190612458565b80156106525750505050506001600160a01b03163b151590565b600061203e6001600160a01b038416836120aa565b905080516000141580156120635750808060200190518101906120619190612458565b155b156120a5576040517f5274afe70000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201526024016106b7565b505050565b606061086a8383600084600080856001600160a01b031684866040516120d09190612429565b60006040518083038185875af1925050503d806000811461210d576040519150601f19603f3d011682016040523d82523d6000602084013e612112565b606091505b509150915061212286838361212c565b9695505050505050565b6060826121415761213c826121a1565b61086a565b815115801561215857506001600160a01b0384163b155b1561219a576040517f9996b3150000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526024016106b7565b508061086a565b8051156121b15780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03811681146111b857600080fd5b6000806040838503121561220b57600080fd5b8235612216816121e3565b946020939093013593505050565b60006020828403121561223657600080fd5b813561086a816121e3565b60008060006060848603121561225657600080fd5b8335612261816121e3565b92506020840135612271816121e3565b929592945050506040919091013590565b60006020828403121561229457600080fd5b5035919050565b6000602082840312156122ad57600080fd5b5051919050565b6000602082840312156122c657600080fd5b815160ff8116811461086a57600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561232857816000190482111561230e5761230e6122d7565b8085161561231b57918102915b93841c93908002906122f2565b509250929050565b60008261233f57506001610657565b8161234c57506000610657565b8160018114612362576002811461236c57612388565b6001915050610657565b60ff84111561237d5761237d6122d7565b50506001821b610657565b5060208310610133831016604e8410600b84101617156123ab575081810a610657565b6123b583836122ed565b80600019048211156123c9576123c96122d7565b029392505050565b600061086a8383612330565b8082028115828204841417610657576106576122d7565b60008261241157634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610657576106576122d7565b6000825160005b8181101561244a5760208186018101518583015201612430565b506000920191825250919050565b60006020828403121561246a57600080fd5b8151801515811461086a57600080fd5b60006020828403121561248c57600080fd5b815161086a816121e3565b634e487b7160e01b600052603260045260246000fd5b80820180821115610657576106576122d7565b60008151808452602080850194506020840160005b838110156124fa5781516001600160a01b0316875295820195908201906001016124d5565b509495945050505050565b84815260806020820152600061251e60808301866124c0565b6001600160a01b03949094166040830152506060015292915050565b85815284602082015260a06040820152600061255960a08301866124c0565b6001600160a01b039490941660608301525060800152939250505056fea264697066735822122032c97391f6969eb34fa335187d939a5d67971a53707146974b86d28cb8b006da64736f6c63430008170033",
  "deployedBytecode": "0x6080604052600436106101a55760003560e01c80638da5cb5b116100e1578063ad5c46481161008a578063d826492011610064578063d8264920146104c2578063e7cd4a04146104f6578063f0fa55a914610516578063f2fde38b1461053657600080fd5b8063ad5c46481461043a578063ba560ed91461046e578063c74c0fac1461048e57600080fd5b8063942dbff4116100bb578063942dbff4146103e45780639a553968146103fa578063a9a12d431461041a57600080fd5b80638da5cb5b1461038657806393ad9f17146103a457806393badc41146103c457600080fd5b80633e032a3b1161014e57806367755415116101285780636775541514610327578063715018a61461033c57806375d38071146103515780637a39b8d81461037157600080fd5b80633e032a3b146102d2578063531a2211146102e85780635c975abb1461030857600080fd5b80632042e5c21161017f5780632042e5c21461025257806334899be614610272578063372c12b11461029257600080fd5b8063102e3259146101b157806311eac855146101e45780631eb5b6991461023057600080fd5b366101ac57005b600080fd5b3480156101bd57600080fd5b506101d16101cc3660046121f8565b610556565b6040519081526020015b60405180910390f35b3480156101f057600080fd5b506102187f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101db565b34801561023c57600080fd5b5061025061024b366004612224565b61065d565b005b34801561025e57600080fd5b5061025061026d366004612224565b610724565b34801561027e57600080fd5b506101d161028d366004612241565b61085a565b34801561029e57600080fd5b506102c26102ad366004612224565b60056020526000908152604090205460ff1681565b60405190151581526020016101db565b3480156102de57600080fd5b506101d160035481565b3480156102f457600080fd5b506101d1610303366004612282565b610871565b34801561031457600080fd5b50600154600160a01b900460ff166102c2565b34801561033357600080fd5b506102506109b5565b34801561034857600080fd5b506102506109c7565b34801561035d57600080fd5b50600254610218906001600160a01b031681565b34801561037d57600080fd5b506102506109d9565b34801561039257600080fd5b506001546001600160a01b0316610218565b3480156103b057600080fd5b506102506103bf366004612282565b6109e9565b3480156103d057600080fd5b506101d16103df366004612241565b6109f6565b3480156103f057600080fd5b506101d160045481565b34801561040657600080fd5b506101d16104153660046121f8565b610c26565b34801561042657600080fd5b506101d16104353660046121f8565b610e42565b34801561044657600080fd5b506102187f000000000000000000000000000000000000000000000000000000000000000081565b34801561047a57600080fd5b506101d16104893660046121f8565b610e6f565b34801561049a57600080fd5b506102187f000000000000000000000000000000000000000000000000000000000000000081565b3480156104ce57600080fd5b506102187f000000000000000000000000000000000000000000000000000000000000000081565b34801561050257600080fd5b50610250610511366004612224565b610f62565b34801561052257600080fd5b50610250610531366004612282565b611076565b34801561054257600080fd5b50610250610551366004612224565b611164565b60025460405163355188ab60e01b81526001600160a01b038481166004830152600092839291169063355188ab90602401602060405180830381865afa1580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c8919061229b565b90506000846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e91906122b4565b60ff16905061063e81600a6123d1565b61064883866123dd565b61065291906123f4565b925050505b92915050565b6106656111bb565b6001600160a01b0381166106c05760405162461bcd60e51b815260206004820152601360248201527f556e6f52653a207a65726f20616464726573730000000000000000000000000060448201526064015b60405180910390fd5b600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831690811790915560405130907f76d908faefb2e5bb2e5551cce5530e7d157dd5ddafe26554d2320c5cc065009f90600090a350565b61072c6111bb565b6001600160a01b0381166107825760405162461bcd60e51b815260206004820152601360248201527f556e6f52653a207a65726f20616464726573730000000000000000000000000060448201526064016106b7565b6001600160a01b03811660009081526005602052604090205460ff166108105760405162461bcd60e51b815260206004820152602c60248201527f556e6f52653a207768697465206c6973742072656d6f766564206f7220756e6160448201527f6464656420616c7265616479000000000000000000000000000000000000000060648201526084016106b7565b6001600160a01b038116600081815260056020526040808220805460ff191690555130917f2f467772ef0a5478314f3bc2b37d4b2ad29b65f052b2cedc8e2972dda033529291a350565b6000610867848484611201565b90505b9392505050565b60025460405163355188ab60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600092839291169063355188ab90602401602060405180830381865afa1580156108df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610903919061229b565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610965573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098991906122b4565b60ff16905061099981600a6123d1565b6109a383866123dd565b6109ad91906123f4565b949350505050565b6109bd6111bb565b6109c56112a4565b565b6109cf6111bb565b6109c56000611314565b6109e16111bb565b6109c561137e565b6109f16111bb565b600455565b3360009081526005602052604081205460ff16610a555760405162461bcd60e51b815260206004820152601e60248201527f556e6f52653a2045786368616e67654167656e7420466f7262696464656e000060448201526064016106b7565b610a5d6113dc565b610a65611420565b60006001600160a01b03851615610b4c576040516370a0823160e01b81523360048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa158015610abd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae1919061229b565b11610b2e5760405162461bcd60e51b815260206004820152601360248201527f556e6f52653a207a65726f2062616c616e63650000000000000000000000000060448201526064016106b7565b610b3a85333086611463565b610b45858585611201565b9050610b59565b610b568484610e6f565b90505b60008111610ba95760405162461bcd60e51b815260206004820152600f60248201527f556e6f52653a206e6f207061697273000000000000000000000000000000000060448201526064016106b7565b6000606480600354606480610bbe91906123dd565b610bc89190612416565b610bd290856123dd565b610bdc91906123f4565b610be691906123f4565b90506000610c177f0000000000000000000000000000000000000000000000000000000000000000888888866115db565b935050505061086a6001600055565b3360009081526005602052604081205460ff16610c855760405162461bcd60e51b815260206004820152601e60248201527f556e6f52653a2045786368616e67654167656e7420466f7262696464656e000060448201526064016106b7565b610c8d6113dc565b610c95611420565b6040516370a0823160e01b81523360048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa158015610cdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d00919061229b565b11610d4d5760405162461bcd60e51b815260206004820152601360248201527f556e6f52653a207a65726f2062616c616e63650000000000000000000000000060448201526064016106b7565b6001600160a01b03831615610d6857610d6883333085611463565b6000610d748484610556565b905060008111610dc65760405162461bcd60e51b815260206004820152600f60248201527f556e6f52653a206e6f207061697273000000000000000000000000000000000060448201526064016106b7565b6000606480600354606480610ddb91906123dd565b610de59190612416565b610def90856123dd565b610df991906123f4565b610e0391906123f4565b90506000610e337f0000000000000000000000000000000000000000000000000000000000000000878785611a43565b93505050506106576001600055565b600061086a7f00000000000000000000000000000000000000000000000000000000000000008484611201565b60025460405163355188ab60e01b81526001600160a01b038481166004830152600092839291169063355188ab90602401602060405180830381865afa158015610ebd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee1919061229b565b90506000846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4791906122b4565b60ff16905081610f5882600a6123d1565b61064890866123dd565b610f6a6111bb565b6001600160a01b038116610fc05760405162461bcd60e51b815260206004820152601360248201527f556e6f52653a207a65726f20616464726573730000000000000000000000000060448201526064016106b7565b6001600160a01b03811660009081526005602052604090205460ff16156110295760405162461bcd60e51b815260206004820152601960248201527f556e6f52653a207768697465206c69737420616c72656164790000000000000060448201526064016106b7565b6001600160a01b038116600081815260056020526040808220805460ff191660011790555130917f8cd7b0b1a7316eb3e5d781d629cb8bf4e2fd9a8903bdd0f6b894c087d61b21f291a350565b61107e6111bb565b600081116110ce5760405162461bcd60e51b815260206004820152601460248201527f556e6f52653a207a65726f20736c69707061676500000000000000000000000060448201526064016106b7565b6064811061111e5760405162461bcd60e51b815260206004820152601d60248201527f556e6f52653a203130302520736c697070616765206f766572666c6f7700000060448201526064016106b7565b6111296064826123dd565b60035560405181815230907f1b5c61e79b0735d33852817a0af9ed28b909c7c0a2a04abcc0c19bba6d6ba5649060200160405180910390a250565b61116c6111bb565b6001600160a01b0381166111af576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016106b7565b6111b881611314565b50565b6001546001600160a01b031633146109c5576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016106b7565b6002546040517f636cfa0c0000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152848116602483015260448201849052600092839291169063636cfa0c90606401602060405180830381865afa158015611277573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129b919061229b565b95945050505050565b6112ac611d09565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600180546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6113866113dc565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586112f73390565b600154600160a01b900460ff16156109c5576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000540361145c576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600055565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905291516000928392908816916114f59190612429565b6000604051808303816000865af19150503d8060008114611532576040519150601f19603f3d011682016040523d82523d6000602084013e611537565b606091505b50915091508180156115615750805115806115615750808060200190518101906115619190612458565b6115d35760405162461bcd60e51b815260206004820152603160248201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260448201527f616e7366657246726f6d206661696c656400000000000000000000000000000060648201526084016106b7565b505050505050565b6000808690506000816001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015611621573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611645919061247a565b6040516370a0823160e01b81523360048201529091506000906001600160a01b038816906370a0823190602401602060405180830381865afa15801561168f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b3919061229b565b90506000836001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611719919061247a565b90506001600160a01b03891615611737575087611737818589611d4c565b6040517fe6a439050000000000000000000000000000000000000000000000000000000081526001600160a01b03828116600483015289811660248301526000919085169063e6a4390590604401602060405180830381865afa1580156117a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c6919061247a565b6001600160a01b03161461195257604080516002808252606082018352600092602083019080368337019050509050818160008151811061180957611809612497565b60200260200101906001600160a01b031690816001600160a01b031681525050888160018151811061183d5761183d612497565b6001600160a01b0392831660209182029290920101528a166118d057846001600160a01b031663b6f9de95898984336004544261187a91906124ad565b6040518663ffffffff1660e01b81526004016118999493929190612505565b6000604051808303818588803b1580156118b257600080fd5b505af11580156118c6573d6000803e3d6000fd5b5050505050611950565b6040517f5c11d7950000000000000000000000000000000000000000000000000000000081526001600160a01b03861690635c11d7959061191d908b908b9086903390429060040161253a565b600060405180830381600087803b15801561193757600080fd5b505af115801561194b573d6000803e3d6000fd5b505050505b505b6040516370a0823160e01b81523360048201526000906001600160a01b038a16906370a0823190602401602060405180830381865afa158015611999573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119bd919061229b565b9050886001600160a01b03168a6001600160a01b03168c6001600160a01b03167fd30edfe8aafab67575a170d015da0337bcb39e5c9af1b2dfb9294fb75b344ac38b8b8887611a0c9190612416565b6040805193845260208401929092529082015260600160405180910390a4611a348382612416565b9b9a5050505050505050505050565b6000808590506000816001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aad919061247a565b90503331611abc878488611ea2565b6040517fe6a439050000000000000000000000000000000000000000000000000000000081526001600160a01b0388811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301526000919084169063e6a4390590604401602060405180830381865afa158015611b47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b6b919061247a565b6001600160a01b031614611c97576040805160028082526060820183526000926020830190803683370190505090508781600081518110611bae57611bae612497565b60200260200101906001600160a01b031690816001600160a01b0316815250507f000000000000000000000000000000000000000000000000000000000000000081600181518110611c0257611c02612497565b60200260200101906001600160a01b031690816001600160a01b031681525050836001600160a01b031663791ac9478888843360045442611c4391906124ad565b6040518663ffffffff1660e01b8152600401611c6395949392919061253a565b600060405180830381600087803b158015611c7d57600080fd5b505af1158015611c91573d6000803e3d6000fd5b50505050505b33316001600160a01b03888116908a167f1df84ee81df9963f5d40b2a3f717360c1f62daa6f21f69580398a8d570de644c8989611cd48787612416565b6040805193845260208401929092529082015260600160405180910390a3611cfc8282612416565b9998505050505050505050565b600154600160a01b900460ff166109c5576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b1790529151600092839290871691611dbd9190612429565b6000604051808303816000865af19150503d8060008114611dfa576040519150601f19603f3d011682016040523d82523d6000602084013e611dff565b606091505b5091509150818015611e29575080511580611e29575080806020019051810190611e299190612458565b611e9b5760405162461bcd60e51b815260206004820152602b60248201527f5472616e7366657248656c7065723a3a73616665417070726f76653a2061707060448201527f726f7665206661696c656400000000000000000000000000000000000000000060648201526084016106b7565b5050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b179052611f088482611f86565b611f8057604080516001600160a01b038516602482015260006044808301919091528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b179052611f76908590612029565b611f808482612029565b50505050565b6000806000846001600160a01b031684604051611fa39190612429565b6000604051808303816000865af19150503d8060008114611fe0576040519150601f19603f3d011682016040523d82523d6000602084013e611fe5565b606091505b509150915081801561200f57508051158061200f57508080602001905181019061200f9190612458565b80156106525750505050506001600160a01b03163b151590565b600061203e6001600160a01b038416836120aa565b905080516000141580156120635750808060200190518101906120619190612458565b155b156120a5576040517f5274afe70000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201526024016106b7565b505050565b606061086a8383600084600080856001600160a01b031684866040516120d09190612429565b60006040518083038185875af1925050503d806000811461210d576040519150601f19603f3d011682016040523d82523d6000602084013e612112565b606091505b509150915061212286838361212c565b9695505050505050565b6060826121415761213c826121a1565b61086a565b815115801561215857506001600160a01b0384163b155b1561219a576040517f9996b3150000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526024016106b7565b508061086a565b8051156121b15780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03811681146111b857600080fd5b6000806040838503121561220b57600080fd5b8235612216816121e3565b946020939093013593505050565b60006020828403121561223657600080fd5b813561086a816121e3565b60008060006060848603121561225657600080fd5b8335612261816121e3565b92506020840135612271816121e3565b929592945050506040919091013590565b60006020828403121561229457600080fd5b5035919050565b6000602082840312156122ad57600080fd5b5051919050565b6000602082840312156122c657600080fd5b815160ff8116811461086a57600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561232857816000190482111561230e5761230e6122d7565b8085161561231b57918102915b93841c93908002906122f2565b509250929050565b60008261233f57506001610657565b8161234c57506000610657565b8160018114612362576002811461236c57612388565b6001915050610657565b60ff84111561237d5761237d6122d7565b50506001821b610657565b5060208310610133831016604e8410600b84101617156123ab575081810a610657565b6123b583836122ed565b80600019048211156123c9576123c96122d7565b029392505050565b600061086a8383612330565b8082028115828204841417610657576106576122d7565b60008261241157634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610657576106576122d7565b6000825160005b8181101561244a5760208186018101518583015201612430565b506000920191825250919050565b60006020828403121561246a57600080fd5b8151801515811461086a57600080fd5b60006020828403121561248c57600080fd5b815161086a816121e3565b634e487b7160e01b600052603260045260246000fd5b80820180821115610657576106576122d7565b60008151808452602080850194506020840160005b838110156124fa5781516001600160a01b0316875295820195908201906001016124d5565b509495945050505050565b84815260806020820152600061251e60808301866124c0565b6001600160a01b03949094166040830152506060015292915050565b85815284602082015260a06040820152600061255960a08301866124c0565b6001600160a01b039490941660608301525060800152939250505056fea264697066735822122032c97391f6969eb34fa335187d939a5d67971a53707146974b86d28cb8b006da64736f6c63430008170033",
  "devdoc": {
    "errors": {
      "AddressEmptyCode(address)": [
        {
          "details": "There's no code at `target` (it is not a contract)."
        }
      ],
      "AddressInsufficientBalance(address)": [
        {
          "details": "The ETH balance of the account is not enough to perform the operation."
        }
      ],
      "EnforcedPause()": [
        {
          "details": "The operation failed because the contract is paused."
        }
      ],
      "ExpectedPause()": [
        {
          "details": "The operation failed because the contract is not paused."
        }
      ],
      "FailedInnerCall()": [
        {
          "details": "A call to an address target failed. The target may have reverted."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ],
      "SafeERC20FailedOperation(address)": [
        {
          "details": "An operation with an ERC20 token failed."
        }
      ]
    },
    "events": {
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4199,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 1395,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 4080,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "_paused",
        "offset": 20,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 9388,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "oraclePriceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 9390,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "slippage",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 9395,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "swapDeadline",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 9399,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "whiteList",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}